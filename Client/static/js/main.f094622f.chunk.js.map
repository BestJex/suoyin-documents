{"version":3,"sources":["assets/loginbg.png","common/config.js","common/sideMenu.js","common/authService.js","setup/index.js","common/loading.js","dashboard/index.js","helper/index.js","download/index.js","role/index.js","documents/personal/components/TableHeader.js","common/component.js","documents/personal/components/selectUser.js","documents/personal/components/TablePagination.js","documents/personal/components/moveToFolder.js","documents/personal/index.js","permission/index.js","logs/index.js","errorpage/index.js","login/index.js","documents/share/TableHeader.js","documents/share/docFrom.js","documents/share/docTo.js","documents/share/index.js","setting/index.js","user/userCard.js","user/index.js","user/muserCard.js","user/manage.js","register/index.js","user/edit.js","user/add.js","role/roleadd.js","user/pwd.js","person/index.js","test/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","sideMenu","state","documentsChecked","userChecked","systemChecked","onClickExpansionDocumentsMenu","_this","setState","onClickExpansionUserMenu","onClickExpansionSystemMenu","JSON","parse","localStorage","getItem","classes","this","props","permission","getToken","u","react_default","a","createElement","react","List","react_router_dom","to","style","textDecoration","ListItem","button","className","listItem","ListItemIcon","sideListItemIcon","Dashboard_default","ListItemText","listItemText","primary","_1","_","indexOf","onClick","KeyboardArrowDown_default","AttachFile_default","Collapse","in","open","sideWidth","minSideWidth","Description_default","Stars_default","Divider","_2","SupervisorAccount_default","AccountBox_default","split","AccountCircle_default","_3","SupervisedUserCircle_default","_4","VerifiedUser_default","_5","Settings_default","Build_default","History_default","React","Component","withStyles","theme","marginLeft","padding","color","Object","defineProperty","paddingLeft","transition","transitions","create","easing","sharp","duration","enteringScreen","breakpoints","down","AuthService","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","domain","document","token","t","info","userData","_this2","Promise","resolve","reject","fetch","concat","method","headers","Accept","Content-Type","body","then","res","json","resJson","catch","err","url","_this3","x-access-info","stringify","x-access-token","error","data","_this4","Setup","onClickStep","v","parseInt","conn","connuser","connpwd","connaddress","connport","conndatabase","authService","postData","result","step","step0Status","message","user","configuser","configpwd","md5","configdisplayname","step1Status","onChangeConnUser","e","target","value","onChangeConnPWD","onChangeConnAddress","onChangeConnPort","onChangeConnDatabase","onChangeConfigUser","onChangeConfigPWD","onChangeConfigDisplyName","onClickLogin","history","push","CssBaseline","Container","maxWidth","Content","Typography","component","left","src","require","alt","right","Grid","container","box","justify","direction","variant","margin","divider","Fragment","item","xs","spacing","TextField","label","onChange","text","InputLabelProps","shrink","type","Button","width","disabled","display","justifyContent","alignItems","backgroundColor","palette","main","height","icon","marginTop","marginRight","paper","rightIcon","cover","cursor","loading","number","map","key","grey","fake","&:nth-child(2n)","Dashboard","_isMounted","onClickNavDoc","onClickNavHelper","acount","scount","userTop5","userTop10","onChangeBarTitle","RefreshInfo","onChangeChildFuncion","onChangeRefresh","_this$state","list","length","i","root","Card","card","size","dashBtnIcon","FileCopy_default","fontSize","title","gutterBottom","Date","toDateString","Share_default","Assessment_default","AccountBalance_default","CardMedia","media","image","CardContent","CardActions","Paper","Avatar","AssignmentInd_default","displayName","secondary","inline","accountName","common_loading","flexGrow","minWidth","marginBottom","helper","actionBar","search","searchIcon","Search_default","InputBase","placeholder","inputRoot","input","inputInput","fullWidth","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","heading","ExpansionPanelDetails","flex","position","borderRadius","shape","fade","common","white","&:hover","up","pointerEvents","Download","onClickDownloadFile","downloadCode","sid","Element","setAttribute","downloadPublicFile","click","onChangeDownloadCode","fileId","fileName","expireTime","fileSize","location","pathname","filename","timestampToTime","timestamp","date","getFullYear","getMonth","getDate","details","content","controls","helperText","flexDirection","paddingBottom","playIcon","role","onClickNavigationAdd","onClickRemoveUser","roleId","userId","noticeMessage","onClickOpenUserList","rightDrawer","usersList","searchUsersList","onClickNoticeClose","onClickListItemSelectUser","onClickOpenMenu","event","anchorEl","currentTarget","getAttribute","onClickCloseMenu","onClickCloseRightDrawer","onClickDeleteRole","_id","onChangeSearchUsersList","searchTextField","newUserList","filter","x","datas","MenuOpen","Boolean","GroupAdd_default","bar","IconButton","PersonAdd_default","data-id","DeleteForever_default","Popover","onClose","anchorOrigin","vertical","horizontal","elevation","transformOrigin","member","y","Chip","onDelete","chip","Drawer","anchor","paperAnchorRight","drawerPaper","toolbar","ClassNames","drawerToolBar","ArrowForward_default","dense","Snackbar","ContentProps","aria-describedby","SnackbarContent","flexWrap","mixins","background","maxHeight","paddingTop","boxShadow","TableHeader","createSortHandler","property","onRequestSort","_this$props","order","orderBy","TableHead","TableRow","TableCell","sortDirection","Tooltip","placement","enterDelay","TableSortLabel","active","align","fill","fillOpacity","attributeType","attributeName","from","dur","repeatCount","selectUser","onChangeConfirm","selected","onClickAddUsersToList","onClickCancel","onChangeSelected","s","l","find","other","onChangeRadioGroup","radioGroupValue","onChangeSelectUserOrRole","selectUserOrRole","onChangeSelectRoleOrUser","selectRoleOrUser","onClickSearchUserOrRole","progress","onClickDelSelected","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","DialogTitle","RadioGroup","aria-label","name","row","FormControlLabel","control","Radio","DialogContent","InputProps","endAdornment","InputAdornment","LinearProgress","Face_default","description","DialogActions","autoFocus","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","flexShrink","withTheme","moveToFolder","onClickSelectFolder","checked","filePath","values","top","undefined","Checkbox","tabIndex","disableRipple","metadata","bottom","onClickConfirmMoveFile","onClickCloseMoveFile","Documents","handleRequestSort","onClickCreateFolder","folderName","path","Refresh","noticeOpen","onChangeCreatefolder","onClickSelectOne","typename","uploadDate","newSelected","handleChangePage","handleChangeRowsPerPage","isSelected","onChangeSearchSelectFileName","searchSelectFileName","searchData","onChangeSearchSelectType","searchSelectType","onChangeSearchSelectFileSize","searchSelectFileSize","onChangeSearchPublicShareExpireTime","searchPublicShareExpireTime","onClickTabIndex","tabBarButtonArea","onChangeSearch","onChangeFileInput","InputFile","stepOneValue","files","onMouseOverSearch","searchStyle","onClickSelectUsersOpenDialog","onClickViewDetail","viewdetail","onClickUploadFile","uploadloading","toFixed","version","status","userDisplayName","d","shareId","publicShareId","publicShareExpireTime","publicShareUrl","FormData","append","uploadFile","downloadFile","onClickDeleteFile","deleteloading","shareUsersList","selectWindowsUser","onChangeTabsValue","tabValue","onChangeShareUserTextField","shareUserTextField","onClickShareAddUserToList","onClickBreadcrumb","onCloseSelectUsersDialog","c","onClickSubmitShare","onClickCloseShare","onClickMoveUserList","onClickCreatePublicShare","codeLength","publicShareDownloadCode","toString","window","host","UUID","v4","onClickClosePublicShare","openMoveFile","onClickOpenMoveFile","onChangeDateChange","onClickClickAway","AwaySearch","onClickRename","onClickCancelBtnRename","onClickConfirmBtnRename","newFileName","onChangeRename","onClickShareFileButton","file","onClickTabBottonBack","onClickCellFileName","currentpath","onChangePublicShareDownloadCode","toolBar","subBar","stepOneError","AwaySearchInput","searchSelectOneFileType","fileType","fileCreateTime","fileOwner","fileStatus","filepublicShareId","showRename","listenerDateFormatInput","listenerSelectUser","objects","assign","b","array","cmp","stabilizedThis","el","index","sort","desc","emptyRows","min","openRename","accept","multiple","ref","ele","upload","htmlFor","Attachment_default","wrapper","aria-haspopup","onClickOpenTagsMenu","searchLabel","startAdornment","noValidate","LabelTitle","breadcrumb","CloudUploadOutlined_default","FolderOpen_default","HighlightOff_default","highlight","deleteProgress","CloudDownloadOutlined_default","HowToVote_default","Create_default","DeleteSweep_default","Table","TableHeader_TableHeader","numSelected","rowCount","TableBody","stableSort","getSorting","slice","n","borderLeft","scope","link1","link2","tableCell","colSpan","borderBottom","fileTitle","cellTitle","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","SelectProps","native","onChangeRowsPerPage","labelRowsPerPage","ActionsComponent","components_selectUser","components_moveToFolder","Popper","_ref","TransitionProps","Fade","timeout","rename","AppBar","Tabs","Tab","rightDrawerPaper","TypographyFileName","textFieldCode","Done_default","actionShareButtom","YoutubeSearchedFor_default","multiline","textFieldShare","rows","listShareAddUser","confirmButton","cancelButton","flexcentercenter","textField","img","lighten","light","dark","borderRight","shareButton","closeBottom","flexFlow","wordBreak","zIndex","overflow","Userauth","onClickUpdateRoleCheck","onClickRoleItem","check1","check2","check3","check4","check5","check6","check7","check8","check9","check10","check11","check12","onClickClearRole","onClickUpdateRole","_6","_7","_8","_9","_10","_11","_12","selectedIndex","textAlign","classNames","rightColumn","String","iconsMarginRight","mainBar","typography","pxToRem","secondaryHeading","verticalAlign","column","flexBasis","leftColumn","link","logs","infoBar","table","actionModule","actionDetails","actionTime","overflowX","objectSpread","gutters","SignIn","_Mount","handleEnterKey","keyCode","username","password","test","login","setItem","onChangeUserName","onChangePassword","onClickNoticeOpen","onClickReset","addEventListener","removeEventListener","handleEenterKey","logoText","MailOutline_default","LockOutlined_default","Input_default","lineHeight","DocFrom","handleSelectAllClick","tableWrapper","share_TableHeader_TableHeader","hover","SimpleTabs","handleChange","indicatorColor","textColor","centered","docFrom","docTo","Setting","onChangeTabsChange","serverinfo","fileupload","quotaAndexpire","labelmargin","InputLabel","upladFileSize","excludeExtension","fileShareExpires","Navigation_default","extendedIcon","UserCard","listLayout","avatar","Block_default","Switch","list_user_card","listItem_user_card","listItemText_user_card","CardMembership_default","SettingsPhone_default","phone","DateRange_default","brithday","Business_default","department","PinDrop_default","address","buttonLeftSpace","User","updateRefreshPage","onChangeUserList","userListLayout","onClickSearchBtn","searchButton","onChangeUserSearch","userSearch","onClickUserSearch","onClickNavigateBefore","before","after","onClickNavigateNext","disabledColor","ViewModule_default","ViewList_default","userSearchBtn","userCard","uid","birthday","NavigateBefore_default","NavigateNext_default","handleClick","handleClose","onClickUserEdit","onClickUserPwd","aria-owns","MoreVert_default","Menu","MenuItem","Delete_default","UserManage","onChangeUserManageList","userManageListLayout","onClickAddUserManage","onChangeUserManageSearch","userManageSearch","muserCard","list_userManage_card","listItem_userManage_card","listItemText_userManage_card","onClickRegister","repassword","onChangeRePassword","sm","md","lg","borderTopLeftRadius","borderTopRightRadius","alignContent","Mail_default","xl","Lock_default","Edit","onChangeTab","onClickBack","go","onChangeStatus","currentState","onChangeField","_e$target","onClickSave","onChangeDeleteUser","querySearch","_this$state3","cardContent","DesktopAccessDisabled_default","FormControl","FormLabel","bottomCard","bottomButton","Reply_default","Save_default","Add","passWord","_this$state4","RoleAdd","onChangeTabIndex","onClickNavigationBack","onChangeRoleName","roleName","onChangeRoleDescription","roleDescription","onChangeSubmit","Passwrd","onChangeFieldPwd","onChangeFieldRePwd","rePassWord","ArrowBack_default","unescape","pos","ClickAway","ClickAwayListener","handleClickAway","console","log","onClickAway","App","onClickDrawerOpen","handleDrawerClose","handleProfileMenuOpen","handleProfileMenuClose","handleLogout","removeItem","localStorageKey","clear","barTitle","refresh","child","onClickRefresh","isTokenExpired","decode","exp","now","barHide","isMenuOpen","MuiThemeProvider","react_router","render","loggedIn","appBarHide","appBar","Toolbar","menuButton","menuIconButtonTransform","Menu_default","noWrap","sectionDesktop","CircularProgress","Refresh_default","minPaper","common_sideMenu","minMain","exact","dashboard","share","src_role","src_user","edit","add","manage","pwd","personal","src_permission","src_logs","setting","roleadd","person","src_helper","Errorpage","register","setup","download","Login","createMuiTheme","contrastText","useNextVariants","_paper","_main","drawer","whiteSpace","leavingScreen","transform","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f094622f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginbg.44b8eb74.png\";","const LocalStorageKey = 'd.c.i'\n\nexport { LocalStorageKey }\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AttachFile from '@material-ui/icons/AttachFile';\nimport Settings from '@material-ui/icons/Settings';\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccount';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\nimport History from '@material-ui/icons/History';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport Stars from '@material-ui/icons/Stars';\nimport Dashboard from '@material-ui/icons/Dashboard';\nimport Description from '@material-ui/icons/Description';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport BuildIcon from '@material-ui/icons/Build';\n\nimport Collapse from '@material-ui/core/Collapse';\n\nimport { LocalStorageKey } from './config.js'\n\nclass sideMenu extends React.Component {\n\n    state = {\n        documentsChecked: false,\n        userChecked: false,\n        systemChecked: false\n    }\n\n    onClickExpansionDocumentsMenu = () => {\n        this.setState({ documentsChecked: !this.state.documentsChecked })\n    }\n\n    onClickExpansionUserMenu = () => {\n        this.setState({ userChecked: !this.state.userChecked })\n    }\n\n    onClickExpansionSystemMenu = () => {\n        this.setState({ systemChecked: !this.state.systemChecked })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    render() {\n        const { classes } = this.props;\n        const permission = this.getToken().u.p\n\n        return (\n            <Fragment>\n                <List>\n                    <Link to={'/'} style={{ textDecoration: 'none' }}>\n                        <ListItem button className={classes.listItem} >\n                            <ListItemIcon className={classes.sideListItemIcon}>\n                                <Dashboard />\n                            </ListItemIcon>\n                            <ListItemText className={classes.listItemText} primary={'概览'} />\n                        </ListItem>\n                    </Link>\n\n                    {\n                        permission._1._.indexOf('1') !== -1 ?\n                            <Fragment>\n                                <ListItem button className={classes.listItem} onClick={this.onClickExpansionDocumentsMenu}>\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        {this.state.documentsChecked ? <KeyboardArrowDown /> : <AttachFile />}\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'个人文档'} />\n                                </ListItem>\n                                <Collapse in={this.state.documentsChecked}>\n                                    <Link to={'/doc'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <Description />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'我的文档'} />\n                                        </ListItem>\n                                    </Link>\n                                    <Link to={'/share'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <Stars />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'分享文档'} />\n                                        </ListItem>\n                                    </Link>\n                                    <Divider />\n                                </Collapse>\n                            </Fragment>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._2._.indexOf('1') !== -1 ?\n                            <Fragment>\n                                <ListItem button className={classes.listItem} onClick={this.onClickExpansionUserMenu}>\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        {this.state.userChecked ? <KeyboardArrowDown /> : <SupervisorAccount />}\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'人员信息'} />\n                                </ListItem>\n                                <Collapse in={this.state.userChecked}>\n                                    <Link to={'/user'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <AccountBox />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'人员列表'} />\n                                        </ListItem>\n                                    </Link>\n                                    {\n                                        permission._2._.split(',')[1].indexOf('1') !== -1 ?\n                                            <Link to={'/muser'} style={{ textDecoration: 'none' }}>\n                                                <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                                        <AccountCircle />\n                                                    </ListItemIcon>\n                                                    <ListItemText className={classes.listItemText} primary={'设置人员'} />\n                                                </ListItem>\n                                            </Link>\n                                            :\n                                            null\n                                    }\n                                    <Divider />\n                                </Collapse>\n                            </Fragment>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._3._.indexOf('1') !== -1 ?\n                            <Link to={'/role'} style={{ textDecoration: 'none' }}>\n                                <ListItem button className={classes.listItem} >\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        <SupervisedUserCircle />\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'人员角色'} />\n                                </ListItem>\n                            </Link>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._4._.indexOf('1') !== -1 ?\n                            <Link to={'/auth'} style={{ textDecoration: 'none' }}>\n                                <ListItem button className={classes.listItem} >\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        <VerifiedUser />\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'用户授权'} />\n                                </ListItem>\n                            </Link>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._5._.indexOf('1') !== -1 ?\n                            <Fragment>\n                                <ListItem button className={classes.listItem} onClick={this.onClickExpansionSystemMenu}>\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        {this.state.systemChecked ? <KeyboardArrowDown /> : <Settings />}\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'设置'} />\n                                </ListItem>\n\n                                <Collapse in={this.state.systemChecked}>\n                                    <Link to={'/setting'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <BuildIcon />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'系统设置'} />\n                                        </ListItem>\n                                    </Link>\n                                    <Link to={'/log'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <History />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'系统日志'} />\n                                        </ListItem>\n                                    </Link>\n                                </Collapse>\n                            </Fragment>\n                            :\n                            null\n                    }\n                </List>\n            </Fragment >\n        );\n    }\n}\n\nconst styles = theme => ({\n    listItem: {\n        marginLeft: 0\n    },\n    listItemText: {\n        padding: '0',\n        color: 'black'\n    },\n    sideListItemIcon: {\n        marginLeft: 8\n    },\n    sideWidth: {\n        paddingLeft: 40,\n        transition: theme.transitions.create('padding', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        [theme.breakpoints.down('md')]: {\n            paddingLeft: 16,\n            transition: theme.transitions.create('padding', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            })\n        },\n    },\n    minSideWidth: {\n        paddingLeft: 16,\n        transition: theme.transitions.create('padding', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        })\n    }\n})\n\nsideMenu.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(sideMenu);","import React from 'react';\nimport { LocalStorageKey } from './config'\n\nexport default class AuthService extends React.Component {\n\n    constructor() {\n        super()\n        this.domain = 'http://' + document.domain + ':8080'\n\n        this.token = localStorage.getItem(LocalStorageKey) !== null ? JSON.parse(localStorage.getItem(LocalStorageKey)).t : null\n        this.info = localStorage.getItem(LocalStorageKey) !== null ? JSON.parse(localStorage.getItem(LocalStorageKey)).u : null\n    }\n\n    login(userData) {\n        return new Promise((resolve, reject) => {\n            fetch(`${this.domain}/login`, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: userData\n            })\n                .then((res) => {\n                    return res.json()\n                })\n                .then(resJson => {\n                    resolve(resJson)\n                })\n                .catch((err) => {\n                    reject(err)\n                })\n        })\n    }\n\n    postData(url, userData) {\n        return new Promise((resolve, reject) => {\n            try {\n                fetch(`${this.domain}${url}`, {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'x-access-info': JSON.stringify(this.info),\n                        'x-access-token': this.token\n                    },\n                    body: userData\n                })\n                    .then((res) => {\n                        return res.json()\n                    })\n                    .then(resJson => {\n                        resolve(resJson)\n                    })\n                    .catch((err) => {\n                        reject(err)\n                    })\n            } catch (error) {\n                reject('发生错误!')\n            }\n        })\n    }\n\n    downloadPublicFile(url) {\n        return `${this.domain}${url}`\n    }\n\n    uploadFile(url, data) {\n        return new Promise((resolve, reject) => {\n            try {\n                fetch(`${this.domain}${url}`, {\n                    method: 'POST',\n                    headers: {\n                        'x-access-info': JSON.stringify(this.info),\n                        'x-access-token': this.token\n                    },\n                    body: data\n                })\n                    .then((res) =>\n                        res.json()\n                    )\n                    .then(resJson => {\n                        resolve(resJson)\n                    })\n                    .catch((err) => {\n                        reject(err)\n                    })\n            } catch (error) {\n                reject('发生错误!')\n            }\n        })\n    }\n\n    downloadFile(url, data) {\n        return `${this.domain}${url}?id=${data}&token=${this.token}`\n    }\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport md5 from 'md5'\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\n\nimport AuthService from '../common/authService'\n\nclass Setup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            step: 0,\n            step0Status: '',\n            step1Status: '',\n\n            connuser: '',\n            connpwd: '',\n            connaddress: '',\n            connport: '',\n            conndatabase: '',\n\n            configuser: '',\n            configpwd: '',\n            configdisplayname: ''\n        }\n    }\n\n    onClickStep = (v) => {\n        switch (parseInt(v)) {\n            case 0:\n                const conn = JSON.stringify({\n                    connuser: this.state.connuser,\n                    connpwd: this.state.connpwd,\n                    connaddress: this.state.connaddress,\n                    connport: this.state.connport,\n                    conndatabase: this.state.conndatabase\n                })\n                this.authService.postData('/setup', conn).then(res => {\n                    if (res.result) {\n                        this.setState({ step: 1 })\n                    } else {\n                        this.setState({ step0Status: res.message })\n                    }\n                })\n                break;\n            case 1:\n                const user = JSON.stringify({\n                    configuser: this.state.configuser,\n                    configpwd: md5(this.state.configpwd),\n                    configdisplayname: this.state.configdisplayname\n                })\n                this.authService.postData('/setup/user', user).then(res => {\n                    if (res.result) {\n                        this.setState({ step: 2 })\n                    } else {\n                        this.setState({ step1Status: res.message })\n                    }\n                })\n                break;\n            default:\n                break\n        }\n    }\n\n    onChangeConnUser = (e) => {\n        this.setState({ connuser: e.target.value })\n    }\n\n    onChangeConnPWD = (e) => {\n        this.setState({ connpwd: e.target.value })\n    }\n\n    onChangeConnAddress = (e) => {\n        this.setState({ connaddress: e.target.value })\n    }\n\n    onChangeConnPort = (e) => {\n        this.setState({ connport: e.target.value })\n    }\n\n    onChangeConnDatabase = (e) => {\n        this.setState({ conndatabase: e.target.value })\n    }\n\n    onChangeConfigUser = (e) => {\n        this.setState({ configuser: e.target.value })\n    }\n\n    onChangeConfigPWD = (e) => {\n        this.setState({ configpwd: e.target.value })\n    }\n\n    onChangeConfigDisplyName = (e) => {\n        this.setState({ configdisplayname: e.target.value })\n    }\n\n    onClickLogin = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\" className={classes.Content}>\n                    <Typography component=\"div\" className={classes.left}>\n                        <img src={require('../assets/loginbg.png')} alt=\"\" />\n                    </Typography>\n                    <Typography component=\"div\" className={classes.right}>\n                        <Grid container className={classes.box} justify={\"center\"} direction={'column'}>\n                            <Typography variant=\"h5\">安装并设置</Typography>\n                            <Typography variant=\"h4\" style={{ color: '#848484', margin: '4px 0' }}>企业文档管理与分享平台</Typography>\n\n                            <Divider className={classes.divider} />\n                            {\n                                this.state.step === 0 ?\n                                    <>\n                                        <Typography variant=\"overline\" style={{ color: '#848484' }}>配置连接MongoDB数据库：</Typography>\n                                        <Grid item xs={12} style={{ margin: '20px 0' }}>\n                                            <Grid container spacing={2}>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"连接数据库账户\"\n                                                        onChange={this.onChangeConnUser}\n                                                        value={this.state.connuser}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"密码\"\n                                                        type={'password'}\n                                                        onChange={this.onChangeConnPWD}\n                                                        value={this.state.connpwd}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"服务器地址\"\n                                                        onChange={this.onChangeConnAddress}\n                                                        value={this.state.connaddress}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"端口\"\n                                                        onChange={this.onChangeConnPort}\n                                                        value={this.state.connport}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"数据库名称\"\n                                                        onChange={this.onChangeConnDatabase}\n                                                        value={this.state.conndatabase}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Typography variant=\"overline\" style={{ color: '#848484' }}>验证结果：{this.state.step0Status}</Typography>\n                                    </>\n                                    :\n                                    this.state.step === 1 ?\n                                        <>\n                                            <Typography variant=\"overline\" style={{ color: '#848484' }}>设置系统管理员：</Typography>\n                                            <Grid item xs={12} style={{ margin: '20px 0' }}>\n                                                <Grid container spacing={2}>\n                                                    <Grid item>\n                                                        <TextField\n                                                            label=\"账户名(邮箱格式)\"\n                                                            onChange={this.onChangeConfigUser}\n                                                            value={this.state.configuser}\n                                                            className={classes.text}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <TextField\n                                                            label=\"密码\"\n                                                            type={'password'}\n                                                            onChange={this.onChangeConfigPWD}\n                                                            value={this.state.configpwd}\n                                                            className={classes.text}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <TextField\n                                                            label=\"显示名称\"\n                                                            onChange={this.onChangeConfigDisplyName}\n                                                            value={this.state.configdisplayname}\n                                                            className={classes.text}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Typography variant=\"overline\" style={{ color: '#848484' }}>设置结果：{this.state.step1Status}</Typography>\n                                        </>\n                                        :\n                                        <Typography variant=\"overline\" style={{ color: '#848484' }}>配置完成,请重新登录.</Typography>\n                            }\n                            <Divider className={classes.divider} />\n\n                            <Grid item xs={12}>\n                                {\n                                    parseInt(this.state.step) === 2 ?\n                                        <Grid container justify=\"flex-end\" spacing={2}>\n                                            <Grid item>\n                                                <Button\n                                                    style={{ width: 100 }}\n                                                    onClick={this.onClickLogin}\n                                                >\n                                                    {'登录'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                        :\n                                        <Grid container justify=\"flex-end\" spacing={2}>\n                                            <Grid item>\n                                                <Button\n                                                    style={{ width: 100 }}\n                                                    disabled={parseInt(this.state.step) === 0 ? true : false}\n                                                >\n                                                    {'上一步'}\n                                                </Button>\n                                            </Grid>\n\n                                            <Grid item>\n                                                <Button\n                                                    style={{ width: 80 }}\n                                                    onClick={() => this.onClickStep(this.state.step)}\n                                                >\n                                                    {'下一步'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                }\n                            </Grid>\n\n                        </Grid>\n                    </Typography>\n                </Container>\n\n            </Fragment>\n        )\n    }\n}\n\nSetup.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    Content: {\n        display: 'flex',\n        padding: 0,\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.primary.main,\n        height: '100vh',\n        width: 480,\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 900\n    },\n    box: {\n        padding: '0 150px',\n        width: 900\n    },\n    divider: {\n        margin: '20px 0'\n    },\n    text: {\n        width: 600\n    },\n    icon: {\n        color: 'gray',\n        marginTop: '18px',\n        marginRight: '8px'\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    rightIcon: {\n        marginRight: 8\n    },\n    cover: {\n        width: 80,\n        height: 100,\n        cursor: 'pointer'\n    }\n})\n\nexport default withStyles(styles)(Setup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\nconst styles = theme => ({\n    fake: {\n        height: theme.spacing(1),\n        margin: theme.spacing(2),\n        '&:nth-child(2n)': {\n            marginRight: theme.spacing(4),\n        },\n    },\n});\n\nclass loading extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            this.props.number.map(v => (\n                <div\n                    key={v}\n                    style={{\n                        backgroundColor: grey[200]\n                    }}\n                    className={classes.fake}\n                />\n            ))\n        )\n    }\n}\n\nloading.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(loading);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\nimport AuthService from '../common/authService'\nimport Loading from '../common/loading'\n\nconst title = '企业文档分享'\n\nclass Dashboard extends Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            acount: 0,\n            scount: 0,\n            userTop5: [],\n            userTop10: []\n        };\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('概览')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        this.setState({\n            userTop5: [],\n            userTop10: []\n        })\n        const info = JSON.stringify({\n            module: ['_1', '0']\n        })\n        this.authService.postData('/dashboard', info).then(res => {\n            if (this._isMounted) {\n                this.setState(res.message)\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onClickNavDoc = () => {\n        this.props.history.push(`/doc`)\n    }\n\n    onClickNavHelper = () => {\n        this.props.history.push(`/helper`)\n    }\n\n    render() {\n        const { classes } = this.props\n        const { acount, scount, userTop5, userTop10 } = this.state;\n\n        let list = (length) => {\n            var res = [];\n            for (var i = 0; i < length + 1; i++) {\n                res.push(<StarsIcon key={i} />)\n            }\n            return res\n        }\n\n        return (\n            <Fragment>\n                <Grid container className={classes.root} spacing={1}>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#1287DE', width: 100 }}>\n                                        <FileCopyIcon style={{ color: 'white' }} fontSize={'large'} />\n                                    </Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>文档库数量</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">{acount}</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#FD8508', width: 100 }}><ShareIcon style={{ color: 'white' }} fontSize={'large'} /></Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>已分享数量</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">{scount}</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#EE2B2A', width: 100 }}>\n                                        <AssessmentIcon style={{ color: 'white' }} fontSize={'large'} />\n                                    </Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>文档排行榜</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">Top 5</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#40A33F', width: 100 }}>\n                                        <AccountBalanceIcon style={{ color: 'white' }} fontSize={'large'} />\n                                    </Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>分享排行榜</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">Top 10</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                                <Card>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image=\"/imgs/card/beard.jpeg\"\n                                        title={title}\n                                    />\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {title}\n                                        </Typography>\n                                        <Typography component=\"p\">\n                                            基于知识分享理念而设计的文档管理分享与平台，解决文档分散、文档传递不可控等根本原因，帮助企业构建集中的海量文档管理平台，对文档进行全生命周期管理。\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={this.onClickNavDoc}>\n                                            开启文档\n                                        </Button>\n                                        <Button size=\"small\" color=\"primary\" onClick={this.onClickNavHelper}>\n                                            使用帮助\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={6}>\n                                        <Paper>\n                                            <List>\n                                                {\n                                                    userTop5.length > 0 ?\n                                                        userTop5.map((v, i) => {\n                                                            return (<ListItem key={i}>\n                                                                <Avatar style={{ marginRight: 8 }}>\n                                                                    <AssignmentIndIcon />\n                                                                </Avatar>\n                                                                <ListItemText\n                                                                    primary={`${v.displayName}`}\n                                                                    secondary={\n                                                                        <React.Fragment>\n                                                                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                                                                {v.accountName}\n                                                                                <br />\n                                                                                {\n                                                                                    list(4 - i)\n                                                                                }\n                                                                            </Typography>\n                                                                        </React.Fragment>\n                                                                    }\n                                                                />\n                                                            </ListItem>)\n                                                        })\n                                                        :\n                                                        <Loading number={[0, 1, 2, 3, 4]} />\n                                                }\n                                            </List>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Paper>\n                                            <List>\n                                                {\n                                                    userTop10.length > 0 ?\n                                                        userTop10.map((v, i) => {\n                                                            return (<ListItem key={i}>\n                                                                <Avatar style={{ marginRight: 8 }}>\n                                                                    <AssignmentIndIcon />\n                                                                </Avatar>\n                                                                <ListItemText\n                                                                    primary={v.displayName}\n                                                                    secondary={\n                                                                        <React.Fragment>\n                                                                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                                                                {v.accountName}\n                                                                            </Typography>\n                                                                        </React.Fragment>\n                                                                    }\n                                                                />\n                                                            </ListItem>)\n                                                        })\n                                                        :\n                                                        <Loading number={[0, 1, 2, 3, 4]} />\n                                                }\n                                            </List>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Fragment>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = {\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        minWidth: 120,\n        marginBottom: 8\n    },\n    title: {\n        fontSize: 14,\n    },\n    media: {\n        height: 360,\n    },\n    inline: {\n        display: 'inline',\n    },\n};\n\nexport default withStyles(styles)(Dashboard);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass helper extends Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        };\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('使用帮助')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.props.onChangeRefresh(false)\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <Paper className={classes.actionBar}>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"搜索…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            fullWidth\n                        />\n                    </div>\n                </Paper>\n                <div className={classes.root}>\n\n                    <div className={classes.container}>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography className={classes.heading}>什么是私有分享？</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    分享给系统内部成员，只有内部成员才可下载获取.\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel2a-content\"\n                                id=\"panel2a-header\"\n                            >\n                                <Typography className={classes.heading}>什么是公有分享？</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    分享给所有被分享者，通过发送URL地址获取并下载.\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nhelper.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flex: 1\n    },\n    container: {\n        margin: '20px 0',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n            cursor: 'pointer'\n        },\n        marginRight: theme.spacing(1),\n        marginLeft: 0,\n        padding: theme.spacing(1),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        position: 'absolute',\n        marginTop: 5,\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        marginLeft: theme.spacing(4),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    }\n})\n\nexport default withStyles(styles)(helper);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthService from '../common/authService'\n\nclass Download extends Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            sid: '',\n            fileId: '',\n            fileName: '',\n            expireTime: '',\n            fileSize: 0,\n            downloadCode: '',\n            loading: false,\n            message: '',\n        }\n    }\n\n    componentWillMount() {\n\n        const info = JSON.stringify({ id: this.props.location.pathname.split('/')[2] })\n\n        this.authService.postData('/download', info).then(res => {\n            if (res.result) {\n                this.setState({\n                    sid: res.message.sid,\n                    fileId: res.message.fileId,\n                    fileName: res.message.filename,\n                    expireTime: this.timestampToTime(res.message.expireTime),\n                    fileSize: res.message.size\n                })\n            } else {\n                this.setState({\n                    fileName: res.message\n                })\n            }\n        })\n\n\n    }\n\n    onClickDownloadFile = () => {\n        if (this.state.downloadCode !== '') {\n\n            this.setState({ message: '正在下载中...请勿关闭!' })\n\n            let url = `/download/get?id=${this.state.sid}&downloadCode=${this.state.downloadCode}`\n\n            const Element = document.createElement('a')\n            Element.setAttribute('href', this.authService.downloadPublicFile(url))\n            Element.click()\n        } else {\n            this.setState({ message: '下载码错误' })\n        }\n    }\n\n    onChangeDownloadCode = (e) => {\n        this.setState({ downloadCode: e.target.value })\n    }\n\n    timestampToTime(timestamp) {\n\n        var date = new Date(timestamp);\n\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n\n        return Y + M + D;\n\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <div className={classes.container}>\n                <Card className={classes.card}>\n                    <div className={classes.details}>\n                        <CardContent className={classes.content}>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {this.state.fileName}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                {`文件大小:${this.state.fileSize}MB`}\n                            </Typography>\n                            {\n                                this.state.message !== '' ?\n                                    <Typography variant=\"subtitle2\" style={{ color: 'red' }}>\n                                        {`提示:${this.state.message}`}\n                                    </Typography> : null\n                            }\n                        </CardContent>\n                        <div className={classes.controls}>\n                            <TextField\n                                id=\"standard-full-width\"\n                                label=\"下载码\"\n                                style={{ margin: 8 }}\n                                value={this.state.downloadCode}\n                                onChange={(e) => this.onChangeDownloadCode(e)}\n                                placeholder=\"四位数字或没有\"\n                                helperText={`过期时间:${this.state.expireTime}`}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.cover} onClick={this.onClickDownloadFile}>\n                        {'下载'}\n                    </Button>\n                </Card>\n            </div>\n        )\n    }\n}\n\nDownload.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    card: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 320\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 64,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    }\n})\n\nexport default withStyles(styles)(Download);","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport GroupAdd from '@material-ui/icons/GroupAdd';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport Chip from '@material-ui/core/Chip';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Popover from '@material-ui/core/Popover';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthService from '../common/authService'\nimport Loading from '../common/loading'\n\nclass role extends Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            open: false,\n            anchorEl: null,\n            rightDrawer: false,\n            noticeMessage: null,\n            datas: [],\n            usersList: [],\n            roleId: '',\n            searchTextField: '',\n            searchUsersList: [],\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('人员角色')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        this.authService.postData('/role/home', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n                else {\n                    this.setState({ open: !this.state.open, noticeMessage: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    onClickNavigationAdd = () => {\n        this.props.history.push(`/roleadd`)\n    }\n\n    onClickRemoveUser = (roleId, userId) => {\n        const data = JSON.stringify({\n            userId: userId,\n            roleId: roleId\n        })\n\n        this.authService.postData('/role/removeuser', data).then((res) => {\n            if (res.result) {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n                this.RefreshInfo()\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickOpenUserList = (e) => {\n        this.props.onChangeRefresh(true)\n\n        this.setState({ roleId: e, rightDrawer: !this.state.rightDrawer })\n        this.authService.postData('/role/rolegetlist', null).then((res) => {\n            if (res.result) {\n                this.setState({ usersList: res.message, searchUsersList: res.message })\n            }\n            else {\n            }\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    onClickListItemSelectUser = (e) => {\n        const data = JSON.stringify({\n            userId: e,\n            roleId: this.state.roleId\n        })\n\n        this.authService.postData('/role/adduser', data).then((res) => {\n            if (res.result) {\n                this.setState({ rightDrawer: !this.state.rightDrawer })\n                this.RefreshInfo()\n            }\n        })\n    }\n\n    onClickOpenMenu = event => {\n        this.setState({\n            anchorEl: event.currentTarget,\n            roleId: event.currentTarget.getAttribute(\"data-id\")\n        });\n    };\n\n    onClickCloseMenu = () => {\n        this.setState({ anchorEl: null })\n    }\n\n    onClickCloseRightDrawer = () => {\n        this.setState({ rightDrawer: !this.state.rightDrawer })\n    }\n\n    onClickDeleteRole = () => {\n        const data = JSON.stringify({\n            _id: this.state.roleId\n        })\n\n        this.authService.postData('/role/del', data).then((res) => {\n            if (res.result) {\n                this.setState({ anchorEl: null, open: !this.state.open, noticeMessage: res.message })\n                this.RefreshInfo()\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onChangeSearchUsersList = (e) => {\n        this.setState({ searchTextField: e.target.value }, () => {\n            let newUserList = this.state.usersList.filter(x => {\n                return x.accountName.indexOf(this.state.searchTextField) !== -1 || x.displayName.indexOf(this.state.searchTextField) !== -1\n            })\n            this.setState({ searchUsersList: newUserList })\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { datas, searchUsersList, searchTextField, anchorEl, rightDrawer } = this.state\n        const MenuOpen = Boolean(anchorEl);\n\n        return (\n            <Fragment>\n                {\n                    <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.onClickNavigationAdd}><GroupAdd /></Button>\n                    </div>\n                }\n\n                <div style={{ margin: 15 }} />\n\n                {\n                    datas.length > 0 ?\n                        datas.map((v, i) => {\n                            return <Paper key={i}>\n                                <Paper className={classes.bar}>\n                                    <b>{v.displayName}</b>\n                                    <div style={{ display: 'flex', height: 48, marginRight: -12, marginTop: -12 }}>\n                                        <IconButton\n                                            onClick={() => this.onClickOpenUserList(v._id)}\n                                            style={{ marginRight: -8 }}\n                                        >\n                                            <PersonAdd style={{ color: 'white' }} />\n                                        </IconButton>\n                                        <IconButton\n                                            data-id={v._id}\n                                            onClick={this.onClickOpenMenu}\n                                        >\n                                            <DeleteForeverIcon style={{ color: 'white' }} />\n                                        </IconButton>\n                                        <Popover\n                                            open={MenuOpen}\n                                            anchorEl={anchorEl}\n                                            onClose={this.onClickCloseMenu}\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'center',\n                                            }}\n                                            elevation={1}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'center',\n                                            }}\n                                        >\n                                            <Button onClick={this.onClickDeleteRole}>是</Button>\n                                            <Divider />\n                                            <Button onClick={this.onClickCloseMenu}>否</Button>\n                                        </Popover>\n                                    </div>\n                                </Paper>\n                                <Grid container style={{ marginBottom: 15, padding: 15 }}>\n                                    <Grid item xs={12}>\n                                        {\n                                            v.member.map((x, y) => {\n                                                return <Chip\n                                                    key={y}\n                                                    label={`${x.displayName === '' ? x.accountName : x.displayName}`}\n                                                    onClick={null}\n                                                    onDelete={() => this.onClickRemoveUser(v._id, x.id)}\n                                                    className={classes.chip}\n                                                    variant=\"outlined\"\n                                                />\n                                            })\n                                        }\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        })\n                        :\n                        <Paper style={{ padding: '10px 0' }}>\n                            <Loading number={[0, 1, 2, 3, 4]} />\n                        </Paper>\n                }\n\n                {\n                    <Drawer\n                        anchor=\"right\"\n                        variant=\"persistent\"\n                        open={rightDrawer}\n                        classes={{\n                            paperAnchorRight: classes.drawerPaper\n                        }}\n                    >\n                        <div className={classes.toolbar} />\n                        <div className={(ClassNames(classes.toolbar, classes.drawerToolBar))}>\n                            <IconButton onClick={this.onClickCloseRightDrawer}><ArrowForward style={{ color: 'white', fontSize: 28 }} /></IconButton>\n                            <div />\n                        </div>\n                        <TextField\n                            className={classes.searchTextField}\n                            label=\"搜索(用户名或姓名)\"\n                            value={searchTextField}\n                            onChange={this.onChangeSearchUsersList}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                        />\n                        <List className={classes.list} dense={true}>\n                            {\n                                searchUsersList.map((v, i) => {\n                                    return <ListItem\n                                        key={i}\n                                        button\n                                        onClick={() => this.onClickListItemSelectUser(v._id)}\n                                    >\n                                        <Avatar alt=\"\" src=\"/imgs/user/default.png\" />\n                                        <ListItemText primary={v.accountName} secondary={v.displayName} />\n                                    </ListItem>\n                                })\n                            }\n                        </List>\n                    </Drawer>\n                }\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nrole.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerToolBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        background: theme.palette.primary.main\n    },\n    bar: {\n        display: 'flex',\n        justifyContent:\n            'space-between',\n        height: 40,\n        backgroundColor: theme.palette.primary.main,\n        padding: '8px 20px 8px 20px',\n        color: 'white'\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        maxHeight: 400,\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    drawerPaper: {\n        width: 360,\n        boxShadow: '0px 4px 6px 0px rgba(0,0,0,0.2)',\n    },\n    searchTextField: {\n        margin: '10px 5px'\n    }\n});\n\nexport default withStyles(styles)(role);","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default class TableHeader extends React.Component {\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell style={{ width: '5%', padding: 10 }}></TableCell>\n                    <TableCell sortDirection={orderBy === 'filename' ? order : false} style={{ padding: '0px 10px 0px 0px' }}>\n                        <Tooltip\n                            title=\"文件名\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'filename'}\n                                direction={order}\n                                onClick={this.createSortHandler('filename')}\n                            >\n                                文件名\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '5%', padding: 10 }} align='right'>\n                        类型\n                    </TableCell>\n                    <TableCell sortDirection={orderBy === 'uploadDate' ? order : false} style={{ width: '12%', padding: '0px 10px 0px 0px' }} align='right'>\n                        <Tooltip\n                            title=\"时间\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'uploadDate'}\n                                direction={order}\n                                onClick={this.createSortHandler('uploadDate')}\n                            >\n                                时间\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '10%', padding: 10 }} align='center'>大小</TableCell>\n                </TableRow>\n            </TableHead>\n        );\n    }\n}","import React from 'react'\n\nconst loading = (\n    <svg style={{ padding: '10px 20px', width: '100%' }}>\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 1.0 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"20\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.8 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"40\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.6 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"60\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.4 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"80\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.2 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n    </svg>\n)\n\nexport { loading }","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Divider from '@material-ui/core/Divider';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport AuthService from '../../../common/authService'\n\nimport { loading } from '../../../common/component'\n\nclass selectUser extends React.Component {\n    constructor() {\n        super();\n        this.authService = new AuthService()\n        this.state = {\n            user: null,\n            role: null,\n            value: 0,\n            selected: [],\n            radioGroupValue: 'user',\n            selectUserOrRole: '',\n            selectRoleOrUser: '',\n            progress: false\n        }\n    }\n\n    componentDidMount() {\n        this.authService.postData('/file/selectusers', null).then((res) => {\n            if (res.result) {\n                this.setState({ user: res.message.user, role: res.message.role })\n            }\n        })\n    }\n\n    onChangeConfirm = () => {\n\n        let info = this.state.selected\n        this.props.onClickAddUsersToList(info, true)\n        this.setState({ selected: [] })\n\n    }\n\n    onClickCancel = () => {\n        this.setState({ selected: [] })\n        this.props.onClose();\n    };\n\n    onChangeSelected = (s, v, e, l) => {\n        let selected = this.state.selected\n        let elementHas = selected.find(v => {\n            return v.id === s\n        })\n        if (!elementHas) {\n            selected.push({ id: s, displayName: v, other: e, type: l })\n        }\n        this.setState({ selected })\n    }\n\n    onChangeRadioGroup = (e) => {\n        this.setState({ radioGroupValue: e.target.value })\n    }\n\n    onChangeSelectUserOrRole = (e) => {\n        this.setState({ selectUserOrRole: e.target.value })\n    }\n\n    onChangeSelectRoleOrUser = (e) => {\n        this.setState({ selectRoleOrUser: e.target.value })\n    }\n\n    onClickSearchUserOrRole = (e) => {\n        this.setState({ progress: true })\n        if (e) {\n            const info = JSON.stringify({\n                value: this.state.selectUserOrRole\n            })\n            this.authService.postData('/file/selectuserslist', info).then((res) => {\n                if (res.result) {\n                    this.setState({ user: res.message, progress: false })\n                }\n            })\n        }\n        else {\n            const info = JSON.stringify({\n                value: this.state.selectRoleOrUser\n            })\n            this.authService.postData('/file/selectroleslist', info).then((res) => {\n                if (res.result) {\n                    this.setState({ role: res.message, progress: false })\n                }\n            })\n        }\n    }\n\n    onClickDelSelected = (e) => {\n        let selected = this.state.selected.filter(v => v.id !== e);\n        this.setState({ selected })\n    }\n\n    render() {\n        const { user, role, radioGroupValue, selectUserOrRole, selectRoleOrUser, progress, selected } = this.state\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                aria-labelledby=\"confirmation-dialog-title\"\n                open={this.props.open}\n            >\n                <DialogTitle style={{ padding: '24px 24px 0px 24px' }}>\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={radioGroupValue} onChange={this.onChangeRadioGroup} row>\n                        <FormControlLabel\n                            value={'user'}\n                            control={<Radio color=\"primary\" />}\n                            label=\"用户\"\n                        />\n                        <FormControlLabel\n                            value={'role'}\n                            control={<Radio color=\"primary\" />}\n                            label=\"角色\"\n                        />\n                    </RadioGroup>\n                </DialogTitle>\n\n                {/* <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={this.onChangeTabs}\n                    >\n                        <Tab label=\"用户\" />\n                        <Tab label=\"角色\" />\n                    </Tabs> \n\n                    {\n                        value === 1 ?\n                            <Fragment>\n                                <DialogContent style={{ padding: '10px 30px' }}>\n                                    <RadioGroup\n                                        onChange={this.onChangeSelectRoles}\n                                    >\n                                        {\n                                            this.props.values.roles ? this.props.values.roles.map((v, i) => (\n                                                <FormControlLabel\n                                                    value={v._id}\n                                                    key={i}\n                                                    control={<Radio />}\n                                                    label={v.displayName}\n                                                />\n                                            ))\n                                                :\n                                                null\n                                        }\n                                    </RadioGroup>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={() => this.onChangeConfirm(false)} color=\"primary\">确定</Button>\n                                    <Button onClick={this.onClickCancel} color=\"primary\">取消</Button>\n                                </DialogActions>\n                            </Fragment>\n                            :\n                            value === 0 ?\n                                <Fragment>\n                                    <DialogContent style={{ padding: 0 }}>\n                                        <List>\n                                            {\n                                                this.props.values.users ? this.props.values.users.map(value => (\n                                                    <ListItem key={value._id} style={{ padding: '10px 30px' }}>\n                                                        <ListItemText\n                                                            primary={`${value.accountName}`}\n                                                            secondary={\n                                                                <React.Fragment>\n                                                                    <Typography component=\"span\" style={{ color: 'grey' }}>\n                                                                        {value.displayName}\n                                                                    </Typography>\n                                                                </React.Fragment>\n                                                            }\n                                                        />\n                                                        <ListItemSecondaryAction>\n                                                            <Checkbox\n                                                                onChange={this.onChangeSelectUsers(value._id, value.accountName, value.displayName)}\n                                                                checked={\n                                                                    users.length > 0 ?\n                                                                        users.find(x => {\n                                                                            return x.accountName === value.accountName\n                                                                        }) !== undefined ? true : false\n                                                                        :\n                                                                        false\n                                                                }\n                                                            />\n                                                        </ListItemSecondaryAction>\n                                                    </ListItem>\n                                                ))\n                                                    : loading\n\n                                            }\n                                        </List>\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={() => this.onChangeConfirm(true)} color=\"primary\">确定</Button>\n                                        <Button onClick={this.onClickCancel} color=\"primary\">取消</Button>\n                                    </DialogActions>\n                                </Fragment>\n                                :\n                                null\n                    }\n                */}\n\n                <DialogContent className={classes.root}>\n\n                    {\n                        radioGroupValue === 'user' ?\n                            <TextField\n                                label=\"搜索用户...\"\n                                fullWidth\n                                value={selectUserOrRole}\n                                margin=\"normal\"\n                                style={{ marginBottom: 16 }}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                helperText=\"输入姓名或者账户名\"\n                                onChange={this.onChangeSelectUserOrRole}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <Tooltip title=\"搜索\">\n                                                <IconButton\n                                                    style={{ marginTop: -16 }}\n                                                    onClick={() => this.onClickSearchUserOrRole(true)}\n                                                >\n                                                    {<SearchIcon />}\n                                                </IconButton>\n                                            </Tooltip>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            /> :\n                            <TextField\n                                label=\"搜索角色...\"\n                                fullWidth\n                                value={selectRoleOrUser}\n                                margin=\"normal\"\n                                style={{ marginBottom: 16 }}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                helperText=\"输入名称\"\n                                onChange={this.onChangeSelectRoleOrUser}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <Tooltip title=\"搜索\">\n                                                <IconButton\n                                                    style={{ marginTop: -16 }}\n                                                    onClick={() => this.onClickSearchUserOrRole(false)}\n                                                >\n                                                    {<SearchIcon />}\n                                                </IconButton>\n                                            </Tooltip>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                    }\n\n                    {\n                        progress && <LinearProgress style={{ marginBottom: 8 }} />\n                    }\n\n                    {\n                        radioGroupValue === 'user' && user ? user.map(value => (\n                            <Chip\n                                key={value._id}\n                                variant=\"outlined\"\n                                icon={<FaceIcon />}\n                                onClick={() => this.onChangeSelected(value._id, value.displayName, value.accountName, true)}\n                                className={classes.chip}\n                                label={`${value.displayName}(${value.accountName.split('@')[0]})`}\n                            />\n                        ))\n                            : radioGroupValue === 'role' && role ? role.map(value => (\n                                <Chip\n                                    key={value._id}\n                                    variant=\"outlined\"\n                                    icon={<SupervisedUserCircleIcon />}\n                                    onClick={() => this.onChangeSelected(value._id, value.displayName, value.description, false)}\n                                    className={classes.chip}\n                                    label={`${value.displayName}`}\n                                />\n                            ))\n                                : loading\n                    }\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    {\n                        selected.length > 0 && selected.map(value => {\n                            return value.type ? <Chip\n                                key={value.id}\n                                icon={<FaceIcon />}\n                                // onClick={() => this.onChangeSelected(value._id, value.displayName, value.accountName)}\n                                className={classes.chip}\n                                label={`${value.displayName}`}\n                                color=\"secondary\"\n                                onDelete={() => this.onClickDelSelected(value.id)}\n                            /> : <Chip\n                                    key={value.id}\n                                    icon={<SupervisedUserCircleIcon />}\n                                    // onClick={() => this.onChangeSelected(value._id, value.displayName, value.accountName)}\n                                    className={classes.chip}\n                                    label={`${value.displayName}`}\n                                    color=\"secondary\"\n                                    onDelete={() => this.onClickDelSelected(value.id)}\n                                />\n                        })\n                    }\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={this.onChangeConfirm} color=\"primary\">确定</Button>\n                    <Button onClick={this.onClickCancel} color=\"primary\" autoFocus>取消</Button>\n                </DialogActions>\n\n            </Dialog>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flex: 1\n    },\n    chip: {\n        margin: theme.spacing(0.5)\n    },\n    divider: {\n        margin: '15px 0'\n    }\n});\n\nexport default withStyles(styles)(selectUser);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst actionsStyles = theme => ({\n    root: {\n        flexShrink: 0,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing(2.5)\n    },\n});\n\nclass TablePaginationActions extends React.Component {\n    handleFirstPageButtonClick = event => {\n        this.props.onChangePage(event, 0);\n    };\n\n    handleBackButtonClick = event => {\n        this.props.onChangePage(event, this.props.page - 1);\n    };\n\n    handleNextButtonClick = event => {\n        this.props.onChangePage(event, this.props.page + 1);\n    };\n\n    handleLastPageButtonClick = event => {\n        this.props.onChangePage(\n            event,\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n        );\n    };\n\n    render() {\n        const { classes, count, page, rowsPerPage, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <IconButton\n                    onClick={this.handleFirstPageButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"First Page\"\n                >\n                    {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleBackButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"Previous Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleNextButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Next Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleLastPageButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Last Page\"\n                >\n                    {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nTablePaginationActions.propTypes = {\n    classes: PropTypes.object.isRequired,\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n    TablePaginationActions,\n);\n\nexport default TablePaginationActionsWrapped","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport AuthService from '../../../common/authService'\n\nclass moveToFolder extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            filePath: '',\n            values: null,\n            checked: null\n        }\n    }\n\n    componentDidMount() {\n        this.authService.postData('/file/tofolder', null).then((res) => {\n            if (res.result) {\n                this.setState({ values: res.message })\n            }\n        })\n    }\n\n    onClickSelectFolder = v => () => {\n        this.setState({ checked: v })\n    };\n\n    render() {\n        const { values, checked } = this.state\n        const { classes } = this.props\n\n        return (\n            <Dialog\n                aria-labelledby=\"customized-dialog-title\"\n                open={this.props.open}\n            >\n                <div className={classes.top}>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        {'文档移至'}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {'文件夹'}\n                    </Typography>\n                </div>\n                <Divider />\n                <List className={classes.list}>\n                    {\n                        values !== null && values.map((v, i) => (\n                            <ListItem key={i} component=\"div\" role={undefined} dense button onClick={this.onClickSelectFolder(v)}>\n                                <Checkbox\n                                    checked={v === checked}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                                <ListItemText primary={v.metadata.location} />\n                            </ListItem>\n                        ))\n                    }\n                </List>\n                <Divider />\n                <div className={classes.bottom}>\n                    <Button color=\"primary\" onClick={this.props.onClickConfirmMoveFile(this.state.checked)}>确定</Button>\n                    <Button onClick={this.props.onClickCloseMoveFile}>取消</Button>\n                </div>\n            </Dialog>\n        );\n    }\n}\n\nmoveToFolder.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = () => ({\n    top: {\n        padding: 20,\n        width: 540\n    },\n    bottom: {\n        display: 'flex',\n        padding: 15\n    },\n    title: {\n        fontSize: 14,\n    },\n    button: {\n        margin: 10\n    },\n    list: {\n        width: '100%',\n        padding: 0,\n        maxHeight: 300\n    },\n    listItem: {\n        padding: 0\n    }\n})\n\n\nexport default withStyles(styles)(moveToFolder)\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport UUID from 'uuid';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Attachment from '@material-ui/icons/Attachment';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DoneIcon from '@material-ui/icons/Done';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport CloudUploadIcon from '@material-ui/icons/CloudUploadOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteSweep';\nimport AddCircleOutline from '@material-ui/icons/YoutubeSearchedFor';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Avatar from '@material-ui/core/Avatar';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Popper from '@material-ui/core/Popper';\nimport Fade from '@material-ui/core/Fade';\n\nimport Loading from '../../common/loading'\nimport TableHeader from './components/TableHeader'\nimport AuthService from '../../common/authService'\nimport { LocalStorageKey } from '../../common/config'\nimport SelectUser from './components/selectUser'\nimport TablePaginationActionsWrapped from './components/TablePagination'\nimport MoveToFolder from './components/moveToFolder'\n\nclass Documents extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            order: 'asc',\n            orderBy: 'calories',\n            selected: [],\n            data: [],\n            searchData: [],\n            page: 0,\n            rowsPerPage: 10,\n            uploadloading: false,\n            noticeOpen: false,\n\n            selectUser: false,\n            selectWindowsUser: false,\n\n            noticeMessage: null,\n            viewdetail: false,\n            toolBar: false,\n            tabValue: 0,\n            rightDrawer: false,\n            subBar: false,\n\n            tabIndex: 0,\n            tabBarButtonArea: true,\n\n            stepOneValue: ' ',\n            stepOneError: false,\n            deleteloading: false,\n            openMoveFile: false,\n\n            anchorEl: null,\n\n            AwaySearch: true,\n            AwaySearchInput: false,\n\n            searchSelectFileName: '',\n            searchSelectType: '',\n            searchSelectOneFileType: true,\n            searchStyle: false,\n            searchSelectFileSize: '',\n            searchPublicShareExpireTime: '',\n\n            folderName: '',\n            newFileName: '',\n\n            fileType: '',\n            filePath: '/',\n            fileSize: '',\n            fileCreateTime: '',\n            fileOwner: '',\n            fileStatus: null,\n            filepublicShareId: '',\n\n            shareUserTextField: '',\n            shareUsersList: [],\n\n            publicShareId: '',\n            publicShareUrl: '',\n            publicShareExpireTime: '',\n            publicShareDownloadCode: '',\n\n            showRename: [],\n\n            listenerDateFormatInput: false,\n            listenerSelectUser: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('我的文档')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo(props) {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            userId: this.getToken().u.i,\n            path: this.state.filePath\n        })\n\n        this.authService.postData('/file/lists', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n\n                    let value = {\n                        data: res.message,\n                        searchData: res.message,\n                        rightDrawer: false\n                    }\n\n                    let objects = Object.assign(value, props);\n\n                    this.setState(objects)\n                } else {\n                    this.setState({\n                        data: [],\n                        searchData: [],\n                        selected: [],\n                        rightDrawer: false,\n                        noticeOpen: true,\n                        noticeMessage: res.message\n                    })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    desc(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    stableSort(array, cmp) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = cmp(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map(el => el[0]);\n    }\n\n    getSorting(order, orderBy) {\n        return order === 'desc' ? (a, b) => this.desc(a, b, orderBy) : (a, b) => -this.desc(a, b, orderBy);\n    }\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    }\n\n    onClickCreateFolder = () => {\n        if (this.state.folderName !== '') {\n            const info = JSON.stringify({\n                folderName: this.state.folderName,\n                path: this.state.filePath\n            })\n\n            this.authService.postData('/file/createfolder', info).then((res) => {\n                if (res.result) {\n                    this.Refresh({ folderName: '', tabIndex: 0 })\n                } else {\n                    this.setState({ noticeOpen: true, noticeMessage: res.message })\n                }\n            })\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '文件夹名称不能为空.' })\n        }\n    }\n\n    onChangeCreatefolder = (e) => {\n        this.setState({ folderName: e.target.value })\n    }\n\n    onClickSelectOne = (id, filename, typename, size, path, uploadDate) => {\n        let newSelected = []\n\n        if (this.state.selected.length > 0 && this.state.selected[0]._id === id) {\n            newSelected = this.state.selected.filter(x => { return x._id !== id })\n        } else {\n            newSelected.push({\n                _id: id,\n                filename: filename,\n                typename: typename,\n                size: size,\n                path: path,\n                uploadDate: uploadDate\n            })\n        }\n\n        this.setState({\n            selected: newSelected,\n            rightDrawer: false\n        })\n\n    }\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    }\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ page: 0, rowsPerPage: event.target.value });\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ noticeOpen: false });\n    }\n\n    isSelected = (id) => {\n        let selected = this.state.selected\n        return (selected.length > 0 && selected[0]._id === id) ? true : false\n    }\n\n    onChangeSearchSelectFileName = (e) => {\n        this.setState({ searchSelectFileName: e.target.value }, () => {\n            if (this.state.searchSelectFileName === '') {\n                this.setState({ searchData: this.state.data })\n            } else {\n                this.setState({ searchData: this.state.data.filter(x => x.metadata.filename.indexOf(this.state.searchSelectFileName) !== -1) })\n            }\n        })\n    }\n\n    onChangeSearchSelectType = (e) => {\n        this.setState({ searchSelectType: e.target.value }, () => {\n            if (this.state.searchSelectType === '') {\n                this.setState({ searchData: this.state.data })\n            } else {\n                this.setState({ searchData: this.state.data.filter(x => x.metadata.typename === this.state.searchSelectType) })\n            }\n        })\n    }\n\n    onChangeSearchSelectFileSize = e => {\n        this.setState({ searchSelectFileSize: e.target.value }, () => {\n            if (this.state.searchSelectFileSize === '') {\n                this.setState({ searchData: this.state.data })\n            } else {\n                this.setState({ searchData: this.state.data.filter(x => x.metadata.size >= this.state.searchSelectFileSize) })\n            }\n        })\n    }\n\n    onChangeSearchPublicShareExpireTime = e => {\n        this.setState({\n            searchPublicShareExpireTime: e.target.value,\n            searchData: this.state.data.filter(x => {\n                return x.uploadDate.split('T')[0] === e.target.value\n            })\n        })\n    }\n\n    onClickTabIndex = (e) => {\n        if (this.state.tabIndex === e) {\n            this.setState({ tabIndex: 0, tabBarButtonArea: false });\n        }\n        else {\n            this.setState({ tabIndex: e, tabBarButtonArea: false });\n        }\n    }\n\n    onChangeSearch = (e) => {\n        this.setState({ search: e.target.value })\n    }\n\n    onChangeFileInput = () => {\n        if (this.InputFile.value) {\n            this.setState({ stepOneValue: this.InputFile.files[0].name, filename: this.InputFile.files[0].name })\n        }\n    }\n\n    onMouseOverSearch = () => {\n        this.setState((state) => ({ searchStyle: !state.searchStyle }))\n    }\n\n    onClickSelectUsersOpenDialog = () => {\n        this.setState((state) => ({ selectUser: !state.selectUser }))\n    }\n\n    onClickViewDetail = () => {\n        this.setState((state) => ({ viewdetail: !state.viewdetail }))\n    }\n\n    onClickUploadFile = () => {\n\n        if (this.InputFile.files.length > 0) {\n            this.setState({ uploadloading: true })\n\n            const info = JSON.stringify({\n                filename: this.InputFile.files[0].name,\n                typename: '',\n                fileSize: (this.InputFile.files[0].size / 1000 / 1000).toFixed(3),\n                version: 1.0,\n                status: 0,\n                path: this.state.filePath,\n                userId: this.getToken().u.i,\n                userDisplayName: this.getToken().u.d,\n                shareId: '',\n                publicShareId: '',\n                publicShareExpireTime: '',\n                publicShareUrl: ''\n            })\n\n            const data = new FormData();\n            data.append(\"file\", this.InputFile.files[0]);\n            data.append(\"other\", info)\n            if (data !== []) {\n                this.authService.uploadFile('/file/upload', data).then((res) => {\n                    if (res.result) {\n                        this.InputFile.value = null\n                        this.RefreshInfo({ noticeOpen: true, noticeMessage: res.message, uploadloading: false, stepOneValue: ' ' })\n                    } else {\n                        this.setState({ noticeOpen: true, noticeMessage: res.message, uploadloading: false, stepOneValue: ' ' })\n                    }\n                })\n            }\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '请选择需要上传的文档' })\n        }\n    }\n\n    onClickDownloadFile = () => {\n        const a = document.createElement('a')\n        a.setAttribute('href', this.authService.downloadFile('/file/down', this.state.selected[0]._id))\n        a.click()\n    }\n\n    onClickDeleteFile = () => {\n        this.setState({ deleteloading: true })\n        const datas = JSON.stringify({\n            _id: this.state.selected[0]._id,\n            filename: this.state.selected[0].filename,\n            path: this.state.filePath\n        })\n\n        this.authService.postData('/file/deletes', datas).then((res) => {\n            if (res.result) {\n                this.Refresh({ deleteloading: false, selected: [] })\n            } else {\n                this.setState({ noticeOpen: true, noticeMessage: res.message, deleteloading: false })\n            }\n        })\n    }\n\n    onClickCloseRightDrawer = () => {\n        this.setState({ rightDrawer: false, shareUsersList: [], selectWindowsUser: false })\n    }\n\n    onChangeTabsValue = (_, value) => {\n        this.setState({ tabValue: value })\n    }\n\n    onChangeShareUserTextField = e => {\n        this.setState({ shareUserTextField: e.target.value })\n    }\n\n    onClickShareAddUserToList = () => {\n        if (this.state.shareUserTextField === '') {\n            return false\n        }\n\n        const info = JSON.stringify({\n            accountName: this.state.shareUserTextField\n        })\n        this.authService.postData('/file/shareadduser', info).then(res => {\n            if (res.result) {\n                let v = this.state.shareUsersList\n                v.push({\n                    _id: res.message._id,\n                    accountName: res.message.accountName,\n                    displayName: res.message.displayName\n                })\n                this.setState({ shareUsersList: v, shareUserTextField: '' })\n            } else {\n                this.setState({ noticeOpen: true, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickBreadcrumb = (e) => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            userId: this.getToken().u.i,\n            path: e\n        })\n\n        this.authService.postData('/file/lists', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    let value = {\n                        data: res.message,\n                        searchData: res.message,\n                        filePath: e\n                    }\n                    this.setState(value)\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onCloseSelectUsersDialog = () => {\n        this.setState((state) => ({\n            selectUser: !state.selectUser\n        }))\n    }\n\n    onClickAddUsersToList = (e, c) => {\n        let list = this.state.shareUsersList\n\n        e.map((s) => {\n            return list.push({\n                _id: s.id,\n                accountName: s.other,\n                displayName: s.displayName,\n                type: s.type\n            })\n        })\n\n        this.setState((state) => ({ list, selectUser: !state.selectUser, selectWindowsUser: c }))\n    }\n\n    onClickSubmitShare = () => {\n        this.props.onChangeRefresh(true)\n        if (this.state.shareUsersList.length > 0) {\n            let info = JSON.stringify({\n                _id: this.state.selected[0]._id,\n                shareUsersList: this.state.shareUsersList\n            })\n            this.authService.postData('/file/share', info).then((res) => {\n                this.RefreshInfo({ noticeOpen: true, noticeMessage: res.message, selected: [] })\n            })\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '未找到分享名单列表' })\n        }\n    }\n\n    onClickCloseShare = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            _id: this.state.selected[0]._id,\n        })\n        this.authService.postData('/file/unshare', info).then((_) => {\n            this.RefreshInfo()\n        })\n    }\n\n    onClickMoveUserList = (i) => {\n        let v = this.state.shareUsersList\n        v = v.filter(x => {\n            return x._id !== i\n        })\n        this.setState({ shareUsersList: v })\n    }\n\n    onClickCreatePublicShare = (e) => {\n        let codeLength = this.state.publicShareDownloadCode.toString().length\n        if (codeLength === 6 || codeLength === 0) {\n            if (this.state.publicShareExpireTime !== '') {\n                if (e) {\n                    this.setState({ publicShareUrl: window.location.host + '/download/' + UUID.v4() })\n                } else {\n                    const info = JSON.stringify({\n                        fileId: this.state.selected[0]._id,\n                        url: this.state.publicShareUrl,\n                        expireTime: this.state.publicShareExpireTime,\n                        downloadCode: this.state.publicShareDownloadCode\n                    })\n\n                    this.authService.postData('/file/sharepublic', info).then((res) => {\n                        if (res.result) {\n                            this.Refresh({ publicShareExpireTime: '', publicShareUrl: '' })\n                        } else {\n                            this.setState({ noticeOpen: true, noticeMessage: res.message })\n                        }\n                    })\n                }\n            } else {\n                this.setState({ noticeOpen: true, noticeMessage: '未设置过期时间' })\n            }\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '设置下载码有误!' })\n        }\n\n    }\n\n    onClickClosePublicShare = () => {\n        this.props.onChangeRefresh(true)\n        const info = JSON.stringify({\n            fileId: this.state.selected[0]._id,\n            url: this.state.publicShareUrl\n        })\n        this.authService.postData('/file/shareclosepublic', info).then((_) => {\n            this.RefreshInfo({ publicShareExpireTime: '', publicShareUrl: '', selected: [] })\n        })\n    }\n\n    onClickConfirmMoveFile = value => () => {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            fileId: this.state.selected[0]._id,\n            location: value.metadata.location\n        })\n\n        this.authService.postData('/file/movetofolder', info).then((_) => {\n            this.RefreshInfo({ openMoveFile: false, selected: [] })\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onClickOpenMoveFile = () => {\n        this.setState((state) => ({ openMoveFile: true }))\n    }\n\n    onClickCloseMoveFile = () => {\n        this.setState((state) => ({ openMoveFile: false, selected: [] }))\n    }\n\n    onChangeDateChange = e => {\n        this.setState({ publicShareExpireTime: e.target.value });\n    }\n\n    onClickClickAway = () => {\n        if (this.state.AwaySearch) {\n            this.setState({ tabIndex: 0 });\n        }\n    }\n\n    onClickRename = event => {\n        this.setState({ anchorEl: this.state.anchorEl === null ? event.currentTarget : null })\n    }\n\n    onClickCancelBtnRename = () => {\n        this.setState({ anchorEl: null })\n    }\n\n    onClickConfirmBtnRename = () => {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            fileId: this.state.selected[0]._id,\n            fileName: this.state.newFileName\n        })\n\n        this.authService.postData('/file/rename', info).then(res => {\n            if (res.result) {\n                this.RefreshInfo({ anchorEl: null, newFileName: '' })\n            }\n            else {\n                this.setState({ noticeOpen: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeRename = (e) => {\n        this.setState({ newFileName: e.target.value })\n    }\n\n    onClickShareFileButton = () => {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            _id: this.state.selected[0]._id\n        })\n\n        this.authService.postData('/file/shareinfo', info).then((res) => {\n            this.props.onChangeRefresh(false)\n            if (res.result) {\n                this.setState((state) => ({\n                    shareUsersList: res.message.file.metadata.shareId,\n                    publicShareId: res.message.file.metadata.publicShareId,\n                    publicShareUrl: res.message.file.metadata.publicShareUrl,\n                    publicShareExpireTime: res.message.file.metadata.publicShareExpireTime !== '' ? res.message.file.metadata.publicShareExpireTime : this.state.publicShareExpireTime,\n                    publicShareDownloadCode: res.message.downloadCode !== undefined ? res.message.downloadCode : '',\n                    rightDrawer: !state.rightDrawer\n                }))\n            }\n            else {\n                this.setState((state) => ({ rightDrawer: !state.rightDrawer }))\n            }\n        })\n    }\n\n    onClickTabBottonBack = () => {\n        this.setState((state) => ({ tabBarButtonArea: !state.tabBarButtonArea, tabIndex: 0 }))\n    }\n\n    onClickCellFileName = (e) => {\n\n        this.props.onChangeRefresh(true)\n\n        const currentpath = this.state.filePath.length === 1 ? this.state.filePath + e : this.state.filePath + '/' + e\n\n        let info = JSON.stringify({\n            userId: this.getToken().u.i,\n            path: currentpath\n        })\n\n        this.authService.postData('/file/intofolder', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({\n                        data: res.message,\n                        searchData: res.message,\n                        filePath: currentpath\n                    })\n                } else {\n                    this.setState({\n                        data: [],\n                        searchData: [],\n                        filePath: currentpath,\n                        noticeOpen: true,\n                        noticeMessage: res.message\n                    })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangePublicShareDownloadCode = (e) => {\n        this.setState({ publicShareDownloadCode: e.target.value })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {\n            searchData,\n            selectUser, selectWindowsUser,\n            order, orderBy, selected, rowsPerPage, page, noticeOpen, noticeMessage, deleteloading, uploadloading,\n            rightDrawer, tabValue,\n            searchSelectOneFileType, searchSelectFileName, searchSelectType, searchSelectFileSize, searchPublicShareExpireTime,\n            folderName,\n            filePath,\n            shareUserTextField, shareUsersList,\n            publicShareId, publicShareUrl, publicShareDownloadCode,\n            newFileName,\n            tabBarButtonArea,\n            publicShareExpireTime,\n            tabIndex\n        } = this.state;\n\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, searchData.length - page * rowsPerPage);\n\n        const openRename = Boolean(this.state.anchorEl);\n\n        return (\n            <Fragment>\n\n                <Paper className={classes.actionBar}>\n                    <Collapse in={!(selected.length > 0)}>\n                        <input\n                            accept=\"text/plain;image/*\"\n                            style={{ display: 'none' }}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            onChange={this.onChangeFileInput}\n                            ref={ele => { this.InputFile = ele }}\n                        />\n                        <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', padding: '4px 16px' }}>\n                            {\n                                tabIndex === 1 ?\n                                    <div className={classes.upload}>\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button component=\"span\" color=\"primary\">\n                                                <Attachment style={{ marginRight: 4 }} /><span style={{ width: 60 }}>点击选择</span>\n                                            </Button>\n                                        </label>\n                                        <TextField\n                                            id=\"filled-read-only-upload-input\"\n                                            label=\"被选择的文件\"\n                                            style={{ marginLeft: 6, marginTop: 4, marginRight: 6 }}\n                                            value={this.state.stepOneValue}\n                                            margin=\"normal\"\n                                            error={this.state.stepOneError}\n                                            fullWidth\n                                            InputProps={{\n                                                disabled: true,\n                                            }}\n                                        />\n                                        <div className={classes.wrapper}>\n                                            <Button\n                                                color=\"primary\"\n                                                disabled={uploadloading}\n                                                onClick={this.onClickUploadFile}\n                                            >上传</Button>\n                                            {uploadloading && <LinearProgress />}\n                                        </div>\n                                    </div>\n                                    : tabIndex === 2 ?\n                                        <div className={classes.upload}>\n                                            <Button\n                                                disabled\n                                                aria-haspopup=\"true\"\n                                                onClick={this.onClickOpenTagsMenu}\n                                            >\n                                                名称\n                                                </Button>\n                                            <TextField\n                                                label=\"\"\n                                                style={{ marginLeft: 6, marginTop: 4, marginRight: 6 }}\n                                                margin=\"normal\"\n                                                fullWidth\n                                                value={folderName}\n                                                onChange={(e) => this.onChangeCreatefolder(e)}\n                                            />\n                                            <div className={classes.wrapper}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    onClick={this.onClickCreateFolder}\n                                                >\n                                                    {'创建'}\n                                                </Button>\n                                            </div>\n                                        </div>\n                                        : tabIndex === 3 ?\n                                            <div style={{ display: 'flex' }}>\n                                                <TextField label=\"名称\" className={classes.searchLabel} value={searchSelectFileName} onChange={this.onChangeSearchSelectFileName}\n                                                    InputProps={{\n                                                        startAdornment: (<div />),\n                                                        placeholder: '模糊查询'\n                                                    }}\n                                                />\n                                                <TextField label=\"类型\" className={classes.searchLabel} value={searchSelectType} onChange={this.onChangeSearchSelectType}\n                                                    InputProps={{\n                                                        startAdornment: (<div />),\n                                                        placeholder: '扩展名'\n                                                    }}\n                                                />\n                                                <TextField label=\"大小\" className={classes.searchLabel} value={searchSelectFileSize} onChange={this.onChangeSearchSelectFileSize}\n                                                    InputProps={{\n                                                        startAdornment: (<div />),\n                                                        placeholder: '文件大于MB'\n                                                    }}\n                                                />\n\n                                                <form noValidate>\n                                                    <TextField\n                                                        id=\"date\"\n                                                        label=\"上传时间\"\n                                                        type=\"date\"\n                                                        onChange={this.onChangeSearchPublicShareExpireTime}\n                                                        value={searchPublicShareExpireTime}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </form>\n\n                                            </div>\n                                            :\n                                            <div className={classes.LabelTitle} >\n                                                <b style={{ marginRight: 15 }}>文档库</b>\n                                                [<span className={classes.breadcrumb} style={{ marginLeft: 6 }} onClick={() => this.onClickBreadcrumb('/')}>/</span>\n                                                {\n                                                    filePath.split('/').map((v, i) => {\n                                                        return (v.length > 0 ? <span key={i} className={classes.breadcrumb} onClick={() => this.onClickBreadcrumb(`/${v}`)}>{v}</span> : null)\n                                                    })\n                                                }]\n                                                </div>\n                            }\n\n                            {\n                                tabBarButtonArea ?\n                                    <div style={{ display: 'flex' }}>\n                                        <Tooltip title=\"上传\">\n                                            <IconButton style={{ color: '#FF8A65' }} onClick={() => this.onClickTabIndex(1)}>\n                                                <CloudUploadIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"文件夹\">\n                                            <IconButton onClick={() => this.onClickTabIndex(2)}>\n                                                <FolderOpenIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"搜索\">\n                                            <IconButton onClick={() => this.onClickTabIndex(3)}>\n                                                <SearchIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </div>\n                                    :\n                                    <Tooltip title=\"返回\">\n                                        <IconButton style={{ color: '#fdb94e' }} onClick={this.onClickTabBottonBack}>\n                                            <HighlightOffIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                            }\n                        </div>\n                    </Collapse>\n\n                    <Collapse in={(selected.length > 0)}>\n                        <div className={classes.highlight} style={{ display: 'flex', justifyContent: 'space-between', width: '100%', padding: '4px 16px' }}>\n                            <Typography variant=\"h6\" style={{ padding: 8, color: '#626262' }}>{selected.length > 0 ? selected[0].filename : null}</Typography>\n                            {\n                                deleteloading && <LinearProgress className={classes.deleteProgress} />\n                            }\n                            <div style={{ display: 'flex' }}>\n                                {\n                                    searchSelectOneFileType &&\n                                    <Tooltip title=\"下载\">\n                                        <IconButton onClick={this.onClickDownloadFile}>\n                                            <CloudDownloadIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                <Tooltip title=\"移动\" onClick={this.onClickOpenMoveFile}>\n                                    <IconButton>\n                                        <HowToVoteIcon />\n                                    </IconButton>\n                                </Tooltip>\n                                {\n                                    searchSelectOneFileType &&\n                                    <Tooltip title=\"重命名\" onClick={this.onClickRename}>\n                                        <IconButton>\n                                            <CreateIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                <Tooltip title=\"删除\">\n                                    <IconButton onClick={this.onClickDeleteFile}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Tooltip>\n                                {\n                                    searchSelectOneFileType &&\n                                    <Tooltip title=\"分享\" onClick={this.onClickShareFileButton}>\n                                        <IconButton>\n                                            <ShareIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            </div>\n                        </div>\n                    </Collapse>\n                </Paper>\n\n                <Paper className={classes.root}>\n                    <Grid container spacing={0}>\n                        <Grid item xs={9}>\n                            <Table>\n                                <TableHeader\n                                    numSelected={selected.length}\n                                    order={order}\n                                    orderBy={orderBy}\n                                    onRequestSort={this.handleRequestSort}\n                                    rowCount={searchData.length}\n                                />\n                                <TableBody>\n                                    {\n                                        searchData.length > 0 ?\n                                            this.stableSort(searchData, this.getSorting(order, orderBy))\n                                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                                .map(n => {\n                                                    const isSelected = this.isSelected(n._id, n.metadata.filename);\n                                                    return (\n                                                        <TableRow\n                                                            key={n._id}\n                                                            selected={isSelected}\n                                                            style={n.metadata.status === 1 ? { borderLeft: '2px solid rgb(255, 152, 0)' } : {}}\n                                                        >\n                                                            <TableCell padding=\"checkbox\">\n                                                                <Checkbox\n                                                                    checked={isSelected}\n                                                                    onClick={() => this.onClickSelectOne(n._id, n.metadata.filename, n.metadata.typename, n.metadata.size, n.metadata.path, n.uploadDate, n.metadata.publicShareId, n.metadata.publicShareUrl, n.metadata.publicShareExpireTime, n.metadata.type)}\n                                                                />\n                                                            </TableCell>\n                                                            <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                                <span\n                                                                    aria-describedby={n._id}\n                                                                    className={n.metadata.type === 1 ? classes.link1 : classes.link2}\n                                                                    onClick={n.metadata.type === 0 ? () => this.onClickCellFileName(n.metadata.filename) : null}\n                                                                >\n                                                                    {n.metadata.filename}\n                                                                </span>\n                                                            </TableCell>\n                                                            <TableCell align=\"right\" className={classes.tableCell}>{n.metadata.type === 1 ? n.metadata.typename : 'folder'}</TableCell>\n                                                            <TableCell align=\"right\" className={classes.tableCell}>{n.uploadDate.split('T')[0]}</TableCell>\n                                                            <TableCell align=\"right\" className={classes.tableCell}>{n.metadata.size}</TableCell>\n                                                        </TableRow>\n                                                    );\n                                                })\n\n                                            :\n                                            <TableRow>\n                                                <TableCell colSpan={5}>\n                                                    <Loading number={[0, 1, 2, 3, 4]} />\n                                                </TableCell>\n                                            </TableRow>\n                                    }\n\n                                    {\n                                        emptyRows > 0 && (\n                                            <TableRow style={{ height: 43 * emptyRows }}>\n                                                <TableCell colSpan={5} />\n                                            </TableRow>)\n                                    }\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                        <Grid item xs={3} style={{ borderLeft: '1px solid #D9D9D9', borderBottom: '1px solid #D9D9D9' }}>\n\n                            <List component=\"nav\" className={classes.fileTitle}>\n                                {\n                                    selected.length > 0 ?\n                                        <Fragment>\n                                            <img src={`/imgs/type/${selected[0].typename}.png`} height={'120'} alt=''></img>\n                                        </Fragment>\n                                        :\n                                        null\n                                }\n                            </List>\n\n                            {\n                                selected.length > 0 && searchSelectOneFileType ?\n                                    <Fragment>\n                                        <List dense={true} component=\"nav\" style={{ paddingBottom: 10 }}>\n                                            <ListItem className={classes.ListItem}>\n                                                <ListItemText style={{ marginLeft: 12, marginBottom: 12 }} primary={'文件信息'} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'名称'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].filename}`} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'类型'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].typename}`} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'大小'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].size}MB`} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'位置'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].path}`} />\n                                            </ListItem>\n                                            {/* <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'所属者'}</span>\n                                                <ListItemText primary={fileOwner} />\n                                            </ListItem> */}\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'时间'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].uploadDate}`} />\n                                            </ListItem>\n                                        </List>\n                                    </Fragment>\n                                    :\n                                    null\n                            }\n\n                        </Grid>\n                    </Grid>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={searchData.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': '上一页',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': '下一页',\n                        }}\n                        SelectProps={{\n                            native: true,\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        labelRowsPerPage={'每页'}\n                        ActionsComponent={TablePaginationActionsWrapped}\n                    />\n                </Paper>\n\n                <SelectUser classes={{ paper: classes.paper }} open={selectUser} onClose={this.onCloseSelectUsersDialog} onClickAddUsersToList={(x, y) => this.onClickAddUsersToList(x, y)} />\n                <MoveToFolder open={this.state.openMoveFile} onClickCloseMoveFile={this.onClickCloseMoveFile} onClickConfirmMoveFile={this.onClickConfirmMoveFile} />\n\n                <Popper\n                    open={openRename}\n                    anchorEl={this.state.anchorEl}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper className={classes.rename}>\n                                <TextField\n                                    label=\"更改名称?\"\n                                    style={{ marginBottom: 8 }}\n                                    InputProps={{\n                                        startAdornment: (<div />)\n                                    }}\n                                    value={newFileName}\n                                    onChange={this.onChangeRename}\n                                />\n                                <Grid container justify=\"center\" spacing={1}>\n                                    <Grid item>\n                                        <Button color=\"primary\" size={'small'} onClick={this.onClickConfirmBtnRename}>\n                                            {'确定'}\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button color=\"primary\" size={'small'} onClick={this.onClickCancelBtnRename}>\n                                            {'取消'}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n\n                <Drawer\n                    anchor=\"right\"\n                    variant=\"persistent\"\n                    open={rightDrawer}\n                    onClose={this.onClickCloseRightDrawer}\n                    classes={{\n                        paperAnchorRight: classes.drawerPaper\n                    }}\n                >\n                    <div className={classes.toolbar} />\n\n                    <AppBar position=\"static\" color=\"primary\">\n                        <Tabs\n                            value={tabValue}\n                            onChange={this.onChangeTabsValue}\n                        >\n                            <Tab label=\"私有分享\" style={{ width: 229 }} />\n                            <Tab label=\"公有分享\" style={{ width: 229 }} />\n                        </Tabs>\n                    </AppBar>\n\n                    {\n                        tabValue === 0 &&\n                        <div className={classes.rightDrawerPaper}>\n                            <p>文件名:</p>\n                            <Typography className={classes.TypographyFileName}>{selected.length > 0 && selected[0].filename}</Typography>\n                            {\n                                shareUsersList.length > 0 && !selectWindowsUser ?\n                                    null\n                                    :\n                                    <>\n                                        <TextField\n                                            label=\"姓名或账户名\"\n                                            value={shareUserTextField}\n                                            className={classes.textFieldCode}\n                                            margin=\"normal\"\n                                            InputLabelProps={{\n                                                shrink: true\n                                            }}\n                                            helperText=\"输入登录账户添加至名单\"\n                                            onChange={(e) => this.onChangeShareUserTextField(e)}\n                                            InputProps={{\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Tooltip title=\"验证并添加\">\n                                                            <IconButton\n                                                                style={{ marginTop: -16 }}\n                                                                onClick={this.onClickShareAddUserToList}\n                                                            >\n                                                                {<DoneIcon />}\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n                                        <div className={classes.actionShareButtom}>\n                                            <Tooltip title=\"添加名单\">\n                                                <IconButton onClick={this.onClickSelectUsersOpenDialog}><AddCircleOutline /></IconButton>\n                                            </Tooltip>\n                                        </div>\n                                    </>\n                            }\n                            <TextField\n                                label=\"分享名单\"\n                                multiline\n                                value={''}\n                                className={classes.textFieldShare}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                rows=\"16\"\n                                disabled\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                helperText=\"选择单击用户移除名单\"\n                            />\n                            <List className={classes.listShareAddUser} dense={true}>\n                                {\n                                    shareUsersList.length > 0 ?\n                                        shareUsersList.map((v, i) => {\n                                            return <ListItem\n                                                key={i}\n                                                button\n                                                onClick={() => this.onClickMoveUserList(v._id)}\n                                            >\n                                                <Avatar alt=\"\" src=\"/imgs/user/default.png\" />\n                                                <ListItemText primary={v.displayName} secondary={v.accountName} />\n                                            </ListItem>\n                                        })\n                                        : null\n                                }\n\n                            </List>\n                            {\n                                shareUsersList.length > 0 && !selectWindowsUser ?\n                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.confirmButton} onClick={this.onClickCloseShare}>撤销分享</Button>\n                                    :\n                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.confirmButton} onClick={this.onClickSubmitShare}>分享</Button>\n                            }\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.cancelButton} onClick={this.onClickCloseRightDrawer}>取消</Button>\n                        </div>\n                    }\n\n                    {\n                        tabValue === 1 &&\n                        <div className={classes.rightDrawerPaper}>\n                            <p>文件名:</p>\n                            <Typography className={classes.TypographyFileName}>{selected.length > 0 && selected[0].filename}</Typography>\n                            <form noValidate>\n                                <TextField\n                                    id=\"date2\"\n                                    label=\"设置过期时间\"\n                                    type=\"date\"\n                                    onChange={this.onChangeDateChange}\n                                    value={publicShareExpireTime}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </form>\n                            <form style={{ marginTop: 12 }}>\n                                <TextField\n                                    label=\"设置下载码\"\n                                    type=\"number\"\n                                    placeholder={'六位数字或者不设置'}\n                                    onChange={(e) => this.onChangePublicShareDownloadCode(e)}\n                                    value={publicShareDownloadCode}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </form>\n                            <TextField\n                                label=\"生成分享链接\"\n                                multiline\n                                value={publicShareUrl}\n                                onChange={null}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                disabled\n                                helperText=\"链接发送给分享对象\"\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                            />\n\n                            {\n                                publicShareId === '' ?\n                                    <Button\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        className={classes.confirmButton}\n                                        onClick={\n                                            publicShareUrl === '' ?\n                                                () => this.onClickCreatePublicShare(true)\n                                                :\n                                                () => this.onClickCreatePublicShare(false)\n                                        }\n                                    >\n                                        {\n                                            publicShareUrl === '' ? '生成' : '分享'\n                                        }\n                                    </Button>\n                                    :\n                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.confirmButton} onClick={this.onClickClosePublicShare}>关闭分享</Button>\n                            }\n\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.cancelButton} onClick={this.onClickCloseRightDrawer}>取消</Button>\n                        </div>\n                    }\n                </Drawer>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={noticeOpen}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}>\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n\n            </Fragment>\n        );\n    }\n}\n\nDocuments.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        minWidth: 900\n    },\n    flexcentercenter: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    textFieldCode: {\n        marginTop: 6\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    img: {\n        marginRight: 4\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    upload: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 48,\n        width: '100%',\n        borderRight: '1px solid lightgray',\n        marginRight: 12\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    actionBar: {\n        marginBottom: 12\n    },\n    deleteProgress: {\n        width: 100,\n        marginLeft: 14,\n        marginTop: 20\n    },\n    LabelTitle: {\n        display: 'flex',\n        marginLeft: 15,\n        paddingTop: 12,\n        color: 'gray'\n    },\n    shareButton: {\n        margin: '0px 20px',\n        width: 300,\n        backgroundColor: 'rgba(63, 81, 181, 0.08)',\n        '&:hover': {\n            backgroundColor: '#4699ff29',\n        }\n    },\n    confirmButton: {\n        margin: '4px'\n    },\n    cancelButton: {\n        margin: '4px',\n        color: 'white',\n        backgroundColor: '#ec3b3b',\n        '&:hover': {\n            backgroundColor: '#e63131',\n        }\n    },\n    toolbar: theme.mixins.toolbar,\n    tableCell: {\n        padding: '0px 10px'\n    },\n    link1: {\n        color: theme.palette.primary.main,\n        textDecoration: 'underline'\n    },\n    link2: {\n        color: '#4caf50',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n    },\n    closeBottom: {\n        color: theme.palette.primary.main,\n        fontSize: 28\n    },\n    fileTitle: {\n        height: 180,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    cellTitle: {\n        fontSize: 14, paddingLeft: 34, color: 'gray'\n    },\n    ListItem: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    drawerPaper: {\n        width: 460,\n        boxShadow: '0px 4px 6px 0px rgba(0,0,0,0.2)',\n    },\n    rightDrawerPaper: {\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'center',\n        padding: '0 20px'\n    },\n    TypographyFileName: {\n        wordBreak: 'break-word',\n        marginBottom: 15\n    },\n    textFieldShare: {\n        marginTop: 0,\n        marginBottom: 20,\n        zIndex: 99\n    },\n    actionShareButtom: {\n        justifyContent: 'flex-end',\n        display: 'flex',\n        marginTop: -10,\n        zIndex: 101\n    },\n    listShareAddUser: {\n        position: 'relative',\n        overflow: 'auto',\n        zIndex: 100,\n        height: 290,\n        marginTop: -380,\n        marginBottom: 80\n    },\n    breadcrumb: {\n        textDecoration: 'underline',\n        marginRight: 6,\n        cursor: 'pointer',\n        color: theme.palette.primary.main\n    },\n    searchLabel: {\n        marginRight: 6,\n    },\n    progress: {\n        margin: theme.spacing(0),\n        color: '#e0e0e0'\n    },\n    listItemText: {\n        marginLeft: 8,\n    },\n    rename: {\n        padding: '16px 16px 6px 16px'\n    }\n});\n\nexport default withStyles(styles)(Documents);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport AuthService from '../common/authService'\n\nclass Userauth extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            open: false,\n            noticeMessage: '',\n            datas: [],\n            role: null,\n            selectedIndex: 1,\n            check1: false, check2: false, check3: false, check4: false, check5: false, check6: false, check7: false, check8: false, check9: false, check10: false, check11: false, check12: false\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('用户授权')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            module: ['_4', '0']\n        })\n\n        this.authService.postData('/auth/home', info).then((res) => {\n            if (res.result) {\n                this.setState({ datas: res.message })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    onClickUpdateRoleCheck = (v) => {\n        this.setState({ [v.target.id]: !Boolean(this.state[v.target.id]) })\n    }\n\n    onClickRoleItem = (e) => {\n        let role = this.state.datas.filter((v) => {\n            return v._id === e\n        })[0]\n        this.setState({\n            role: e,\n            check1: (role.permission._1._.split(',')[0] === '1'),\n            check2: (role.permission._1._.split(',')[1] === '1'),\n            check3: (role.permission._1._.split(',')[2] === '1'),\n            check4: (role.permission._1._.split(',')[3] === '1'),\n            check5: (role.permission._1._.split(',')[4] === '1'),\n            check6: (role.permission._2._.split(',')[0] === '1'),\n            check7: (role.permission._2._.split(',')[1] === '1'),\n            check8: (role.permission._3._.split(',')[0] === '1'),\n            check9: (role.permission._3._.split(',')[1] === '1'),\n            check10: (role.permission._4._.split(',')[0] === '1'),\n            check11: (role.permission._4._.split(',')[1] === '1'),\n            check12: (role.permission._5._.split(',')[0] === '1')\n        })\n    };\n\n    onClickClearRole = () => {\n        this.setState({\n            check1: false,\n            check2: false,\n            check3: false,\n            check4: false,\n            check5: false,\n            check6: false,\n            check7: false,\n            check8: false,\n            check9: false,\n            check10: false,\n            check11: false,\n            check12: false\n        })\n    }\n\n    onClickUpdateRole = () => {\n        if (this.state.role === null) {\n            this.setState({ open: true, noticeMessage: '请选择用户角色' })\n            return false\n        }\n\n        const info = JSON.stringify({\n            _id: this.state.role,\n            _1: this.state.check1,\n            _2: this.state.check2,\n            _3: this.state.check3,\n            _4: this.state.check4,\n            _5: this.state.check5,\n            _6: this.state.check6,\n            _7: this.state.check7,\n            _8: this.state.check8,\n            _9: this.state.check9,\n            _10: this.state.check10,\n            _11: this.state.check11,\n            _12: this.state.check12,\n            module: ['_4', '1']\n        })\n\n        this.authService.postData('/auth/update', info).then((res) => {\n            if (res.result) {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.RefreshInfo()\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n\n    render() {\n        const { classes } = this.props\n        const { datas, role, check1, check2, check3, check4, check5, check6, check7, check8, check9, check10, check11, check12 } = this.state\n\n        return (\n            <Fragment>\n\n                <Grid container spacing={2} className={classes.main}>\n                    <Grid item xs={2}>\n                        <Paper>\n                            <List component=\"nav\">\n                                <ListItem style={{ textAlign: 'center' }}>\n                                    <ListItemText primary=\"用户角色\" />\n                                </ListItem>\n                            </List>\n                            <Divider />\n                            {\n                                datas.map((v, i) => {\n                                    return <List key={i} component=\"nav\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n                                        <ListItem\n                                            button\n                                            onClick={() => this.onClickRoleItem(v._id)}\n                                        >\n                                            <ListItemIcon>\n                                                <SupervisedUserCircle />\n                                            </ListItemIcon>\n                                            <ListItemText primary={v.displayName} />\n                                        </ListItem>\n                                    </List>\n                                })\n                            }\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper>\n                            <List component=\"nav\">\n                                <ListItem style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClickClearRole}>{'清除'}</Button>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClickUpdateRole}>{'更新'}</Button>\n                                </ListItem>\n                            </List>\n                            <Divider />\n                            {\n                                role !== null ?\n                                    <div className={classNames(classes.rightColumn)}>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>个人文档:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check1' checked={check1} value={String(check1)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"查看\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check2' checked={check2} value={String(check2)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"上传\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check3' checked={check3} value={String(check3)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"下载\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check4' checked={check4} value={String(check4)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"删除\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check5' checked={check5} value={String(check5)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"分享\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}> 人员信息: </div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check6' checked={check6} value={String(check6)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox >\n                                                <TextField\n                                                    label=\"查看\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{ marginTop: -10, width: 60 }\n                                                    }\n                                                />\n                                                <Checkbox id='check7' checked={check7} value={String(check7)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox >\n                                                <TextField\n                                                    label=\"修改\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{ marginTop: -10, width: 60 }\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>人员角色:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check8' checked={check8} value={String(check8)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"查看\"\n                                                    value={''}\n                                                    onChange={null}\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check9' checked={check9} value={String(check9)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"修改\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>用户授权:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check10' checked={check10} value={String(check10)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"查看\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check11' checked={check11} value={String(check11)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"修改\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>系统设置:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check12' checked={check12} value={String(check12)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"完全控制\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 90\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div> :\n                                    null\n                            }\n                        </Paper>\n                    </Grid >\n                </Grid>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        );\n    }\n}\n\nUserauth.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    main: {\n        marginBottom: 10,\n    },\n    iconsMarginRight: {\n        marginRight: theme.spacing(1)\n    },\n    mainBar: {\n        display: 'flex',\n        padding: '8px 16px'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '33.33%',\n    },\n    leftColumn: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 200\n    },\n    rightColumn: {\n        padding: '10px 40px'\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing(1)}px ${theme.spacing(6)}px`,\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n})\n\n\nexport default withStyles(styles)(Userauth)","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport AuthService from '../common/authService';\nimport Loading from '../common/loading'\nimport { LocalStorageKey } from '../common/config'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(5),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    infoBar: {\n        padding: theme.spacing(2),\n    }\n});\n\nclass logs extends Component {\n    _isMounted = true\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            datas: null\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('系统日志')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.authService.postData('/setting/log', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { datas } = this.state;\n        return (\n            <Fragment>\n                <Paper className={classes.infoBar}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        系统日志\n                    </Typography>\n                    <Typography component=\"p\">\n                        记录系统登录、操作等相关信息\n                    </Typography>\n                </Paper>\n                <Paper className={classes.root}>\n                    {datas !== null ?\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={{ width: '20%' }}>账号</TableCell>\n                                    <TableCell style={{ width: '15%' }} align=\"right\">操作模块</TableCell>\n                                    <TableCell >操作详情</TableCell>\n                                    <TableCell align=\"right\">操作时间</TableCell>\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n                                {\n                                    datas.map(row => (\n                                        <TableRow key={row._id}>\n                                            <TableCell component=\"th\" scope=\"row\"> {row.accountName} </TableCell>\n                                            <TableCell align=\"right\">{row.actionModule}</TableCell>\n                                            <TableCell>{row.actionDetails}</TableCell>\n                                            <TableCell align=\"right\">{row.actionTime}</TableCell>\n                                        </TableRow>\n                                    ))\n\n                                }\n                            </TableBody>\n                        </Table>\n                        :\n                        <Loading number={[0, 1, 2, 3, 4]} />\n                    }\n                </Paper>\n            </Fragment>\n        )\n    }\n}\n\nlogs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(logs);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    main: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        width: '100%'\n    }\n});\n\nfunction errorpage(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root} >\n            <Paper className={classes.main} elevation={1}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    404 页面\n                </Typography>\n                <Typography component=\"p\">\n                    你访问的页面不存在。\n                </Typography>\n            </Paper>\n        </div>\n    );\n}\n\nerrorpage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(errorpage);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport TextField from '@material-ui/core/TextField';\nimport EmailIcon from '@material-ui/icons/MailOutline';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport md5 from 'md5'\nimport Lock from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport InputIcon from '@material-ui/icons/Input';\n\nimport AuthService from '../common/authService'\nimport { LocalStorageKey } from '../common/config'\n\nclass SignIn extends React.Component {\n    _Mount = true\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            noticeOpen: false,\n            noticeMessage: null,\n            username: 'yongdingrui@contoso.com',\n            password: '123456'\n        }\n    }\n\n    componentWillMount() {\n        this.authService.postData('/login/init', null).then(res => {\n            if (this._Mount) {\n                if (res.result) {\n                    this.props.history.push('/setup')\n                }\n            }\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleEnterKey);\n    }\n\n    componentWillUmount() {\n        document.removeEventListener(\"keydown\", this.handleEenterKey);\n        this._Mount = false\n    }\n\n    handleEnterKey = (e) => {\n        if (e.keyCode === 13) {\n            this.onClickLogin()\n        }\n    }\n\n    onClickLogin = () => {\n\n        if (this.state.username !== '' && this.state.password !== '') {\n\n            let reg = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/\n\n            if (!reg.test(this.state.username)) {\n                this.setState({ noticeOpen: true, noticeMessage: '邮箱格式不正确,请重新输入!' })\n                return false\n            }\n\n            const datas = JSON.stringify({\n                username: this.state.username,\n                password: md5(this.state.password)\n            })\n\n            this.authService.login(datas).then(res => {\n                if (this._Mount) {\n                    if (res.result) {\n                        localStorage.setItem(LocalStorageKey, JSON.stringify(res.message))\n                        this.setState({ username: '', password: '' })\n                        this.props.history.push('/')\n                    } else {\n                        this.setState({ noticeOpen: true, noticeMessage: res.message })\n                    }\n                }\n            })\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '邮箱或密码未填写完整!' })\n        }\n    }\n\n    onChangeUserName = (e) => {\n        this.setState({ username: e.target.value })\n    }\n\n    onChangePassword = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n    onClickNoticeOpen = () => {\n        this.setState({ noticeOpen: true });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ noticeOpen: false });\n    };\n\n    onClickReset = () => {\n        this.setState({ username: '', password: '' });\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\" className={classes.Content}>\n                    <Typography component=\"div\" className={classes.left}>\n                        <img src={require('../assets/loginbg.png')} alt=\"\" />\n                    </Typography>\n                    <Typography component=\"div\" className={classes.right}>\n                        <Grid container className={classes.box} justify={\"center\"} direction={'column'}>\n                            <Typography variant=\"h5\" className={classes.logoText}>企业文档管理与分享平台</Typography>\n                            <Typography style={{ color: '#848484', margin: '4px 0' }}>Welcome back , Please sign in to your account.</Typography>\n                            <Typography style={{ color: '#848484' }}>一套文档集中式管理与安全有序分享的企业级解决方案。</Typography>\n\n                            <Divider className={classes.divider} />\n\n                            <Grid item xs={12} style={{ margin: '30px 0' }}>\n                                <Grid container justify=\"center\" spacing={2}>\n                                    <EmailIcon className={classes.icon} />\n                                    <TextField\n                                        className={classes.text}\n                                        label=\"邮箱\"\n                                        onChange={this.onChangeUserName}\n                                        value={this.state.username}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <Lock className={classes.icon} />\n                                    <TextField\n                                        className={classes.text}\n                                        type={'password'}\n                                        label=\"密码\"\n                                        onChange={this.onChangePassword}\n                                        value={this.state.password}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Divider className={classes.divider} />\n\n                            <Grid item xs={12}>\n                                <Grid container justify=\"flex-end\" spacing={2}>\n                                    <Grid item>\n                                        <Button\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            style={{ width: 100 }}\n                                            onClick={this.onClickLogin}\n                                        >\n                                            <InputIcon className={classes.rightIcon} />\n                                            {'登录'}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Button\n                                            style={{ width: 80 }}\n                                            onClick={this.onClickReset}\n                                        >\n                                            {'重置'}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                    </Typography>\n                </Container>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.noticeOpen}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    Content: {\n        display: 'flex',\n        padding: 0,\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.primary.main,\n        height: '100vh',\n        width: 480,\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 900\n    },\n    box: {\n        padding: '0 150px',\n        width: 900\n    },\n    divider: {\n        margin: '30px 0'\n    },\n    logoText: {\n        fontSize: '1.8rem',\n        lineHeight: '1.8'\n    },\n    icon: {\n        color: 'gray',\n        marginTop: '18px',\n        marginRight: '8px'\n    },\n    text: {\n        width: 260\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    rightIcon: {\n        marginRight: 8\n    },\n    cover: {\n        width: 80,\n        height: 100,\n        cursor: 'pointer'\n    }\n})\n\nexport default withStyles(styles)(SignIn);","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default class TableHeader extends React.Component {\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell style={{ width: '5%', padding: '0px 10px 0px 0px' }}></TableCell>\n                    <TableCell sortDirection={orderBy === 'filename' ? order : false} style={{ padding: '0px 10px 0px 0px' }}>\n                        <Tooltip\n                            title=\"文件名\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'filename'}\n                                direction={order}\n                                onClick={this.createSortHandler('filename')}\n                            >\n                                文件名\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '5%', padding: '0px 10px 0px 0px' }} align='right'>\n                        类型\n                    </TableCell>\n                    <TableCell sortDirection={orderBy === 'uploadDate' ? order : false} style={{ width: '12%', padding: '0px 10px 0px 0px' }} align='right'>\n                        <Tooltip\n                            title=\"时间\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'uploadDate'}\n                                direction={order}\n                                onClick={this.createSortHandler('uploadDate')}\n                            >\n                                时间\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '10%', padding: '0px 10px 0px 0px' }} align='right'>拥有者</TableCell>\n                    <TableCell style={{ width: '10%', padding: '0px 10px 0px 0px' }} align='center'>文件大小</TableCell>\n                </TableRow>\n            </TableHead>\n        );\n    }\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button';\nimport AuthService from '../../common/authService';\nimport TableHeader from './TableHeader'\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass DocFrom extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            order: 'asc',\n            orderBy: 'calories',\n            selected: [],\n            data: [],\n            page: 0,\n            rowsPerPage: 10,\n            loading: false,\n            open: false,\n            noticeMessage: null,\n            toolBar: false\n        };\n    }\n\n    componentWillMount() {\n        this.RefreshInfo()\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo = () => {\n        this.props.onChangeRefresh(true)\n        this.authService.postData('/file/sharefromlist', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ data: res.message })\n                } else {\n                    this.setState({ data: [], open: true, noticeMessage: res.message })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    handleRequestSort = (event, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleSelectAllClick = event => {\n        if (event.target.checked) {\n            this.setState(state => ({ selected: state.data.map(n => n._id) }));\n            return;\n        }\n        this.setState({ selected: [] });\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    onClickDownloadFile = (id) => {\n        const a = document.createElement('a')\n        a.setAttribute('href', this.authService.downloadFile('/file/down', id))\n        a.click()\n    }\n\n    isSelected = (id) => {\n        return this.state.selected.indexOf(id) !== -1;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { data, order, orderBy, selected, rowsPerPage, page, open, noticeMessage } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n        return (\n            <Fragment>\n                <div className={classes.root}>\n                    <div className={classes.tableWrapper}>\n                        <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                            <TableHeader\n                                numSelected={selected.length}\n                                order={order}\n                                orderBy={orderBy}\n                                onRequestSort={this.handleRequestSort}\n                                rowCount={data.length}\n                            />\n                            <TableBody>\n                                {stableSort(data, getSorting(order, orderBy))\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map(n => {\n                                        const isSelected = this.isSelected(n._id);\n                                        return (\n                                            <TableRow\n                                                hover\n                                                role=\"checkbox\"\n                                                tabIndex={-1}\n                                                key={n._id}\n                                                selected={isSelected}\n                                                style={n.metadata.status === 1 ? { borderLeft: '8px solid rgb(76, 175, 80)' } : { borderLeft: '8px solid rgb(255, 152, 0)' }}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Button size=\"small\" onClick={() => this.onClickDownloadFile(n._id)}>\n                                                        下载\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                        <img src={`/imgs/type/${n.metadata.typename}.png`} alt='' className={classes.img} />\n                                                        {n.metadata.filename}\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.typename}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.uploadDate.split('T')[0]}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.userDisplayName}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"center\">{((n.length / 1024) / 1024).toFixed(3)}MB</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: 49 * emptyRows }}>\n                                        <TableCell colSpan={7} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={data.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': '上一页',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': '下一页',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        labelRowsPerPage={'每页'}\n                    />\n                </div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nDocFrom.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginRight: `${theme.spacing(1)}px`,\n    },\n    table: {\n        minWidth: 1020,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    img: {\n        marginRight: 8,\n        height: 20\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    tableCell: {\n        padding: '0px 10px'\n    },\n});\n\nexport default withStyles(styles)(DocFrom);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button';\nimport AuthService from '../../common/authService';\nimport TableHeader from './TableHeader'\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass DocFrom extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            order: 'asc',\n            orderBy: 'calories',\n            selected: [],\n            data: [],\n            page: 0,\n            rowsPerPage: 10,\n            loading: false,\n            open: false,\n            noticeMessage: null,\n            toolBar: false\n        };\n    }\n\n    componentWillMount() {\n        this.RefreshInfo()\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        this.authService.postData('/file/sharetolist', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ data: res.message })\n                } else {\n                    this.setState({ data: [], open: true, noticeMessage: res.message })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    handleRequestSort = (event, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleSelectAllClick = event => {\n        if (event.target.checked) {\n            this.setState(state => ({ selected: state.data.map(n => n._id) }));\n            return;\n        }\n        this.setState({ selected: [] });\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    onClickDownloadFile = (id) => {\n        const a = document.createElement('a')\n        a.setAttribute('href', this.authService.downloadFile('/file/down', id))\n        a.click()\n    }\n\n    isSelected = (id) => {\n        return this.state.selected.indexOf(id) !== -1;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { data, order, orderBy, selected, rowsPerPage, page, open, noticeMessage } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n        return (\n            <Fragment>\n                <div className={classes.root}>\n                    <div className={classes.tableWrapper}>\n                        <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                            <TableHeader\n                                numSelected={selected.length}\n                                order={order}\n                                orderBy={orderBy}\n                                onRequestSort={this.handleRequestSort}\n                                rowCount={data.length}\n                            />\n                            <TableBody>\n                                {stableSort(data, getSorting(order, orderBy))\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map(n => {\n                                        const isSelected = this.isSelected(n._id);\n                                        return (\n                                            <TableRow\n                                                hover\n                                                role=\"checkbox\"\n                                                tabIndex={-1}\n                                                key={n._id}\n                                                selected={isSelected}\n                                                style={{ borderLeft: '8px solid rgb(153, 103, 179)' }}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Button size=\"small\" onClick={() => this.onClickDownloadFile(n._id)}>\n                                                        下载\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                        <img src={`/imgs/type/${n.metadata.typename}.png`} alt='' className={classes.img} />\n                                                        {n.metadata.filename}\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.typename}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.uploadDate.split('T')[0]}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.userDisplayName}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"center\">{((n.length / 1000) / 1000).toFixed(3)}MB</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: 49 * emptyRows }}>\n                                        <TableCell colSpan={7} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={data.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': '上一页',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': '下一页',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        labelRowsPerPage={'每页'}\n                    />\n                </div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nDocFrom.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginRight: `${theme.spacing(1)}px`,\n    },\n    table: {\n        minWidth: 1020,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    img: {\n        marginRight: 8,\n        height: 20\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    tableCell: {\n        padding: '0px 10px'\n    },\n});\n\nexport default withStyles(styles)(DocFrom);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Divider from '@material-ui/core/Divider';\n\nimport DocFrom from './docFrom'\nimport DocTo from './docTo'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nclass SimpleTabs extends React.Component {\n\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('分享文档')\n        this.props.onChangeChildFuncion(this)\n    }\n\n    render() {\n        const { value } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <Paper className={classes.root}>\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"分享给我的\" />\n                    <Tab label=\"我分享的\" />\n                </Tabs>\n                <Divider />\n                {\n                    value === 0\n                    &&\n                    <DocFrom onChangeRefresh={(e) => this.props.onChangeRefresh(e)} />\n                }\n                {\n                    value === 1\n                    &&\n                    <DocTo onChangeRefresh={(e) => this.props.onChangeRefresh(e)} />\n                }\n            </Paper>\n        );\n    }\n}\n\nSimpleTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTabs);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nimport AuthService from '../common/authService'\n\nclass Setting extends Component {\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            serverinfo: null,\n            fileupload: null,\n            quotaAndexpire: null\n        }\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('全局配置')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.authService.postData('/setting/home', null).then((res) => {\n            if (res.result) {\n                this.setState({\n                    serverinfo: res.message.serverinfo,\n                    fileupload: res.message.fileupload,\n                    quotaAndexpire: res.message.quotaAndexpire,\n                })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeTabsChange = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value, fileupload, quotaAndexpire } = this.state;\n        return (\n            <Fragment>\n                <div className={classes.root}>\n                    <AppBar position=\"static\">\n                        <Tabs value={value} onChange={this.onChangeTabsChange}>\n                            <Tab label=\"文件上传\" />\n                            <Tab label=\"配额与过期\" />\n                            <Tab label=\"文件归档\" />\n                            <Tab label=\"抹除数据\" />\n                        </Tabs>\n                    </AppBar>\n                    {\n                        value === 1 && fileupload !== null &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'文件上传限制大小:'}\n                                </InputLabel>\n                                <InputLabel className={classes.label}>\n                                    {fileupload.upladFileSize / 1000 / 1000} MB\n                                </InputLabel>\n                            </div>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'上传禁止文件格式:'}\n                                </InputLabel>\n                                <InputLabel className={classes.label}>\n                                    {fileupload.excludeExtension}\n                                </InputLabel>\n                            </div>\n                        </div>\n                    }\n                    {\n                        value === 2 && quotaAndexpire !== null &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'公有分享过期默认时间:'}\n                                </InputLabel>\n                                <InputLabel className={classes.label}>\n                                    {quotaAndexpire.fileShareExpires} day\n                                </InputLabel>\n                            </div>\n                        </div>\n                    }\n                    {\n                        value === 3 &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'文档库内容归档'}\n                                </InputLabel>\n                                <br />\n                                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                    <NavigationIcon className={classes.extendedIcon} />执行\n                                </Button>\n                            </div>\n                        </div>\n                    }\n                    {\n                        value === 4 &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'抹除文档库中所有内容'}\n                                </InputLabel>\n                                <br />\n                                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                    <NavigationIcon className={classes.extendedIcon} />执行\n                                </Button>\n                            </div>\n                        </div>\n                    }\n                </div>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        );\n    }\n}\n\nSetting.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    margin: {\n        padding: '20px 30px'\n    },\n    labelmargin: {\n        padding: 5\n    },\n    input: {\n        margin: theme.spacing(1)\n    },\n    label: {\n        color: 'green',\n        marginLeft: theme.spacing(2)\n    },\n    button: {\n        marginTop: theme.spacing(2)\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n});\n\nexport default withStyles(styles)(Setting);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport BlockIcon from '@material-ui/icons/Block';\n\nimport AuthService from '../common/authService'\n\nclass UserCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            disabled: props.status\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { disabled } = this.state\n\n        return (\n            <Paper className={classes.paper}>\n                <Paper className={classes.bar}>\n                    {disabled ? <b>{this.props.displayName}</b> : <b>{this.props.displayName}(已禁用)</b>}\n                </Paper>\n                <Grid container>\n                    {\n                        this.props.listLayout ?\n                            <Fragment>\n                                <Grid item xs={5}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={7}>\n                                    <List style={{ padding: '16px 0' }}>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                    </List>\n                                </Grid>\n                            </Fragment>\n                            :\n                            <Fragment>\n                                <Grid item xs={2}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={10}>\n                                    <div style={{ display: 'flex' }}>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <BusinessIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.department}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <PinDropIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.address}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                    </div>\n                                </Grid>\n                            </Fragment>\n                    }\n                </Grid>\n            </Paper >\n        )\n    }\n}\n\nUserCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    list_user_card: {\n        padding: '2px 0',\n        marginLeft: -26\n    },\n    listItem_user_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_user_card: {\n        paddingLeft: 4\n    },\n    bar: {\n        display: 'flex',\n        justifyContent:\n            'space-between',\n        height: 40,\n        backgroundColor: theme.palette.primary.main,\n        padding: '8px 20px 8px 20px',\n        color: 'white'\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    }\n});\n\nexport default withStyles(styles)(UserCard);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport UserCard from './userCard'\nimport Loading from '../common/loading'\nimport AuthService from '../common/authService'\n\nclass User extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            loading: false,\n            open: false,\n            noticeMessage: null,\n            userListLayout: 1,\n            count: 0,\n            number: 6,\n            before: 0,\n            after: 6,\n            datas: [],\n            page: 0,\n            searchButton: false,\n            disabled: false,\n            disabledColor: false,\n            userSearch: ''\n        }\n    }\n\n    handleChange = (_, value) => {\n        this.setState({ value });\n    };\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('人员列表')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.setState({ datas: [] })\n\n        let info = JSON.stringify({\n            before: this.state.before,\n            after: this.state.after\n        })\n\n        this.authService.postData('/user/home', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                } else {\n                    this.setState({ open: !this.state.open, noticeMessage: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    updateRefreshPage = () => {\n        this.RefreshInfo()\n    }\n\n    onChangeUserList = (e) => {\n        this.setState({ userListLayout: e })\n    }\n\n    onClickSearchBtn = () => {\n        this.setState({ searchButton: !this.state.searchButton })\n    }\n\n    onChangeUserSearch = (e) => {\n        this.setState({ userSearch: e.target.value })\n    }\n\n    onClickUserSearch = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            userSearch: this.state.userSearch\n        })\n\n        this.authService.postData('/user/query', info).then((res) => {\n            if (res.result) {\n                this.setState({ datas: res.message })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickNavigateBefore = () => {\n        this.setState({\n            count: this.state.count - 1,\n            before: (this.state.count - 1) * this.state.number,\n            after: (this.state.count) * this.state.number\n        }, () => { this.RefreshInfo() })\n    }\n\n    onClickNavigateNext = () => {\n        this.setState({\n            count: this.state.count + 1,\n            before: (this.state.count + 1) * this.state.number,\n            after: (this.state.count + 2) * this.state.number\n        }, () => {\n            this.RefreshInfo()\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const { userSearch, datas, userListLayout } = this.state\n\n        return (\n            <Fragment>\n\n                <div style={{ display: 'flex', justifyContent: 'space-between', height: 36 }}>\n                    <div style={{ display: 'flex' }}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={userListLayout === 1} onClick={() => this.onChangeUserList(1)}><ViewModuleIcon /></Button>\n                        <Button variant=\"contained\" color=\"primary\" disabled={userListLayout === 2} onClick={() => this.onChangeUserList(2)} className={classes.buttonLeftSpace}><ViewListIcon /></Button>\n                    </div>\n\n                    <div style={this.state.searchButton ? { margin: '-12px 12px 0px 12px', width: '100%' } : { display: 'none' }}>\n                        <div style={{ display: 'flex' }}>\n                            <TextField fullWidth label=\"用户名或姓名\" value={userSearch} onChange={this.onChangeUserSearch} />\n                            <Button color=\"primary\" className={classes.userSearchBtn} onClick={this.onClickUserSearch} >搜索</Button>\n                        </div>\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSearchBtn}><SearchIcon /></Button>\n                </div>\n\n                <div style={{ margin: 15 }} />\n\n                <Fragment>\n                    <Grid container spacing={1}>\n                        {\n                            datas.length > 0 ?\n                                datas.map((v, i) => {\n                                    return (\n                                        <Grid key={i} item xs={userListLayout === 1 ? 4 : 12}>\n                                            <UserCard uid={v._id} listLayout={userListLayout === 1} status={v.status} updateRefreshPage={this.updateRefreshPage} accountName={v.accountName} brithday={v.birthday} displayName={v.displayName} phone={v.phone} title={v.title} department={v.department} address={v.address} history={this.props.history} />\n                                        </Grid>\n                                    )\n                                })\n                                :\n                                [1, 2, 3].map((_, i) => {\n                                    return (\n                                        <Grid key={i} item xs={4}>\n                                            <Paper style={{ padding: '10px 0' }}>\n                                                <Loading number={[0, 1, 2, 3, 4]} />\n                                            </Paper>\n                                        </Grid>\n                                    )\n                                })\n                        }\n                    </Grid>\n\n                    <Paper style={{ display: 'flex', justifyContent: 'center', width: '100%', marginTop: 16, padding: '4px 0' }}>\n                        <Button size={'small'} color=\"default\" disabled={this.state.before <= 0} onClick={() => this.onClickNavigateBefore()} ><NavigateBeforeIcon /></Button>\n                        <Typography component={'span'} style={{ lineHeight: 2, padding: '0 8px' }}>{this.state.count + 1}</Typography>\n                        <Button size={'small'} color=\"default\" disabled={this.state.number > this.state.datas.length} onClick={() => this.onClickNavigateNext()} ><NavigateNextIcon /></Button>\n                    </Paper>\n                </Fragment>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment >\n        );\n    }\n}\n\nUser.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    list_user_card: {\n        padding: '4px 0',\n        marginLeft: -26\n    },\n    listItem_user_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_user_card: {\n        paddingLeft: 4\n    },\n    userSearchBtn: {\n        height: 36,\n        marginTop: 12\n    },\n    progress: {\n        margin: theme.spacing(2),\n    }\n});\n\nexport default withStyles(styles)(User);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BlockIcon from '@material-ui/icons/Block';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport AuthService from '../common/authService'\n\nclass UserCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            disabled: props.status,\n            anchorEl: null,\n        }\n    }\n\n    handleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    onClickUserEdit = (e) => {\n        this.props.history.push(`/uedit?id=${e}`)\n    }\n\n    onClickUserPwd = (e) => {\n        this.props.history.push(`/pwd?id=${e}`)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { disabled, anchorEl } = this.state\n\n        return (\n            <Paper className={classes.paper}>\n                <Paper className={classes.bar}>\n                    {disabled ? <b>{this.props.displayName}</b> : <b>{this.props.displayName}(已禁用)</b>}\n                    <span\n                        aria-owns={anchorEl ? 'edit-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={this.handleClick}\n                    >\n                        <MoreVertIcon />\n                    </span>\n                    <Menu\n                        id=\"edit-menu\"\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={() => this.onClickUserEdit(this.props.uid)}>\n                            <CreateIcon className={classes.extendedIcon} /><span>编辑资料</span>\n                        </MenuItem>\n                        <MenuItem onClick={() => this.onClickUserPwd(this.props.uid)}>\n                            <DeleteIcon className={classes.extendedIcon} /><span>重置密码</span>\n                        </MenuItem>\n                    </Menu>\n                </Paper>\n                <Grid container>\n                    {\n                        this.props.listLayout ?\n                            <Fragment>\n                                <Grid item xs={5}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={7}>\n                                    <List style={{ padding: '16px 0' }}>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                    </List>\n                                </Grid>\n                            </Fragment>\n                            :\n                            <Fragment>\n                                <Grid item xs={2}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={10}>\n                                    <div style={{ display: 'flex' }}>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <BusinessIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.department}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <PinDropIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.address}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                    </div>\n                                </Grid>\n                            </Fragment>\n                    }\n                </Grid>\n            </Paper >\n        )\n    }\n}\n\nUserCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    bar: {\n        display: 'flex',\n        justifyContent:\n            'space-between',\n        height: 40,\n        backgroundColor: theme.palette.primary.main,\n        padding: '8px 20px 8px 20px',\n        color: 'white'\n    },\n    list_user_card: {\n        padding: '2px 0',\n        marginLeft: -26\n    },\n    listItem_user_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_user_card: {\n        paddingLeft: 4\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    }\n});\n\nexport default withStyles(styles)(UserCard);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport UserCard from './muserCard'\nimport Loading from '../common/loading'\nimport AuthService from '../common/authService'\n\nclass UserManage extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            loading: false,\n            userManageListLayout: 1,\n            count: 0,\n            number: 6,\n            before: 0,\n            after: 6,\n            datas: [],\n            page: 0,\n            searchButton: false,\n            disabled: false,\n            disabledColor: false,\n            userManageSearch: ''\n        }\n    }\n\n    handleChange = (_, value) => {\n        this.setState({ value });\n    };\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('人员管理')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.setState({ datas: [] })\n\n        let info = JSON.stringify({ before: this.state.before, after: this.state.after })\n\n        this.authService.postData('/user/manage', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n                else {\n                    this.setState({ open: true, noticeMessage: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    updateRefreshPage = () => {\n        this.RefreshInfo()\n    }\n\n    onChangeUserManageList = (e) => {\n        this.setState({ userManageListLayout: e })\n    }\n\n    onClickSearchBtn = () => {\n        this.setState({ searchButton: !this.state.searchButton })\n    }\n\n    onClickAddUserManage = () => {\n        this.props.history.push('/uadd')\n    }\n\n    onChangeUserManageSearch = (e) => {\n        this.setState({ userManageSearch: e.target.value })\n    }\n\n    onClickUserSearch = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({ userSearch: this.state.userManageSearch })\n\n        this.authService.postData('/user/query', info).then((res) => {\n\n            if (res.result) {\n                this.setState({ datas: res.message })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickNavigateBefore = () => {\n        this.setState({\n            count: this.state.count - 1,\n            before: (this.state.count - 1) * this.state.number,\n            after: (this.state.count) * this.state.number\n        }, () => { this.RefreshInfo() })\n    }\n\n    onClickNavigateNext = () => {\n        this.setState({\n            count: this.state.count + 1,\n            before: (this.state.count + 1) * this.state.number,\n            after: (this.state.count + 2) * this.state.number\n        }, () => {\n            this.RefreshInfo()\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { userManageSearch, datas } = this.state\n\n        return (\n            <Fragment>\n                {\n                    <div style={{ display: 'flex', justifyContent: 'space-between', height: 36 }}>\n\n                        <div style={{ display: 'flex' }}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickAddUserManage}><PersonAddIcon /></Button>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.buttonLeftSpace} onClick={this.onClickSearchBtn}><SearchIcon /></Button>\n                        </div>\n\n                        <div style={this.state.searchButton ? { margin: '-12px 12px 0px 12px', width: '100%' } : { display: 'none' }}>\n                            <div style={{ display: 'flex' }}>\n                                <TextField fullWidth label=\"用户名搜索\" value={userManageSearch} onChange={this.onChangeUserManageSearch} />\n                                <Button color=\"primary\" className={classes.userSearchBtn} onClick={this.onClickUserSearch} >搜索</Button>\n                            </div>\n                        </div>\n\n                        <div style={{ display: 'flex' }}>\n                            <Button variant=\"contained\" color=\"primary\" disabled={this.state.userManageListLayout === 1} onClick={() => this.onChangeUserManageList(1)}><ViewModuleIcon /></Button>\n                            <Button variant=\"contained\" color=\"primary\" disabled={this.state.userManageListLayout === 2} onClick={() => this.onChangeUserManageList(2)} className={classes.buttonLeftSpace}><ViewListIcon /></Button>\n                        </div>\n\n                    </div>\n                }\n\n                <div style={{ margin: 15 }} />\n\n                <Fragment>\n                    <Grid container justify=\"center\" spacing={1}>\n                        {\n                            datas.length > 0 ?\n                                datas.map((v, i) => {\n                                    return (\n                                        <Grid key={i} item xs={this.state.userManageListLayout === 1 ? 4 : 12}>\n                                            <UserCard uid={v._id} listLayout={this.state.userManageListLayout === 1} status={v.status} updateRefreshPage={this.updateRefreshPage} accountName={v.accountName} brithday={v.birthday} displayName={v.displayName} phone={v.phone} title={v.title} department={v.department} address={v.address} history={this.props.history} />\n                                        </Grid>\n                                    )\n                                })\n                                :\n                                [1, 2, 3].map((_, i) => {\n                                    return (\n                                        <Grid key={i} item xs={4}>\n                                            <Paper style={{ padding: '10px 0' }}>\n                                                <Loading number={[0, 1, 2, 3, 4]} />\n                                            </Paper>\n                                        </Grid>\n                                    )\n                                })\n                        }\n                    </Grid>\n                    {\n                        <Paper style={{ display: 'flex', justifyContent: 'center', width: '100%', marginTop: 16, padding: '4px 0' }}>\n                            <Button size={'small'} color=\"default\" disabled={this.state.before <= 0} onClick={() => this.onClickNavigateBefore()} ><NavigateBeforeIcon /></Button>\n                            <Typography component={'span'} style={{lineHeight:2,padding:'0 8px'}}>{this.state.count + 1}</Typography>\n                            <Button size={'small'} color=\"default\" disabled={this.state.number > this.state.datas.length} onClick={() => this.onClickNavigateNext()} ><NavigateNextIcon /></Button>\n                        </Paper>\n                    }\n                </Fragment>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n\n            </Fragment >\n        );\n    }\n}\n\nUserManage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    list_userManage_card: {\n        padding: '2px 0',\n        marginLeft: -26\n    },\n    listItem_userManage_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_userManage_card: {\n        paddingLeft: 4\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    userSearchBtn: {\n        height: 36,\n        marginTop: 12\n    },\n});\n\nexport default withStyles(styles)(UserManage);","import React, { Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport TextField from '@material-ui/core/TextField';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Grid from '@material-ui/core/Grid';\nimport Lock from '@material-ui/icons/Lock';\nimport md5 from 'md5'\nimport AuthService from '../common/authService'\nimport { Link } from 'react-router-dom';\n\nclass SignIn extends React.Component {\n    _Mount = true\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            open: false,\n            noticeMessage: null,\n            username: '',\n            password: '',\n            repassword: ''\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleEnterKey);\n    }\n\n    componentWillUmount() {\n        document.removeEventListener(\"keydown\", this.handleEenterKey);\n    }\n\n    handleEnterKey = (e) => {\n        if (e.keyCode === 13) {\n            this.onClickRegister()\n        }\n    }\n\n    onClickRegister = () => {\n        if (this.state.username !== '' && this.state.password !== '' && this.state.password === this.state.repassword) {\n\n            let reg = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/\n\n            if (!reg.test(this.state.username)) {\n                this.setState({ open: true, noticeMessage: '邮箱格式不正确,请重新输入!' })\n                return false\n            }\n\n            const datas = JSON.stringify({\n                username: this.state.username,\n                password: md5(this.state.password)\n            })\n\n            this.authService.postData('/login/register', datas).then((res) => {\n                if (this._Mount) {\n                    if (res.result) {\n                        this.setState({\n                            username: '', password: '', repassword: '',\n                            open: true, noticeMessage: res.message\n                        })\n                    } else {\n                        this.setState({ open: true, noticeMessage: res.message })\n                    }\n                }\n            })\n        }\n        else {\n            this.setState({\n                open: true, noticeMessage: '邮箱或密码填写有误或未填写完整!'\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this._Mount = false\n    }\n\n    onChangeUserName = (e) => {\n        this.setState({ username: e.target.value })\n    }\n\n    onChangePassword = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n    onChangeRePassword = (e) => {\n        this.setState({ repassword: e.target.value })\n    }\n\n    onClickNoticeOpen = () => {\n        this.setState({ open: true });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        return (\n            <Fragment>\n                <Grid container justify={\"center\"}>\n                    <Grid item xs={12} sm={10} md={6} lg={4}>\n                        <Paper style={{ height: 530, marginTop: 120 }} elevation={12}>\n                            <div style={{ height: 220, backgroundColor: '#3F51B5', borderTopLeftRadius: 4, borderTopRightRadius: 4 }}>\n                                <div style={{ display: 'flex', justifyContent: 'center' }}><img src='/imgs/logo_big.png' alt='' style={{ height: 60, marginTop: 30 }} /></div>\n                                <div style={{ display: 'flex', justifyContent: 'center' }}><Typography style={{ color: 'white', marginTop: 40 }}>已有登录邮箱?<Link to='/' style={{ color: 'white' }}>登录</Link></Typography></div>\n                            </div>\n                            <Paper style={{ height: 260, margin: '-60px 40px 0 40px', padding: 30 }} elevation={12}>\n                                <Grid container justify={\"center\"} direction={'column'}>\n                                    <Grid container spacing={4} alignItems=\"flex-end\" alignContent=\"center\" >\n                                        <Grid item>\n                                            <MailIcon />\n                                        </Grid>\n                                        <Grid item lg={10} md={10} sm={10} xl={10} xs={10}>\n                                            <TextField id=\"input-mail-1\" fullWidth label=\"邮箱\" onChange={this.onChangeUserName} value={this.state.username} />\n                                        </Grid>\n                                    </Grid>\n\n                                    <div style={{ margin: 10 }} />\n\n                                    <Grid container spacing={4} alignItems=\"flex-end\" alignContent=\"center\" >\n                                        <Grid item>\n                                            <Lock />\n                                        </Grid>\n                                        <Grid item lg={10} md={10} sm={10} xl={10} xs={10}>\n                                            <TextField id=\"input-passwrd-1\" type={'password'} fullWidth label=\"设置密码\" onChange={this.onChangePassword} value={this.state.password} />\n                                        </Grid>\n                                    </Grid>\n\n                                    <div style={{ margin: 10 }} />\n\n                                    <Grid container spacing={4} alignItems=\"flex-end\" alignContent=\"center\" >\n                                        <Grid item>\n                                            <Lock />\n                                        </Grid>\n                                        <Grid item lg={10} md={10} sm={10} xl={10} xs={10}>\n                                            <TextField id=\"input-passwrd-2\" type={'password'} fullWidth label=\"确认密码\" onChange={this.onChangeRePassword} value={this.state.repassword} />\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item style={{ margin: '30px 20px 20px 20px' }}>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            size=\"large\"\n                                            onClick={this.onClickRegister}\n                                        >\n                                            注册\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Grid from '@material-ui/core/Grid';\nimport querySearch from \"stringquery\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DesktopAccessDisabledIcon from '@material-ui/icons/DesktopAccessDisabled';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n\nimport AuthService from '../common/authService'\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Edit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: '',\n            result: {\n                _id: '',\n                accountName: '',\n                displayName: '',\n                phone: '',\n                birthday: '',\n                department: '',\n                title: '',\n                address: '',\n                status: false,\n                role: '',\n            },\n\n        };\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickBack = () => {\n        this.props.history.go(-1)\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('编辑人员')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        const info = JSON.stringify({\n            _id: querySearch(this.props.location.search).id\n        })\n        this.authService.postData('/user/find', info).then((res) => {\n            if (res.result) {\n                this.setState({ result: res.message })\n                this.props.onChangeRefresh(false)\n            } else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onChangeStatus = () => {\n        const { result } = { ...this.state };\n        const currentState = result;\n        currentState['status'] = !this.state.result.status\n        this.setState({ result: currentState })\n    }\n\n    onChangeField = (e) => {\n        const { result } = { ...this.state };\n        const currentState = result;\n        const { id, value } = e.target;\n        currentState[id] = value;\n\n        this.setState({ result: currentState });\n    }\n\n    onClickSave = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify(this.state.result)\n        this.authService.postData('/user/edit', info).then((res) => {\n            this.setState({ open: true, noticeMessage: res.message })\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onChangeDeleteUser = () => {\n        const info = JSON.stringify({\n            id: this.state.result._id\n        })\n\n        this.authService.postData('/user/del', info).then((res) => {\n            if (res.result) {\n                this.props.history.push(`/muser`)\n            }\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { value, result, open, noticeMessage } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={this.onChangeTab}>\n                        <Tab label=\"基本资料\" />\n                        <Tab label=\"相关信息\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"accountName\"\n                                    fullWidth\n                                    label=\"邮箱\"\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                    value={result.accountName}\n                                    onChange={null}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"displayName\"\n                                    fullWidth\n                                    label=\"姓名\"\n                                    value={result.displayName}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"phone\"\n                                    fullWidth\n                                    label=\"电话\"\n                                    value={result.phone}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"birthday\"\n                                    fullWidth\n                                    type=\"date\"\n                                    label=\"生日\"\n                                    value={result.birthday}\n                                    onChange={this.onChangeField}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"department\"\n                                    fullWidth label=\"部门\"\n                                    value={result.department}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"title\"\n                                    fullWidth label=\"岗位\"\n                                    value={result.title}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={8}>\n                                <TextField\n                                    id=\"address\"\n                                    fullWidth\n                                    label=\"地址\"\n                                    value={result.address}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                {\n                    value === 1 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={8} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"role\"\n                                    fullWidth\n                                    label=\"角色\"\n                                    value={result.role}\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} style={{ height: 30 }}></Grid>\n                            <Grid item xs={4}>\n                                <DesktopAccessDisabledIcon style={{ color: 'red', marginTop: 12, marginRight: 12 }} />\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>该用户当前是否被禁止使用？</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"status\"\n                                        aria-label=\"status\"\n                                        value={result.status ? '1' : '0'}\n                                        onChange={this.onChangeStatus}\n                                    >\n                                        <FormControlLabel value={'0'} control={<Radio />} label=\"是\" />\n                                        <FormControlLabel value={'1'} control={<Radio />} label=\"否\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickBack}><ReplyIcon className={classes.extendedIcon} />返回</Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSave}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                        </div>\n                        <div>\n                            <Button variant=\"contained\" color='primary' onClick={this.onChangeDeleteUser}><DeleteIcon className={classes.extendedIcon} />删除</Button>\n                        </div>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    bottomCard: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 20px'\n    },\n    cardContent: {\n        padding: '30px 40px 30px 40px'\n    }\n});\n\nEdit.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Edit);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport md5 from 'md5'\nimport TextField from '@material-ui/core/TextField';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport AuthService from '../common/authService'\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Add extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: '',\n            result: {\n                accountName: '',\n                passWord: '',\n                displayName: '',\n                phone: '',\n                birthday: '',\n                department: '',\n                title: '',\n                address: '',\n                role: '',\n                permission: {}\n            },\n\n        };\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickBack = () => {\n        this.props.history.go(-1)\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('新建人员')\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onChangeField = (e) => {\n        const { result } = { ...this.state };\n        const currentState = result;\n        const { id, value } = e.target;\n        currentState[id] = value;\n\n        this.setState({ result: currentState });\n    }\n\n    onClickSave = () => {\n        this.props.onChangeRefresh(true)\n\n        let reg = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/\n\n        if (!reg.test(this.state.result.accountName)) {\n            this.setState({ open: true, noticeMessage: '邮箱格式不正确,请重新输入!' })\n            this.props.onChangeRefresh(false)\n            return false\n        }\n\n        if (this.state.result.passWord === '' || this.state.result.passWord === null) {\n            this.setState({ open: true, noticeMessage: '密码没有设置,请填写完整!' })\n            this.props.onChangeRefresh(false)\n            return false\n        } else {\n            const { result } = { ...this.state };\n            const currentState = result;\n            currentState['passWord'] = md5(this.state.result.passWord)\n            this.setState({ result: currentState })\n        }\n\n        let info = JSON.stringify(this.state.result)\n\n        this.authService.postData('/user/add', info).then((res) => {\n\n            const { result } = { ...this.state };\n            const currentState = result;\n            currentState['accountName'] = ''\n            currentState['passWord'] = ''\n            currentState['displayName'] = ''\n\n            this.setState({ open: true, noticeMessage: res.message, result: currentState })\n            this.props.onChangeRefresh(false)\n        })\n\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { value, result, open, noticeMessage } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={this.onChangeTab}>\n                        <Tab label=\"基本资料\" />\n                        <Tab label=\"相关信息\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={4} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"accountName\"\n                                    fullWidth\n                                    label=\"邮箱\"\n                                    value={result.accountName}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"passWord\"\n                                    type=\"password\"\n                                    fullWidth\n                                    label=\"密码\"\n                                    value={result.passWord}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"displayName\"\n                                    fullWidth\n                                    label=\"姓名\"\n                                    value={result.displayName}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"phone\"\n                                    fullWidth\n                                    label=\"电话\"\n                                    value={result.phone}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"birthday\"\n                                    fullWidth\n                                    type=\"date\"\n                                    label=\"生日\"\n                                    value={result.birthday}\n                                    onChange={this.onChangeField}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"department\"\n                                    fullWidth label=\"部门\"\n                                    value={result.department}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"title\"\n                                    fullWidth label=\"岗位\"\n                                    value={result.title}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={8}>\n                                <TextField\n                                    id=\"address\"\n                                    fullWidth\n                                    label=\"地址\"\n                                    value={result.address}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                {\n                    value === 1 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={4} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"role\"\n                                    fullWidth\n                                    label=\"所属角色\"\n                                    value={result.role}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickBack}><ReplyIcon className={classes.extendedIcon} />返回</Button>\n                        </div>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSave}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                        </div>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    bottomCard: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 20px'\n    },\n    cardContent: {\n        padding: '15px 40px 30px 40px'\n    }\n});\n\nAdd.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Add);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Grid from '@material-ui/core/Grid';\nimport AuthService from '../common/authService'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nclass RoleAdd extends Component {\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: null,\n            roleName: '',\n            roleDescription: ''\n        };\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('增加角色')\n    }\n\n    onChangeTabIndex = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickNavigationBack = () => {\n        this.props.history.go(-1)\n    }\n\n    onChangeRoleName = (e) => {\n        this.setState({ roleName: e.target.value })\n    }\n\n    onChangeRoleDescription = (e) => {\n        this.setState({ roleDescription: e.target.value })\n    }\n\n    onChangeSubmit = () => {\n\n        if (this.state.roleName === '' || this.state.roleDescription === '') {\n            this.setState({ open: true, noticeMessage: '必填信息有误' })\n            return false;\n        }\n\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            displayName: this.state.roleName,\n            description: this.state.roleDescription,\n            module: ['_3', '0']\n        })\n        this.authService.postData('/role/add', info).then((res) => {\n            this.setState({ open: true, noticeMessage: res.message, roleName: '', roleDescription: '' })\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { value, roleName, roleDescription } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={this.onChangeTabIndex}>\n                        <Tab label=\"角色属性\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={8} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    fullWidth\n                                    label=\"角色名称\"\n                                    value={roleName}\n                                    onChange={this.onChangeRoleName}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={8}>\n                                <TextField\n                                    fullWidth\n                                    label=\"角色描述\"\n                                    multiline\n                                    rows=\"4\"\n                                    value={roleDescription}\n                                    onChange={this.onChangeRoleDescription}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={12}></Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickNavigationBack}><ReplyIcon className={classes.extendedIcon} />返回</Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.onChangeSubmit}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nRoleAdd.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    extendedIcon: {\n        marginRight: 4\n    }\n});\n\nexport default withStyles(styles)(RoleAdd);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Grid from '@material-ui/core/Grid';\nimport querySearch from \"stringquery\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport md5 from 'md5'\n\nimport AuthService from '../common/authService'\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Passwrd extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: '',\n            _id: querySearch(this.props.location.search).id,\n            passWord: '',\n            rePassWord: '',\n            result: {\n                _id: '',\n                accountName: '',\n                displayName: ''\n            },\n\n        };\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickBack = () => {\n        this.props.history.go(-1)\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('重置密码')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            _id: this.state._id\n        })\n\n        this.authService.postData('/user/find', info).then((res) => {\n            if (res.result) {\n                this.setState({ result: res.message })\n                this.props.onChangeRefresh(false)\n            } else {\n                this.setState({ data: [], open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeFieldPwd = (e) => {\n        this.setState({ passWord: e.target.value })\n    }\n\n    onChangeFieldRePwd = (e) => {\n        this.setState({ rePassWord: e.target.value })\n    }\n\n    onClickSave = () => {\n        if (this.state.passWord === '' || this.state.rePassWord === '') {\n            this.setState({ open: true, noticeMessage: '修改密码不能为空' })\n            return false\n        }\n        if (this.state.passWord === this.state.rePassWord) {\n            this.props.onChangeRefresh(true)\n            let info = JSON.stringify({\n                _id: this.state._id,\n                passWord: md5(this.state.passWord),\n                rePassWord: md5(this.state.rePassWord)\n            })\n            this.authService.postData('/user/pwd', info).then((res) => {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            })\n        } else {\n            this.setState({ open: true, noticeMessage: '修改密码不一致' })\n        }\n\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { value, result, open, noticeMessage, passWord, rePassWord } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value}>\n                        <Tab label=\"基本资料\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    fullWidth\n                                    label=\"邮箱\"\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                    value={result.accountName}\n                                    onChange={null}\n                                />\n                            </Grid>\n                            <Grid item xs={12}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    fullWidth\n                                    label=\"姓名\"\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                    value={result.displayName}\n                                    onChange={null}\n                                />\n                            </Grid>\n                            <Grid item xs={12}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"passWord\"\n                                    fullWidth\n                                    label=\"设置密码\"\n                                    type={'password'}\n                                    value={passWord}\n                                    onChange={this.onChangeFieldPwd}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"rePassWord\"\n                                    fullWidth\n                                    label=\"确认密码\"\n                                    type={'password'}\n                                    value={rePassWord}\n                                    onChange={this.onChangeFieldRePwd}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickBack}><ArrowBackIcon className={classes.extendedIcon} />返回</Button>\n                        </div>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSave}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                        </div>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    bottomCard: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 20px'\n    },\n    cardContent: {\n        padding: '30px 40px 30px 40px'\n    }\n});\n\nPasswrd.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Passwrd);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nimport { LocalStorageKey } from '../common/config.js'\nimport AuthService from '../common/authService'\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('个人资料')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        // this.props.onChangeRefresh(true)\n        // this.authService.postData('/dashboard', null).then(res => {\n        //     if (res.result) {\n        //         var v = res.message\n        //         this.setState(v)\n        //         this.props.onChangeRefresh(false)\n        //     } else {\n        //         this.props.onChangeRefresh(false)\n        //     }\n        // })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <Grid container className={classes.root}>\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/imgs/card/post-1.png\"\n                                title=\"个人资料背景\"\n                            >\n                                <Grid container className={classes.media} justify='center' direction=\"column\" alignItems=\"center\">\n                                    <Avatar alt=\"\" style={{ height: 120, width: 120 }} src=\"/imgs/user/default.png\" />\n                                    <Typography variant=\"h5\" style={{ marginTop: 12, color: 'white' }}>{unescape(this.getToken().u.d)}</Typography>\n                                    <Grid>\n                                        <Button variant=\"contained\" className={classes.button}>\n                                            技术部\n                                        </Button>\n                                        <Button variant=\"contained\" className={classes.button}>\n                                            UI设计师\n                                        </Button>\n                                        <Button variant=\"contained\" className={classes.button}>\n                                            Level5\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </CardMedia>\n                            <CardContent>\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    be\n                                    nev\n                                    lent\n                                </Typography>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    adjective\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">更多信息</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                    </Grid>\n                </Grid>\n            </Fragment>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    media: {\n        height: 333\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n})\n\nexport default withStyles(styles)(Dashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { grey } from '@material-ui/core/colors';\n\nconst styles = theme => ({\n    root: {\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        top: 36,\n        right: 0,\n        left: 0,\n    },\n    fake: {\n        backgroundColor: grey[200],\n        height: theme.spacing(1),\n        margin: theme.spacing(2),\n        // Selects every two elements among any group of siblings.\n        '&:nth-child(2n)': {\n            marginRight: theme.spacing(3),\n        },\n    },\n});\n\nclass ClickAway extends React.Component {\n    state = {\n        open: false,\n        ClickAwayListener: false\n    };\n\n    handleClick = () => {\n        this.setState({\n            open: true,\n            ClickAwayListener: true\n        });\n    };\n\n    handleClickAway = () => {\n        console.log('!!!')\n        if (this.state.ClickAwayListener) {\n            this.setState({\n                ClickAwayListener: false,\n                open: true\n            })\n        } else {\n            this.setState({\n                ClickAwayListener: true,\n                open: false\n            })\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { open } = this.state;\n        const fake = <div className={classes.fake} />;\n\n        return (\n            <div className={classes.root}>\n                <Button onClick={this.handleClick}>Open menu</Button>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <div>\n                        {open ? (\n                            <Paper className={classes.paper}>\n                                {fake}\n                                {fake}\n                                {fake}\n                                {fake}\n                                {fake}\n                            </Paper>\n                        ) : null}\n                    </div>\n                </ClickAwayListener>\n            </div>\n        );\n    }\n}\n\nClickAway.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ClickAway);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport SideMenu from './common/sideMenu'\n\nimport Setup from './setup'\nimport Dashboard from './dashboard'\nimport Helper from './helper'\nimport Download from './download'\nimport Role from './role'\nimport Documents from './documents/personal'\nimport Userauth from './permission'\nimport Logs from './logs'\nimport Errorpage from './errorpage'\nimport Login from './login'\nimport Share from './documents/share'\nimport Setting from './setting'\nimport User from './user'\nimport UserManage from './user/manage'\nimport Register from './register'\nimport UserEdit from './user/edit.js'\nimport UserAdd from './user/add.js'\nimport CreateRole from './role/roleadd'\nimport Password from './user/pwd'\nimport Person from './person'\n\nimport Test from './test'\n\nimport { LocalStorageKey } from './common/config.js'\n\nconst drawerWidth = 180;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // this.onScrollHideBar = this.onScrollHideBar.bind(this);\n    this.state = {\n      anchorEl: null,\n      barTitle: '',\n      refresh: false,\n      open: true,\n      // barHide: false\n    }\n  }\n\n  // componentDidMount() {\n  //   window.addEventListener('scroll', this.onScrollHideBar);\n  // };\n\n  // componentWillUnmount() {\n  //   window.removeEventListener('scroll', this.onScrollHideBar);\n  // };\n\n  // onScrollHideBar() {\n  //   if (window.scrollY > 60) {\n  //     this.setState({ barHide: true })\n  //   }\n  //   else {\n  //     this.setState({ barHide: false })\n  //   }\n  // }\n\n  loggedIn() {\n    const token = localStorage.getItem(LocalStorageKey)\n    return !!token && !this.isTokenExpired(JSON.parse(token).t)\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < (Date.now() / 1000)) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n    catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return JSON.parse(localStorage.getItem(LocalStorageKey))\n  }\n\n  onClickDrawerOpen = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleProfileMenuClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleLogout = () => {\n    this.setState({ anchorEl: null });\n    localStorage.removeItem(this.state.localStorageKey)\n    localStorage.clear()\n  }\n\n  onChangeBarTitle = (e) => {\n    this.setState({ barTitle: e })\n  }\n\n  onChangeRefresh = (e) => {\n    this.setState({ refresh: e })\n  }\n\n  onChangeChildFuncion = (e) => {\n    this.child = e\n  }\n\n  onClickRefresh = () => {\n    this.child.RefreshInfo()\n  }\n\n  render() {\n    const { anchorEl, barTitle, open, barHide } = this.state;\n    const { classes } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route\n              render={({ location }) => (\n                <div\n                  className={classes.root}\n                >\n                  {\n                    this.loggedIn()\n                      ?\n                      <Fragment>\n\n                        <CssBaseline />\n\n                        <AppBar className={barHide ? classes.appBarHide : classes.appBar}>\n                          <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                              <IconButton\n                                className={open ? classes.menuButton : classes.menuIconButtonTransform}\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={this.onClickDrawerOpen}\n                              >\n                                <MenuIcon />\n                              </IconButton>\n                              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                {barTitle}\n                              </Typography>\n                            </div>\n                            <Typography noWrap>\n                              <img src='/imgs/logo.png' alt='' style={{ height: 55 }} />\n                            </Typography>\n                            <div className={classes.sectionDesktop}>\n                              <IconButton color=\"inherit\" onClick={this.onClickRefresh} >\n                                {\n                                  this.state.refresh\n                                    ?\n                                    <CircularProgress size={22} className={classes.progress} />\n                                    :\n                                    <RefreshIcon />\n                                }\n                              </IconButton>\n                              <IconButton\n                                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleProfileMenuOpen}\n                                color=\"inherit\"\n                              >\n                                <AccountCircle />\n                              </IconButton>\n                              <Menu\n                                anchorEl={anchorEl}\n                                open={Boolean(anchorEl)}\n                                onClose={this.handleProfileMenuClose}\n                              >\n                                <MenuItem><Link to='/person' style={{ textDecoration: 'none', color: 'black' }} onClick={this.handleProfileMenuClose}>个人资料</Link></MenuItem>\n                                <MenuItem onClick={this.handleLogout}>退出系统</MenuItem>\n                              </Menu>\n                            </div>\n                          </Toolbar>\n                        </AppBar>\n\n                        <Drawer\n                          variant=\"permanent\"\n                          classes={{\n                            paper: open ? classes.paper : classes.minPaper\n                          }}\n                          open={open}\n                        >\n                          <div className={classes.toolbar} />\n                          <SideMenu open={open} />\n                        </Drawer>\n\n                        <div className={open ? classes.main : classes.minMain}>\n                          <div className={classes.toolbar} />\n                          <Switch key={location.key}>\n                            <Route exact path='/' render={(props) => <Dashboard {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/share' render={(props) => <Share {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/role' render={(props) => <Role {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/user' render={(props) => <User {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/uedit' render={(props) => <UserEdit {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/uadd' render={(props) => <UserAdd {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/muser' render={(props) => <UserManage {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/pwd' render={(props) => <Password {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/doc' render={(props) => <Documents {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/auth' render={(props) => <Userauth {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/log' render={(props) => <Logs {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/setting' render={(props) => <Setting {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/roleadd' render={(props) => <CreateRole {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/person' render={(props) => <Person {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/helper' render={(props) => <Helper {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n\n                              <Route path='/test' render={(props) => <Test {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route component={Errorpage} />\n                          </Switch>\n                        </div>\n\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Switch key={location.key}>\n                          <Route exact path='/' render={(props) => <Login {...props} />} />\n                          <Route path='/register' render={(props) => <Register {...props} />} />\n                          <Route path='/setup' render={(props) => <Setup {...props} />} />\n                          <Route path='/download' render={(props) => <Download {...props} />} />\n                          <Route component={Login} />\n                        </Switch>\n                      </Fragment>\n                  }\n                </div>\n              )}\n            />\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#3F51B5' },\n    secondary: { main: '#fdb94e', contrastText: '#fff', },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    marginTop: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarHide: {\n    zIndex: theme.zIndex.drawer + 1,\n    marginTop: -64,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  paper: {\n    position: 'absolute',\n    width: drawerWidth,\n    flexShrink: 0,\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    backgroundColor: 'transparent',\n    borderRight: 0,\n    [theme.breakpoints.down('sm')]: {\n      width: 0,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n    [theme.breakpoints.up('md')]: {\n      width: theme.spacing(9),\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n  },\n  minPaper: {\n    position: 'absolute',\n    flexShrink: 0,\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    backgroundColor: 'transparent',\n    borderRight: 0,\n    width: theme.spacing(9),\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  main: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginLeft: 165,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down('md')]: {\n      marginLeft: 55,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n  },\n  minMain: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginLeft: 55,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  toolbar: theme.mixins.toolbar,\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n    },\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n    transform: 'rotate(0deg)',\n    transition: '0.5s'\n  },\n  menuIconButtonTransform: {\n    marginLeft: -12,\n    marginRight: 20,\n    transform: 'rotate(-180deg)',\n    transition: '0.5s',\n  },\n  progress: {\n    color: 'white'\n  },\n});\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'es6-shim'\nimport 'isomorphic-fetch'\nimport App from './App'\nimport './style.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}