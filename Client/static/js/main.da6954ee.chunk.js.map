{"version":3,"sources":["assets/loginbg.png","common/config.js","common/sideMenu.js","common/authService.js","setup/index.js","common/loading.js","dashboard/index.js","helper/index.js","download/index.js","role/index.js","documents/personal/components/TableHeader.js","common/component.js","documents/personal/components/selectUser.js","documents/personal/components/TablePagination.js","documents/personal/components/moveToFolder.js","documents/personal/index.js","permission/index.js","logs/index.js","errorpage/index.js","login/index.js","documents/share/TableHeader.js","documents/share/docFrom.js","documents/share/docTo.js","documents/share/index.js","setting/index.js","user/userCard.js","user/index.js","user/muserCard.js","user/manage.js","register/index.js","user/edit.js","user/add.js","role/roleadd.js","user/pwd.js","person/index.js","test/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","sideMenu","state","documentsChecked","userChecked","systemChecked","onClickExpansionDocumentsMenu","_this","setState","onClickExpansionUserMenu","onClickExpansionSystemMenu","JSON","parse","localStorage","getItem","classes","this","props","permission","getToken","u","react_default","a","createElement","react","List","react_router_dom","to","style","textDecoration","ListItem","button","className","listItem","ListItemIcon","sideListItemIcon","Dashboard_default","ListItemText","listItemText","primary","_1","_","indexOf","onClick","KeyboardArrowDown_default","AttachFile_default","Collapse","in","open","sideWidth","minSideWidth","Description_default","Stars_default","Divider","_2","SupervisorAccount_default","AccountBox_default","split","AccountCircle_default","_3","SupervisedUserCircle_default","_4","VerifiedUser_default","_5","Settings_default","Build_default","History_default","React","Component","withStyles","theme","marginLeft","padding","color","Object","defineProperty","paddingLeft","transition","transitions","create","easing","sharp","duration","enteringScreen","breakpoints","down","AuthService","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","domain","document","token","t","info","userData","_this2","Promise","resolve","reject","fetch","concat","method","headers","Accept","Content-Type","body","then","res","json","resJson","catch","err","url","_this3","x-access-info","stringify","x-access-token","error","data","_this4","_this5","Setup","onClickStep","v","parseInt","conn","connuser","connpwd","connaddress","connport","conndatabase","authService","postData","result","step","step0Status","message","user","configuser","configpwd","md5","configdisplayname","step1Status","onChangeConnUser","e","target","value","onChangeConnPWD","onChangeConnAddress","onChangeConnPort","onChangeConnDatabase","onChangeConfigUser","onChangeConfigPWD","onChangeConfigDisplyName","onClickLogin","history","push","CssBaseline","Container","maxWidth","Content","Typography","component","left","src","require","alt","right","Grid","container","box","justify","direction","variant","margin","divider","Fragment","item","xs","spacing","TextField","label","onChange","text","InputLabelProps","shrink","type","Button","width","disabled","display","justifyContent","alignItems","backgroundColor","palette","main","height","icon","marginTop","marginRight","paper","rightIcon","cover","cursor","loading","number","map","key","grey","fake","&:nth-child(2n)","Dashboard","_isMounted","onClickNavDoc","onClickNavHelper","acount","scount","userTop5","userTop10","onChangeBarTitle","RefreshInfo","onChangeChildFuncion","onChangeRefresh","_this$state","list","length","i","root","Card","card","size","dashBtnIcon","FileCopy_default","fontSize","title","gutterBottom","Date","toDateString","Share_default","Assessment_default","AccountBalance_default","CardMedia","media","image","CardContent","CardActions","Paper","Avatar","AssignmentInd_default","displayName","secondary","inline","accountName","common_loading","flexGrow","minWidth","marginBottom","helper","actionBar","search","searchIcon","Search_default","InputBase","placeholder","inputRoot","input","inputInput","fullWidth","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","heading","ExpansionPanelDetails","flex","position","borderRadius","shape","fade","common","white","&:hover","up","pointerEvents","Download","onClickDownloadFile","sid","downloadCode","downloadPublicFile","blob","get","window","URL","createObjectURL","filename","href","download","decodeURI","click","revokeObjectURL","onChangeDownloadCode","fileId","fileName","expireTime","fileSize","location","pathname","timestampToTime","timestamp","date","getFullYear","getMonth","getDate","details","content","controls","helperText","flexDirection","paddingBottom","playIcon","role","onClickNavigationAdd","onClickRemoveUser","roleId","userId","noticeMessage","onClickOpenUserList","rightDrawer","usersList","searchUsersList","onClickNoticeClose","onClickListItemSelectUser","onClickOpenMenu","event","anchorEl","currentTarget","getAttribute","onClickCloseMenu","onClickCloseRightDrawer","onClickDeleteRole","_id","onChangeSearchUsersList","searchTextField","newUserList","filter","x","datas","MenuOpen","Boolean","GroupAdd_default","bar","IconButton","PersonAdd_default","data-id","DeleteForever_default","Popover","onClose","anchorOrigin","vertical","horizontal","elevation","transformOrigin","member","y","Chip","onDelete","chip","Drawer","anchor","paperAnchorRight","drawerPaper","toolbar","ClassNames","drawerToolBar","ArrowForward_default","dense","Snackbar","ContentProps","aria-describedby","SnackbarContent","flexWrap","mixins","background","maxHeight","paddingTop","boxShadow","TableHeader","createSortHandler","property","onRequestSort","_this$props","order","orderBy","TableHead","TableRow","TableCell","sortDirection","Tooltip","placement","enterDelay","TableSortLabel","active","align","fill","fillOpacity","attributeType","attributeName","from","dur","repeatCount","selectUser","onChangeConfirm","selected","onClickAddUsersToList","onClickCancel","onChangeSelected","s","l","find","other","onChangeRadioGroup","radioGroupValue","onChangeSelectUserOrRole","selectUserOrRole","onChangeSelectRoleOrUser","selectRoleOrUser","onClickSearchUserOrRole","progress","onClickDelSelected","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","DialogTitle","RadioGroup","aria-label","name","row","FormControlLabel","control","Radio","DialogContent","InputProps","endAdornment","InputAdornment","LinearProgress","Face_default","description","DialogActions","autoFocus","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","flexShrink","withTheme","moveToFolder","onClickSelectFolder","checked","filePath","values","top","undefined","Checkbox","tabIndex","disableRipple","metadata","bottom","onClickConfirmMoveFile","onClickCloseMoveFile","Documents","handleRequestSort","onClickCreateFolder","folderName","path","noticeOpen","onChangeCreatefolder","onClickSelectOne","typename","uploadDate","newSelected","searchSelectOneFileType","handleChangePage","handleChangeRowsPerPage","isSelected","onChangeSearchSelectFileName","searchSelectFileName","searchData","onChangeSearchSelectType","searchSelectType","onChangeSearchSelectFileSize","searchSelectFileSize","onChangeSearchPublicShareExpireTime","searchPublicShareExpireTime","onClickTabIndex","tabBarButtonArea","onChangeSearch","onChangeFileInput","InputFile","stepOneValue","files","onMouseOverSearch","searchStyle","onClickSelectUsersOpenDialog","onClickViewDetail","viewdetail","onClickUploadFile","uploadloading","toFixed","version","status","userDisplayName","d","shareId","publicShareId","publicShareExpireTime","publicShareUrl","FormData","append","uploadFile","setAttribute","downloadFile","onClickDeleteFile","deleteloading","shareUsersList","selectWindowsUser","onChangeTabsValue","tabValue","onChangeShareUserTextField","shareUserTextField","onClickShareAddUserToList","onClickBreadcrumb","onCloseSelectUsersDialog","c","onClickSubmitShare","onClickCloseShare","onClickMoveUserList","onClickCreatePublicShare","codeLength","publicShareDownloadCode","toString","host","UUID","v4","onClickClosePublicShare","openMoveFile","onClickOpenMoveFile","onChangeDateChange","onClickClickAway","AwaySearch","onClickRename","onClickCancelBtnRename","onClickConfirmBtnRename","newFileName","onChangeRename","onClickShareFileButton","file","onClickTabBottonBack","onClickCellFileName","currentpath","onChangePublicShareDownloadCode","toolBar","subBar","stepOneError","AwaySearchInput","fileType","fileCreateTime","fileOwner","fileStatus","filepublicShareId","showRename","listenerDateFormatInput","listenerSelectUser","objects","assign","b","array","cmp","stabilizedThis","el","index","sort","desc","emptyRows","min","openRename","accept","multiple","ref","ele","upload","htmlFor","Attachment_default","wrapper","aria-haspopup","onClickOpenTagsMenu","searchLabel","startAdornment","noValidate","LabelTitle","breadcrumb","CloudUploadOutlined_default","FolderOpen_default","HighlightOff_default","highlight","deleteProgress","CloudDownloadOutlined_default","HowToVote_default","Create_default","DeleteSweep_default","Table","TableHeader_TableHeader","numSelected","rowCount","TableBody","stableSort","getSorting","slice","n","borderLeft","scope","link1","link2","tableCell","colSpan","borderBottom","fileTitle","cellTitle","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","SelectProps","native","onChangeRowsPerPage","labelRowsPerPage","ActionsComponent","components_selectUser","components_moveToFolder","Popper","_ref","TransitionProps","Fade","timeout","rename","AppBar","Tabs","Tab","rightDrawerPaper","TypographyFileName","textFieldCode","Done_default","actionShareButtom","YoutubeSearchedFor_default","multiline","textFieldShare","rows","listShareAddUser","confirmButton","cancelButton","flexcentercenter","textField","img","lighten","light","dark","borderRight","shareButton","closeBottom","flexFlow","wordBreak","zIndex","overflow","Userauth","onClickUpdateRoleCheck","onClickRoleItem","check1","check2","check3","check4","check5","check6","check7","check8","check9","check10","check11","check12","onClickClearRole","onClickUpdateRole","_6","_7","_8","_9","_10","_11","_12","selectedIndex","textAlign","classNames","rightColumn","String","iconsMarginRight","mainBar","typography","pxToRem","secondaryHeading","verticalAlign","column","flexBasis","leftColumn","link","logs","infoBar","table","actionModule","actionDetails","actionTime","overflowX","objectSpread","gutters","SignIn","_Mount","handleEnterKey","keyCode","username","password","test","login","setItem","onChangeUserName","onChangePassword","onClickNoticeOpen","onClickReset","addEventListener","removeEventListener","handleEenterKey","logoText","MailOutline_default","LockOutlined_default","Input_default","lineHeight","DocFrom","handleSelectAllClick","tableWrapper","share_TableHeader_TableHeader","hover","SimpleTabs","handleChange","indicatorColor","textColor","centered","docFrom","docTo","Setting","onChangeTabsChange","serverinfo","fileupload","quotaAndexpire","labelmargin","InputLabel","upladFileSize","excludeExtension","fileShareExpires","Navigation_default","extendedIcon","UserCard","listLayout","avatar","Block_default","Switch","list_user_card","listItem_user_card","listItemText_user_card","CardMembership_default","SettingsPhone_default","phone","DateRange_default","brithday","Business_default","department","PinDrop_default","address","buttonLeftSpace","User","updateRefreshPage","onChangeUserList","userListLayout","onClickSearchBtn","searchButton","onChangeUserSearch","userSearch","onClickUserSearch","onClickNavigateBefore","before","after","onClickNavigateNext","disabledColor","ViewModule_default","ViewList_default","userSearchBtn","userCard","uid","birthday","NavigateBefore_default","NavigateNext_default","handleClick","handleClose","onClickUserEdit","onClickUserPwd","aria-owns","MoreVert_default","Menu","MenuItem","Delete_default","UserManage","onChangeUserManageList","userManageListLayout","onClickAddUserManage","onChangeUserManageSearch","userManageSearch","muserCard","list_userManage_card","listItem_userManage_card","listItemText_userManage_card","onClickRegister","repassword","onChangeRePassword","sm","md","lg","borderTopLeftRadius","borderTopRightRadius","alignContent","Mail_default","xl","Lock_default","Edit","onChangeTab","onClickBack","go","onChangeStatus","currentState","onChangeField","_e$target","onClickSave","onChangeDeleteUser","querySearch","_this$state3","cardContent","DesktopAccessDisabled_default","FormControl","FormLabel","bottomCard","bottomButton","Reply_default","Save_default","Add","passWord","_this$state4","RoleAdd","onChangeTabIndex","onClickNavigationBack","onChangeRoleName","roleName","onChangeRoleDescription","roleDescription","onChangeSubmit","Passwrd","onChangeFieldPwd","onChangeFieldRePwd","rePassWord","ArrowBack_default","unescape","pos","ClickAway","ClickAwayListener","handleClickAway","console","log","onClickAway","App","onClickDrawerOpen","handleDrawerClose","handleProfileMenuOpen","handleProfileMenuClose","handleLogout","removeItem","localStorageKey","clear","barTitle","refresh","child","onClickRefresh","isTokenExpired","decode","exp","now","barHide","isMenuOpen","MuiThemeProvider","react_router","render","loggedIn","appBarHide","appBar","Toolbar","menuButton","menuIconButtonTransform","Menu_default","noWrap","sectionDesktop","CircularProgress","Refresh_default","minPaper","common_sideMenu","minMain","exact","dashboard","share","src_role","src_user","edit","add","manage","pwd","personal","src_permission","src_logs","setting","roleadd","person","src_helper","Errorpage","register","setup","Login","createMuiTheme","contrastText","useNextVariants","_paper","_main","drawer","whiteSpace","leavingScreen","transform","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da6954ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginbg.44b8eb74.png\";","const LocalStorageKey = 'd.c.i'\n\nexport { LocalStorageKey }\n\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AttachFile from '@material-ui/icons/AttachFile';\nimport Settings from '@material-ui/icons/Settings';\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccount';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\nimport History from '@material-ui/icons/History';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport Stars from '@material-ui/icons/Stars';\nimport Dashboard from '@material-ui/icons/Dashboard';\nimport Description from '@material-ui/icons/Description';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport BuildIcon from '@material-ui/icons/Build';\n\nimport Collapse from '@material-ui/core/Collapse';\n\nimport { LocalStorageKey } from './config.js'\n\nclass sideMenu extends React.Component {\n\n    state = {\n        documentsChecked: false,\n        userChecked: false,\n        systemChecked: false\n    }\n\n    onClickExpansionDocumentsMenu = () => {\n        this.setState({ documentsChecked: !this.state.documentsChecked })\n    }\n\n    onClickExpansionUserMenu = () => {\n        this.setState({ userChecked: !this.state.userChecked })\n    }\n\n    onClickExpansionSystemMenu = () => {\n        this.setState({ systemChecked: !this.state.systemChecked })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    render() {\n        const { classes } = this.props;\n        const permission = this.getToken().u.p\n\n        return (\n            <Fragment>\n                <List>\n                    <Link to={'/'} style={{ textDecoration: 'none' }}>\n                        <ListItem button className={classes.listItem} >\n                            <ListItemIcon className={classes.sideListItemIcon}>\n                                <Dashboard />\n                            </ListItemIcon>\n                            <ListItemText className={classes.listItemText} primary={'概览'} />\n                        </ListItem>\n                    </Link>\n\n                    {\n                        permission._1._.indexOf('1') !== -1 ?\n                            <Fragment>\n                                <ListItem button className={classes.listItem} onClick={this.onClickExpansionDocumentsMenu}>\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        {this.state.documentsChecked ? <KeyboardArrowDown /> : <AttachFile />}\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'个人文档'} />\n                                </ListItem>\n                                <Collapse in={this.state.documentsChecked}>\n                                    <Link to={'/doc'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <Description />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'我的文档'} />\n                                        </ListItem>\n                                    </Link>\n                                    <Link to={'/share'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <Stars />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'分享文档'} />\n                                        </ListItem>\n                                    </Link>\n                                    <Divider />\n                                </Collapse>\n                            </Fragment>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._2._.indexOf('1') !== -1 ?\n                            <Fragment>\n                                <ListItem button className={classes.listItem} onClick={this.onClickExpansionUserMenu}>\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        {this.state.userChecked ? <KeyboardArrowDown /> : <SupervisorAccount />}\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'人员信息'} />\n                                </ListItem>\n                                <Collapse in={this.state.userChecked}>\n                                    <Link to={'/user'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <AccountBox />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'人员列表'} />\n                                        </ListItem>\n                                    </Link>\n                                    {\n                                        permission._2._.split(',')[1].indexOf('1') !== -1 ?\n                                            <Link to={'/muser'} style={{ textDecoration: 'none' }}>\n                                                <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                                        <AccountCircle />\n                                                    </ListItemIcon>\n                                                    <ListItemText className={classes.listItemText} primary={'设置人员'} />\n                                                </ListItem>\n                                            </Link>\n                                            :\n                                            null\n                                    }\n                                    <Divider />\n                                </Collapse>\n                            </Fragment>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._3._.indexOf('1') !== -1 ?\n                            <Link to={'/role'} style={{ textDecoration: 'none' }}>\n                                <ListItem button className={classes.listItem} >\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        <SupervisedUserCircle />\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'人员角色'} />\n                                </ListItem>\n                            </Link>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._4._.indexOf('1') !== -1 ?\n                            <Link to={'/auth'} style={{ textDecoration: 'none' }}>\n                                <ListItem button className={classes.listItem} >\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        <VerifiedUser />\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'用户授权'} />\n                                </ListItem>\n                            </Link>\n                            :\n                            null\n                    }\n\n                    {\n                        permission._5._.indexOf('1') !== -1 ?\n                            <Fragment>\n                                <ListItem button className={classes.listItem} onClick={this.onClickExpansionSystemMenu}>\n                                    <ListItemIcon className={classes.sideListItemIcon}>\n                                        {this.state.systemChecked ? <KeyboardArrowDown /> : <Settings />}\n                                    </ListItemIcon>\n                                    <ListItemText className={classes.listItemText} primary={'设置'} />\n                                </ListItem>\n\n                                <Collapse in={this.state.systemChecked}>\n                                    <Link to={'/setting'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <BuildIcon />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'系统设置'} />\n                                        </ListItem>\n                                    </Link>\n                                    <Link to={'/log'} style={{ textDecoration: 'none' }}>\n                                        <ListItem button className={this.props.open ? classes.sideWidth : classes.minSideWidth}>\n                                            <ListItemIcon className={classes.sideListItemIcon}>\n                                                <History />\n                                            </ListItemIcon>\n                                            <ListItemText className={classes.listItemText} primary={'系统日志'} />\n                                        </ListItem>\n                                    </Link>\n                                </Collapse>\n                            </Fragment>\n                            :\n                            null\n                    }\n                </List>\n            </Fragment >\n        );\n    }\n}\n\nconst styles = theme => ({\n    listItem: {\n        marginLeft: 0\n    },\n    listItemText: {\n        padding: '0',\n        color: 'black'\n    },\n    sideListItemIcon: {\n        marginLeft: 8\n    },\n    sideWidth: {\n        paddingLeft: 40,\n        transition: theme.transitions.create('padding', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        [theme.breakpoints.down('md')]: {\n            paddingLeft: 16,\n            transition: theme.transitions.create('padding', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            })\n        },\n    },\n    minSideWidth: {\n        paddingLeft: 16,\n        transition: theme.transitions.create('padding', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        })\n    }\n})\n\nsideMenu.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(sideMenu);","import React from 'react';\nimport { LocalStorageKey } from './config'\n\nexport default class AuthService extends React.Component {\n\n    constructor() {\n        super()\n        this.domain = 'http://' + document.domain + ':8080'\n\n        this.token = localStorage.getItem(LocalStorageKey) !== null ? JSON.parse(localStorage.getItem(LocalStorageKey)).t : null\n        this.info = localStorage.getItem(LocalStorageKey) !== null ? JSON.parse(localStorage.getItem(LocalStorageKey)).u : null\n    }\n\n    login(userData) {\n        return new Promise((resolve, reject) => {\n            fetch(`${this.domain}/login`, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: userData\n            })\n                .then((res) => {\n                    return res.json()\n                })\n                .then(resJson => {\n                    resolve(resJson)\n                })\n                .catch((err) => {\n                    reject(err)\n                })\n        })\n    }\n\n    postData(url, userData) {\n        return new Promise((resolve, reject) => {\n            try {\n                fetch(`${this.domain}${url}`, {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'x-access-info': JSON.stringify(this.info),\n                        'x-access-token': this.token\n                    },\n                    body: userData\n                })\n                    .then((res) => {\n                        return res.json()\n                    })\n                    .then(resJson => {\n                        resolve(resJson)\n                    })\n                    .catch((err) => {\n                        reject(err)\n                    })\n            } catch (error) {\n                reject('发生错误!')\n            }\n        })\n    }\n\n    downloadPublicFile(url, data) {\n        return new Promise((resolve, reject) => {\n            try {\n                fetch(`${this.domain}${url}`, {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: data\n                }).then((res) => {\n                    resolve(res)\n                })\n            } catch (error) {\n                reject('发生错误!')\n            }\n        })\n    }\n\n    uploadFile(url, data) {\n        return new Promise((resolve, reject) => {\n            try {\n                fetch(`${this.domain}${url}`, {\n                    method: 'POST',\n                    headers: {\n                        'x-access-info': JSON.stringify(this.info),\n                        'x-access-token': this.token\n                    },\n                    body: data\n                })\n                    .then((res) =>\n                        res.json()\n                    )\n                    .then(resJson => {\n                        resolve(resJson)\n                    })\n                    .catch((err) => {\n                        reject(err)\n                    })\n            } catch (error) {\n                reject('发生错误!')\n            }\n        })\n    }\n\n    downloadFile(url, data) {\n        return `${this.domain}${url}?id=${data}&token=${this.token}`\n    }\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport md5 from 'md5'\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\n\nimport AuthService from '../common/authService'\n\nclass Setup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            step: 0,\n            step0Status: '',\n            step1Status: '',\n\n            connuser: '',\n            connpwd: '',\n            connaddress: '',\n            connport: '',\n            conndatabase: '',\n\n            configuser: '',\n            configpwd: '',\n            configdisplayname: ''\n        }\n    }\n\n    onClickStep = (v) => {\n        switch (parseInt(v)) {\n            case 0:\n                const conn = JSON.stringify({\n                    connuser: this.state.connuser,\n                    connpwd: this.state.connpwd,\n                    connaddress: this.state.connaddress,\n                    connport: this.state.connport,\n                    conndatabase: this.state.conndatabase\n                })\n                this.authService.postData('/setup', conn).then(res => {\n                    if (res.result) {\n                        this.setState({ step: 1 })\n                    } else {\n                        this.setState({ step0Status: res.message })\n                    }\n                })\n                break;\n            case 1:\n                const user = JSON.stringify({\n                    configuser: this.state.configuser,\n                    configpwd: md5(this.state.configpwd),\n                    configdisplayname: this.state.configdisplayname\n                })\n                this.authService.postData('/setup/user', user).then(res => {\n                    if (res.result) {\n                        this.setState({ step: 2 })\n                    } else {\n                        this.setState({ step1Status: res.message })\n                    }\n                })\n                break;\n            default:\n                break\n        }\n    }\n\n    onChangeConnUser = (e) => {\n        this.setState({ connuser: e.target.value })\n    }\n\n    onChangeConnPWD = (e) => {\n        this.setState({ connpwd: e.target.value })\n    }\n\n    onChangeConnAddress = (e) => {\n        this.setState({ connaddress: e.target.value })\n    }\n\n    onChangeConnPort = (e) => {\n        this.setState({ connport: e.target.value })\n    }\n\n    onChangeConnDatabase = (e) => {\n        this.setState({ conndatabase: e.target.value })\n    }\n\n    onChangeConfigUser = (e) => {\n        this.setState({ configuser: e.target.value })\n    }\n\n    onChangeConfigPWD = (e) => {\n        this.setState({ configpwd: e.target.value })\n    }\n\n    onChangeConfigDisplyName = (e) => {\n        this.setState({ configdisplayname: e.target.value })\n    }\n\n    onClickLogin = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\" className={classes.Content}>\n                    <Typography component=\"div\" className={classes.left}>\n                        <img src={require('../assets/loginbg.png')} alt=\"\" />\n                    </Typography>\n                    <Typography component=\"div\" className={classes.right}>\n                        <Grid container className={classes.box} justify={\"center\"} direction={'column'}>\n                            <Typography variant=\"h5\">安装并设置</Typography>\n                            <Typography variant=\"h4\" style={{ color: '#848484', margin: '4px 0' }}>企业文档管理与分享平台</Typography>\n\n                            <Divider className={classes.divider} />\n                            {\n                                this.state.step === 0 ?\n                                    <>\n                                        <Typography variant=\"overline\" style={{ color: '#848484' }}>配置连接MongoDB数据库：</Typography>\n                                        <Grid item xs={12} style={{ margin: '20px 0' }}>\n                                            <Grid container spacing={2}>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"连接数据库账户\"\n                                                        onChange={this.onChangeConnUser}\n                                                        value={this.state.connuser}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"密码\"\n                                                        type={'password'}\n                                                        onChange={this.onChangeConnPWD}\n                                                        value={this.state.connpwd}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"服务器地址\"\n                                                        onChange={this.onChangeConnAddress}\n                                                        value={this.state.connaddress}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"端口\"\n                                                        onChange={this.onChangeConnPort}\n                                                        value={this.state.connport}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        label=\"数据库名称\"\n                                                        onChange={this.onChangeConnDatabase}\n                                                        value={this.state.conndatabase}\n                                                        className={classes.text}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Typography variant=\"overline\" style={{ color: '#848484' }}>验证结果：{this.state.step0Status}</Typography>\n                                    </>\n                                    :\n                                    this.state.step === 1 ?\n                                        <>\n                                            <Typography variant=\"overline\" style={{ color: '#848484' }}>设置系统管理员：</Typography>\n                                            <Grid item xs={12} style={{ margin: '20px 0' }}>\n                                                <Grid container spacing={2}>\n                                                    <Grid item>\n                                                        <TextField\n                                                            label=\"账户名(邮箱格式)\"\n                                                            onChange={this.onChangeConfigUser}\n                                                            value={this.state.configuser}\n                                                            className={classes.text}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <TextField\n                                                            label=\"密码\"\n                                                            type={'password'}\n                                                            onChange={this.onChangeConfigPWD}\n                                                            value={this.state.configpwd}\n                                                            className={classes.text}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <TextField\n                                                            label=\"显示名称\"\n                                                            onChange={this.onChangeConfigDisplyName}\n                                                            value={this.state.configdisplayname}\n                                                            className={classes.text}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Typography variant=\"overline\" style={{ color: '#848484' }}>设置结果：{this.state.step1Status}</Typography>\n                                        </>\n                                        :\n                                        <Typography variant=\"overline\" style={{ color: '#848484' }}>配置完成,请重新登录.</Typography>\n                            }\n                            <Divider className={classes.divider} />\n\n                            <Grid item xs={12}>\n                                {\n                                    parseInt(this.state.step) === 2 ?\n                                        <Grid container justify=\"flex-end\" spacing={2}>\n                                            <Grid item>\n                                                <Button\n                                                    style={{ width: 100 }}\n                                                    onClick={this.onClickLogin}\n                                                >\n                                                    {'登录'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                        :\n                                        <Grid container justify=\"flex-end\" spacing={2}>\n                                            <Grid item>\n                                                <Button\n                                                    style={{ width: 100 }}\n                                                    disabled={parseInt(this.state.step) === 0 ? true : false}\n                                                >\n                                                    {'上一步'}\n                                                </Button>\n                                            </Grid>\n\n                                            <Grid item>\n                                                <Button\n                                                    style={{ width: 80 }}\n                                                    onClick={() => this.onClickStep(this.state.step)}\n                                                >\n                                                    {'下一步'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                }\n                            </Grid>\n\n                        </Grid>\n                    </Typography>\n                </Container>\n\n            </Fragment>\n        )\n    }\n}\n\nSetup.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    Content: {\n        display: 'flex',\n        padding: 0,\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.primary.main,\n        height: '100vh',\n        width: 480,\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 900\n    },\n    box: {\n        padding: '0 150px',\n        width: 900\n    },\n    divider: {\n        margin: '20px 0'\n    },\n    text: {\n        width: 600\n    },\n    icon: {\n        color: 'gray',\n        marginTop: '18px',\n        marginRight: '8px'\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    rightIcon: {\n        marginRight: 8\n    },\n    cover: {\n        width: 80,\n        height: 100,\n        cursor: 'pointer'\n    }\n})\n\nexport default withStyles(styles)(Setup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\nconst styles = theme => ({\n    fake: {\n        height: theme.spacing(1),\n        margin: theme.spacing(2),\n        '&:nth-child(2n)': {\n            marginRight: theme.spacing(4),\n        },\n    },\n});\n\nclass loading extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            this.props.number.map(v => (\n                <div\n                    key={v}\n                    style={{\n                        backgroundColor: grey[200]\n                    }}\n                    className={classes.fake}\n                />\n            ))\n        )\n    }\n}\n\nloading.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(loading);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\nimport AuthService from '../common/authService'\nimport Loading from '../common/loading'\n\nconst title = '企业文档分享'\n\nclass Dashboard extends Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            acount: 0,\n            scount: 0,\n            userTop5: [],\n            userTop10: []\n        };\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('概览')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        this.setState({\n            userTop5: [],\n            userTop10: []\n        })\n        const info = JSON.stringify({\n            module: ['_1', '0']\n        })\n        this.authService.postData('/dashboard', info).then(res => {\n            if (this._isMounted) {\n                this.setState(res.message)\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onClickNavDoc = () => {\n        this.props.history.push(`/doc`)\n    }\n\n    onClickNavHelper = () => {\n        this.props.history.push(`/helper`)\n    }\n\n    render() {\n        const { classes } = this.props\n        const { acount, scount, userTop5, userTop10 } = this.state;\n\n        let list = (length) => {\n            var res = [];\n            for (var i = 0; i < length + 1; i++) {\n                res.push(<StarsIcon key={i} />)\n            }\n            return res\n        }\n\n        return (\n            <Fragment>\n                <Grid container className={classes.root} spacing={1}>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#1287DE', width: 100 }}>\n                                        <FileCopyIcon style={{ color: 'white' }} fontSize={'large'} />\n                                    </Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>文档库数量</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">{acount}</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#FD8508', width: 100 }}><ShareIcon style={{ color: 'white' }} fontSize={'large'} /></Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>已分享数量</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">{scount}</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#EE2B2A', width: 100 }}>\n                                        <AssessmentIcon style={{ color: 'white' }} fontSize={'large'} />\n                                    </Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>文档排行榜</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">Top 5</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Card className={classes.card}>\n                            {\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <Button variant=\"contained\" size=\"large\" className={classes.dashBtnIcon} style={{ backgroundColor: '#40A33F', width: 100 }}>\n                                        <AccountBalanceIcon style={{ color: 'white' }} fontSize={'large'} />\n                                    </Button>\n                                    <div style={{ padding: 10, marginLeft: 10 }}>\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>分享排行榜</Typography>\n                                        <Typography variant=\"h5\" component=\"h2\">Top 10</Typography>\n                                        <Typography color=\"textSecondary\">{new Date().toDateString()}</Typography>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                                <Card>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image=\"/imgs/card/beard.jpeg\"\n                                        title={title}\n                                    />\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {title}\n                                        </Typography>\n                                        <Typography component=\"p\">\n                                            基于知识分享理念而设计的文档管理分享与平台，解决文档分散、文档传递不可控等根本原因，帮助企业构建集中的海量文档管理平台，对文档进行全生命周期管理。\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={this.onClickNavDoc}>\n                                            开启文档\n                                        </Button>\n                                        <Button size=\"small\" color=\"primary\" onClick={this.onClickNavHelper}>\n                                            使用帮助\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={6}>\n                                        <Paper>\n                                            <List>\n                                                {\n                                                    userTop5.length > 0 ?\n                                                        userTop5.map((v, i) => {\n                                                            return (<ListItem key={i}>\n                                                                <Avatar style={{ marginRight: 8 }}>\n                                                                    <AssignmentIndIcon />\n                                                                </Avatar>\n                                                                <ListItemText\n                                                                    primary={`${v.displayName}`}\n                                                                    secondary={\n                                                                        <React.Fragment>\n                                                                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                                                                {v.accountName}\n                                                                                <br />\n                                                                                {\n                                                                                    list(4 - i)\n                                                                                }\n                                                                            </Typography>\n                                                                        </React.Fragment>\n                                                                    }\n                                                                />\n                                                            </ListItem>)\n                                                        })\n                                                        :\n                                                        <Loading number={[0, 1, 2, 3, 4]} />\n                                                }\n                                            </List>\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Paper>\n                                            <List>\n                                                {\n                                                    userTop10.length > 0 ?\n                                                        userTop10.map((v, i) => {\n                                                            return (<ListItem key={i}>\n                                                                <Avatar style={{ marginRight: 8 }}>\n                                                                    <AssignmentIndIcon />\n                                                                </Avatar>\n                                                                <ListItemText\n                                                                    primary={v.displayName}\n                                                                    secondary={\n                                                                        <React.Fragment>\n                                                                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                                                                {v.accountName}\n                                                                            </Typography>\n                                                                        </React.Fragment>\n                                                                    }\n                                                                />\n                                                            </ListItem>)\n                                                        })\n                                                        :\n                                                        <Loading number={[0, 1, 2, 3, 4]} />\n                                                }\n                                            </List>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Fragment>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = {\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        minWidth: 120,\n        marginBottom: 8\n    },\n    title: {\n        fontSize: 14,\n    },\n    media: {\n        height: 360,\n    },\n    inline: {\n        display: 'inline',\n    },\n};\n\nexport default withStyles(styles)(Dashboard);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass helper extends Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        };\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('使用帮助')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.props.onChangeRefresh(false)\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <Paper className={classes.actionBar}>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"搜索…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            fullWidth\n                        />\n                    </div>\n                </Paper>\n                <div className={classes.root}>\n\n                    <div className={classes.container}>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography className={classes.heading}>什么是私有分享？</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    分享给系统内部成员，只有内部成员才可下载获取.\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel2a-content\"\n                                id=\"panel2a-header\"\n                            >\n                                <Typography className={classes.heading}>什么是公有分享？</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    分享给所有被分享者，通过发送URL地址获取并下载.\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nhelper.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flex: 1\n    },\n    container: {\n        margin: '20px 0',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n            cursor: 'pointer'\n        },\n        marginRight: theme.spacing(1),\n        marginLeft: 0,\n        padding: theme.spacing(1),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        position: 'absolute',\n        marginTop: 5,\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        marginLeft: theme.spacing(4),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    }\n})\n\nexport default withStyles(styles)(helper);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthService from '../common/authService'\n\nclass Download extends Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            sid: '',\n            fileId: '',\n            fileName: '',\n            expireTime: '',\n            fileSize: 0,\n            downloadCode: '',\n            loading: false,\n            message: '加载中...',\n        }\n    }\n\n    componentWillMount() {\n\n        const info = JSON.stringify({ id: this.props.location.pathname.split('/')[2] })\n\n        this.authService.postData('/download', info).then(res => {\n            if (res.result) {\n                this.setState({\n                    sid: res.message.sid,\n                    fileId: res.message.fileId,\n                    fileName: res.message.filename,\n                    expireTime: this.timestampToTime(res.message.expireTime),\n                    fileSize: res.message.size,\n                    message: ''\n                })\n            } else {\n                this.setState({\n                    fileName: res.message,\n                    message: ''\n                })\n            }\n        })\n\n\n    }\n\n    onClickDownloadFile = () => {\n\n        var info = JSON.stringify({\n            id: this.state.sid,\n            downloadCode: this.state.downloadCode\n        })\n\n        this.authService.downloadPublicFile('/download/file', info).then(res => res.blob().then(blob => {\n            if (res.headers.get('Content-Disposition').length > 0) {\n\n                this.setState({\n                    message: '正在下载中...请勿关闭页面!'\n                })\n\n                var a = document.createElement('a');\n                var url = window.URL.createObjectURL(blob);\n                var filename = res.headers.get('Content-Disposition');\n                a.href = url;\n                a.download = decodeURI(filename);\n                a.click();\n                window.URL.revokeObjectURL(url);\n            }\n            else {\n                this.setState({\n                    message: '下载码不正确或已过期!'\n                })\n            }\n        }))\n\n    }\n\n    onChangeDownloadCode = (e) => {\n        this.setState({ downloadCode: e.target.value })\n    }\n\n    timestampToTime(timestamp) {\n\n        var date = new Date(timestamp);\n\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n\n        return Y + M + D;\n\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <div className={classes.container}>\n                <Card className={classes.card}>\n                    <div className={classes.details}>\n                        <CardContent className={classes.content}>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {this.state.fileName}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                {`文件大小:${this.state.fileSize}MB`}\n                            </Typography>\n                            {\n                                this.state.message !== '' ?\n                                    <Typography variant=\"subtitle2\" style={{ color: 'red' }}>\n                                        {`提示:${this.state.message}`}\n                                    </Typography> : null\n                            }\n                        </CardContent>\n                        <div className={classes.controls}>\n                            <TextField\n                                id=\"standard-full-width\"\n                                label=\"下载码\"\n                                style={{ margin: 8 }}\n                                value={this.state.downloadCode}\n                                onChange={(e) => this.onChangeDownloadCode(e)}\n                                placeholder=\"四位数字或没有\"\n                                helperText={`过期时间:${this.state.expireTime}`}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.cover} onClick={this.onClickDownloadFile}>\n                        {'下载'}\n                    </Button>\n                </Card>\n            </div>\n        )\n    }\n}\n\nDownload.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    card: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 320\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 64,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    }\n})\n\nexport default withStyles(styles)(Download);","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport GroupAdd from '@material-ui/icons/GroupAdd';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport Chip from '@material-ui/core/Chip';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Popover from '@material-ui/core/Popover';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthService from '../common/authService'\nimport Loading from '../common/loading'\n\nclass role extends Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            open: false,\n            anchorEl: null,\n            rightDrawer: false,\n            noticeMessage: null,\n            datas: [],\n            usersList: [],\n            roleId: '',\n            searchTextField: '',\n            searchUsersList: [],\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('人员角色')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        this.authService.postData('/role/home', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n                else {\n                    this.setState({ open: !this.state.open, noticeMessage: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    onClickNavigationAdd = () => {\n        this.props.history.push(`/roleadd`)\n    }\n\n    onClickRemoveUser = (roleId, userId) => {\n        const data = JSON.stringify({\n            userId: userId,\n            roleId: roleId\n        })\n\n        this.authService.postData('/role/removeuser', data).then((res) => {\n            if (res.result) {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n                this.RefreshInfo()\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickOpenUserList = (e) => {\n        this.props.onChangeRefresh(true)\n\n        this.setState({ roleId: e, rightDrawer: !this.state.rightDrawer })\n        this.authService.postData('/role/rolegetlist', null).then((res) => {\n            if (res.result) {\n                this.setState({ usersList: res.message, searchUsersList: res.message })\n            }\n            else {\n            }\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    onClickListItemSelectUser = (e) => {\n        const data = JSON.stringify({\n            userId: e,\n            roleId: this.state.roleId\n        })\n\n        this.authService.postData('/role/adduser', data).then((res) => {\n            if (res.result) {\n                this.setState({ rightDrawer: !this.state.rightDrawer })\n                this.RefreshInfo()\n            }\n        })\n    }\n\n    onClickOpenMenu = event => {\n        this.setState({\n            anchorEl: event.currentTarget,\n            roleId: event.currentTarget.getAttribute(\"data-id\")\n        });\n    };\n\n    onClickCloseMenu = () => {\n        this.setState({ anchorEl: null })\n    }\n\n    onClickCloseRightDrawer = () => {\n        this.setState({ rightDrawer: !this.state.rightDrawer })\n    }\n\n    onClickDeleteRole = () => {\n        const data = JSON.stringify({\n            _id: this.state.roleId\n        })\n\n        this.authService.postData('/role/del', data).then((res) => {\n            if (res.result) {\n                this.setState({ anchorEl: null, open: !this.state.open, noticeMessage: res.message })\n                this.RefreshInfo()\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onChangeSearchUsersList = (e) => {\n        this.setState({ searchTextField: e.target.value }, () => {\n            let newUserList = this.state.usersList.filter(x => {\n                return x.accountName.indexOf(this.state.searchTextField) !== -1 || x.displayName.indexOf(this.state.searchTextField) !== -1\n            })\n            this.setState({ searchUsersList: newUserList })\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { datas, searchUsersList, searchTextField, anchorEl, rightDrawer } = this.state\n        const MenuOpen = Boolean(anchorEl);\n\n        return (\n            <Fragment>\n                {\n                    <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.onClickNavigationAdd}><GroupAdd /></Button>\n                    </div>\n                }\n\n                <div style={{ margin: 15 }} />\n\n                {\n                    datas.length > 0 ?\n                        datas.map((v, i) => {\n                            return <Paper key={i}>\n                                <Paper className={classes.bar}>\n                                    <b>{v.displayName}</b>\n                                    <div style={{ display: 'flex', height: 48, marginRight: -12, marginTop: -12 }}>\n                                        <IconButton\n                                            onClick={() => this.onClickOpenUserList(v._id)}\n                                            style={{ marginRight: -8 }}\n                                        >\n                                            <PersonAdd style={{ color: 'white' }} />\n                                        </IconButton>\n                                        <IconButton\n                                            data-id={v._id}\n                                            onClick={this.onClickOpenMenu}\n                                        >\n                                            <DeleteForeverIcon style={{ color: 'white' }} />\n                                        </IconButton>\n                                        <Popover\n                                            open={MenuOpen}\n                                            anchorEl={anchorEl}\n                                            onClose={this.onClickCloseMenu}\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'center',\n                                            }}\n                                            elevation={1}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'center',\n                                            }}\n                                        >\n                                            <Button onClick={this.onClickDeleteRole}>是</Button>\n                                            <Divider />\n                                            <Button onClick={this.onClickCloseMenu}>否</Button>\n                                        </Popover>\n                                    </div>\n                                </Paper>\n                                <Grid container style={{ marginBottom: 15, padding: 15 }}>\n                                    <Grid item xs={12}>\n                                        {\n                                            v.member.map((x, y) => {\n                                                return <Chip\n                                                    key={y}\n                                                    label={`${x.displayName === '' ? x.accountName : x.displayName}`}\n                                                    onClick={null}\n                                                    onDelete={() => this.onClickRemoveUser(v._id, x.id)}\n                                                    className={classes.chip}\n                                                    variant=\"outlined\"\n                                                />\n                                            })\n                                        }\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        })\n                        :\n                        <Paper style={{ padding: '10px 0' }}>\n                            <Loading number={[0, 1, 2, 3, 4]} />\n                        </Paper>\n                }\n\n                {\n                    <Drawer\n                        anchor=\"right\"\n                        variant=\"persistent\"\n                        open={rightDrawer}\n                        classes={{\n                            paperAnchorRight: classes.drawerPaper\n                        }}\n                    >\n                        <div className={classes.toolbar} />\n                        <div className={(ClassNames(classes.toolbar, classes.drawerToolBar))}>\n                            <IconButton onClick={this.onClickCloseRightDrawer}><ArrowForward style={{ color: 'white', fontSize: 28 }} /></IconButton>\n                            <div />\n                        </div>\n                        <TextField\n                            className={classes.searchTextField}\n                            label=\"搜索(用户名或姓名)\"\n                            value={searchTextField}\n                            onChange={this.onChangeSearchUsersList}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                        />\n                        <List className={classes.list} dense={true}>\n                            {\n                                searchUsersList.map((v, i) => {\n                                    return <ListItem\n                                        key={i}\n                                        button\n                                        onClick={() => this.onClickListItemSelectUser(v._id)}\n                                    >\n                                        <Avatar alt=\"\" src=\"/imgs/user/default.png\" />\n                                        <ListItemText primary={v.accountName} secondary={v.displayName} />\n                                    </ListItem>\n                                })\n                            }\n                        </List>\n                    </Drawer>\n                }\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nrole.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerToolBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        background: theme.palette.primary.main\n    },\n    bar: {\n        display: 'flex',\n        justifyContent:\n            'space-between',\n        height: 40,\n        backgroundColor: theme.palette.primary.main,\n        padding: '8px 20px 8px 20px',\n        color: 'white'\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        maxHeight: 400,\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    drawerPaper: {\n        width: 360,\n        boxShadow: '0px 4px 6px 0px rgba(0,0,0,0.2)',\n    },\n    searchTextField: {\n        margin: '10px 5px'\n    }\n});\n\nexport default withStyles(styles)(role);","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default class TableHeader extends React.Component {\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell style={{ width: '5%', padding: 10 }}></TableCell>\n                    <TableCell sortDirection={orderBy === 'filename' ? order : false} style={{ padding: '0px 10px 0px 0px' }}>\n                        <Tooltip\n                            title=\"文件名\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'filename'}\n                                direction={order}\n                                onClick={this.createSortHandler('filename')}\n                            >\n                                文件名\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '5%', padding: 10 }} align='right'>\n                        类型\n                    </TableCell>\n                    <TableCell sortDirection={orderBy === 'uploadDate' ? order : false} style={{ width: '12%', padding: '0px 10px 0px 0px' }} align='right'>\n                        <Tooltip\n                            title=\"时间\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'uploadDate'}\n                                direction={order}\n                                onClick={this.createSortHandler('uploadDate')}\n                            >\n                                时间\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '10%', padding: 10 }} align='center'>大小</TableCell>\n                </TableRow>\n            </TableHead>\n        );\n    }\n}","import React from 'react'\n\nconst loading = (\n    <svg style={{ padding: '10px 20px', width: '100%' }}>\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 1.0 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"20\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.8 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"40\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.6 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"60\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.4 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"0\" y=\"80\" width=\"200\" height=\"10\" style={{ fill: '#D6D6D6', fillOpacity: 0.2 }}>\n            <animate attributeType=\"XML\" attributeName=\"x\" from=\"-200\" to=\"400\" dur=\"2.5s\" repeatCount=\"indefinite\" />\n        </rect>\n    </svg>\n)\n\nexport { loading }","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Divider from '@material-ui/core/Divider';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport AuthService from '../../../common/authService'\n\nimport { loading } from '../../../common/component'\n\nclass selectUser extends React.Component {\n    constructor() {\n        super();\n        this.authService = new AuthService()\n        this.state = {\n            user: null,\n            role: null,\n            value: 0,\n            selected: [],\n            radioGroupValue: 'user',\n            selectUserOrRole: '',\n            selectRoleOrUser: '',\n            progress: false\n        }\n    }\n\n    componentDidMount() {\n        this.authService.postData('/file/selectusers', null).then((res) => {\n            if (res.result) {\n                this.setState({ user: res.message.user, role: res.message.role })\n            }\n        })\n    }\n\n    onChangeConfirm = () => {\n\n        let info = this.state.selected\n        this.props.onClickAddUsersToList(info, true)\n        this.setState({ selected: [] })\n\n    }\n\n    onClickCancel = () => {\n        this.setState({ selected: [] })\n        this.props.onClose();\n    };\n\n    onChangeSelected = (s, v, e, l) => {\n        let selected = this.state.selected\n        let elementHas = selected.find(v => {\n            return v.id === s\n        })\n        if (!elementHas) {\n            selected.push({ id: s, displayName: v, other: e, type: l })\n        }\n        this.setState({ selected })\n    }\n\n    onChangeRadioGroup = (e) => {\n        this.setState({ radioGroupValue: e.target.value })\n    }\n\n    onChangeSelectUserOrRole = (e) => {\n        this.setState({ selectUserOrRole: e.target.value })\n    }\n\n    onChangeSelectRoleOrUser = (e) => {\n        this.setState({ selectRoleOrUser: e.target.value })\n    }\n\n    onClickSearchUserOrRole = (e) => {\n        this.setState({ progress: true })\n        if (e) {\n            const info = JSON.stringify({\n                value: this.state.selectUserOrRole\n            })\n            this.authService.postData('/file/selectuserslist', info).then((res) => {\n                if (res.result) {\n                    this.setState({ user: res.message, progress: false })\n                }\n            })\n        }\n        else {\n            const info = JSON.stringify({\n                value: this.state.selectRoleOrUser\n            })\n            this.authService.postData('/file/selectroleslist', info).then((res) => {\n                if (res.result) {\n                    this.setState({ role: res.message, progress: false })\n                }\n            })\n        }\n    }\n\n    onClickDelSelected = (e) => {\n        let selected = this.state.selected.filter(v => v.id !== e);\n        this.setState({ selected })\n    }\n\n    render() {\n        const { user, role, radioGroupValue, selectUserOrRole, selectRoleOrUser, progress, selected } = this.state\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                aria-labelledby=\"confirmation-dialog-title\"\n                open={this.props.open}\n            >\n                <DialogTitle style={{ padding: '24px 24px 0px 24px' }}>\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={radioGroupValue} onChange={this.onChangeRadioGroup} row>\n                        <FormControlLabel\n                            value={'user'}\n                            control={<Radio color=\"primary\" />}\n                            label=\"用户\"\n                        />\n                        <FormControlLabel\n                            value={'role'}\n                            control={<Radio color=\"primary\" />}\n                            label=\"角色\"\n                        />\n                    </RadioGroup>\n                </DialogTitle>\n\n                {/* <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={this.onChangeTabs}\n                    >\n                        <Tab label=\"用户\" />\n                        <Tab label=\"角色\" />\n                    </Tabs> \n\n                    {\n                        value === 1 ?\n                            <Fragment>\n                                <DialogContent style={{ padding: '10px 30px' }}>\n                                    <RadioGroup\n                                        onChange={this.onChangeSelectRoles}\n                                    >\n                                        {\n                                            this.props.values.roles ? this.props.values.roles.map((v, i) => (\n                                                <FormControlLabel\n                                                    value={v._id}\n                                                    key={i}\n                                                    control={<Radio />}\n                                                    label={v.displayName}\n                                                />\n                                            ))\n                                                :\n                                                null\n                                        }\n                                    </RadioGroup>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={() => this.onChangeConfirm(false)} color=\"primary\">确定</Button>\n                                    <Button onClick={this.onClickCancel} color=\"primary\">取消</Button>\n                                </DialogActions>\n                            </Fragment>\n                            :\n                            value === 0 ?\n                                <Fragment>\n                                    <DialogContent style={{ padding: 0 }}>\n                                        <List>\n                                            {\n                                                this.props.values.users ? this.props.values.users.map(value => (\n                                                    <ListItem key={value._id} style={{ padding: '10px 30px' }}>\n                                                        <ListItemText\n                                                            primary={`${value.accountName}`}\n                                                            secondary={\n                                                                <React.Fragment>\n                                                                    <Typography component=\"span\" style={{ color: 'grey' }}>\n                                                                        {value.displayName}\n                                                                    </Typography>\n                                                                </React.Fragment>\n                                                            }\n                                                        />\n                                                        <ListItemSecondaryAction>\n                                                            <Checkbox\n                                                                onChange={this.onChangeSelectUsers(value._id, value.accountName, value.displayName)}\n                                                                checked={\n                                                                    users.length > 0 ?\n                                                                        users.find(x => {\n                                                                            return x.accountName === value.accountName\n                                                                        }) !== undefined ? true : false\n                                                                        :\n                                                                        false\n                                                                }\n                                                            />\n                                                        </ListItemSecondaryAction>\n                                                    </ListItem>\n                                                ))\n                                                    : loading\n\n                                            }\n                                        </List>\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={() => this.onChangeConfirm(true)} color=\"primary\">确定</Button>\n                                        <Button onClick={this.onClickCancel} color=\"primary\">取消</Button>\n                                    </DialogActions>\n                                </Fragment>\n                                :\n                                null\n                    }\n                */}\n\n                <DialogContent className={classes.root}>\n\n                    {\n                        radioGroupValue === 'user' ?\n                            <TextField\n                                label=\"搜索用户...\"\n                                fullWidth\n                                value={selectUserOrRole}\n                                margin=\"normal\"\n                                style={{ marginBottom: 16 }}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                helperText=\"输入姓名或者账户名\"\n                                onChange={this.onChangeSelectUserOrRole}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <Tooltip title=\"搜索\">\n                                                <IconButton\n                                                    style={{ marginTop: -16 }}\n                                                    onClick={() => this.onClickSearchUserOrRole(true)}\n                                                >\n                                                    {<SearchIcon />}\n                                                </IconButton>\n                                            </Tooltip>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            /> :\n                            <TextField\n                                label=\"搜索角色...\"\n                                fullWidth\n                                value={selectRoleOrUser}\n                                margin=\"normal\"\n                                style={{ marginBottom: 16 }}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                helperText=\"输入名称\"\n                                onChange={this.onChangeSelectRoleOrUser}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <Tooltip title=\"搜索\">\n                                                <IconButton\n                                                    style={{ marginTop: -16 }}\n                                                    onClick={() => this.onClickSearchUserOrRole(false)}\n                                                >\n                                                    {<SearchIcon />}\n                                                </IconButton>\n                                            </Tooltip>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                    }\n\n                    {\n                        progress && <LinearProgress style={{ marginBottom: 8 }} />\n                    }\n\n                    {\n                        radioGroupValue === 'user' && user ? user.map(value => (\n                            <Chip\n                                key={value._id}\n                                variant=\"outlined\"\n                                icon={<FaceIcon />}\n                                onClick={() => this.onChangeSelected(value._id, value.displayName, value.accountName, true)}\n                                className={classes.chip}\n                                label={`${value.displayName}(${value.accountName.split('@')[0]})`}\n                            />\n                        ))\n                            : radioGroupValue === 'role' && role ? role.map(value => (\n                                <Chip\n                                    key={value._id}\n                                    variant=\"outlined\"\n                                    icon={<SupervisedUserCircleIcon />}\n                                    onClick={() => this.onChangeSelected(value._id, value.displayName, value.description, false)}\n                                    className={classes.chip}\n                                    label={`${value.displayName}`}\n                                />\n                            ))\n                                : loading\n                    }\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    {\n                        selected.length > 0 && selected.map(value => {\n                            return value.type ? <Chip\n                                key={value.id}\n                                icon={<FaceIcon />}\n                                // onClick={() => this.onChangeSelected(value._id, value.displayName, value.accountName)}\n                                className={classes.chip}\n                                label={`${value.displayName}`}\n                                color=\"secondary\"\n                                onDelete={() => this.onClickDelSelected(value.id)}\n                            /> : <Chip\n                                    key={value.id}\n                                    icon={<SupervisedUserCircleIcon />}\n                                    // onClick={() => this.onChangeSelected(value._id, value.displayName, value.accountName)}\n                                    className={classes.chip}\n                                    label={`${value.displayName}`}\n                                    color=\"secondary\"\n                                    onDelete={() => this.onClickDelSelected(value.id)}\n                                />\n                        })\n                    }\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={this.onChangeConfirm} color=\"primary\">确定</Button>\n                    <Button onClick={this.onClickCancel} color=\"primary\" autoFocus>取消</Button>\n                </DialogActions>\n\n            </Dialog>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flex: 1\n    },\n    chip: {\n        margin: theme.spacing(0.5)\n    },\n    divider: {\n        margin: '15px 0'\n    }\n});\n\nexport default withStyles(styles)(selectUser);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst actionsStyles = theme => ({\n    root: {\n        flexShrink: 0,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing(2.5)\n    },\n});\n\nclass TablePaginationActions extends React.Component {\n    handleFirstPageButtonClick = event => {\n        this.props.onChangePage(event, 0);\n    };\n\n    handleBackButtonClick = event => {\n        this.props.onChangePage(event, this.props.page - 1);\n    };\n\n    handleNextButtonClick = event => {\n        this.props.onChangePage(event, this.props.page + 1);\n    };\n\n    handleLastPageButtonClick = event => {\n        this.props.onChangePage(\n            event,\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n        );\n    };\n\n    render() {\n        const { classes, count, page, rowsPerPage, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <IconButton\n                    onClick={this.handleFirstPageButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"First Page\"\n                >\n                    {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleBackButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"Previous Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleNextButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Next Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleLastPageButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Last Page\"\n                >\n                    {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nTablePaginationActions.propTypes = {\n    classes: PropTypes.object.isRequired,\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n    TablePaginationActions,\n);\n\nexport default TablePaginationActionsWrapped","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport AuthService from '../../../common/authService'\n\nclass moveToFolder extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            filePath: '',\n            values: null,\n            checked: null\n        }\n    }\n\n    componentDidMount() {\n        this.authService.postData('/file/tofolder', null).then((res) => {\n            if (res.result) {\n                this.setState({ values: res.message })\n            }\n        })\n    }\n\n    onClickSelectFolder = v => () => {\n        this.setState({ checked: v })\n    };\n\n    render() {\n        const { values, checked } = this.state\n        const { classes } = this.props\n\n        return (\n            <Dialog\n                aria-labelledby=\"customized-dialog-title\"\n                open={this.props.open}\n            >\n                <div className={classes.top}>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        {'文档移至'}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {'文件夹'}\n                    </Typography>\n                </div>\n                <Divider />\n                <List className={classes.list}>\n                    {\n                        values !== null && values.map((v, i) => (\n                            <ListItem key={i} component=\"div\" role={undefined} dense button onClick={this.onClickSelectFolder(v)}>\n                                <Checkbox\n                                    checked={v === checked}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                                <ListItemText primary={v.metadata.location} />\n                            </ListItem>\n                        ))\n                    }\n                </List>\n                <Divider />\n                <div className={classes.bottom}>\n                    <Button color=\"primary\" onClick={this.props.onClickConfirmMoveFile(this.state.checked)}>确定</Button>\n                    <Button onClick={this.props.onClickCloseMoveFile}>取消</Button>\n                </div>\n            </Dialog>\n        );\n    }\n}\n\nmoveToFolder.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = () => ({\n    top: {\n        padding: 20,\n        width: 540\n    },\n    bottom: {\n        display: 'flex',\n        padding: 15\n    },\n    title: {\n        fontSize: 14,\n    },\n    button: {\n        margin: 10\n    },\n    list: {\n        width: '100%',\n        padding: 0,\n        maxHeight: 300\n    },\n    listItem: {\n        padding: 0\n    }\n})\n\n\nexport default withStyles(styles)(moveToFolder)\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport UUID from 'uuid';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Attachment from '@material-ui/icons/Attachment';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DoneIcon from '@material-ui/icons/Done';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport CloudUploadIcon from '@material-ui/icons/CloudUploadOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteSweep';\nimport AddCircleOutline from '@material-ui/icons/YoutubeSearchedFor';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Avatar from '@material-ui/core/Avatar';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Popper from '@material-ui/core/Popper';\nimport Fade from '@material-ui/core/Fade';\n\nimport Loading from '../../common/loading'\nimport TableHeader from './components/TableHeader'\nimport AuthService from '../../common/authService'\nimport { LocalStorageKey } from '../../common/config'\nimport SelectUser from './components/selectUser'\nimport TablePaginationActionsWrapped from './components/TablePagination'\nimport MoveToFolder from './components/moveToFolder'\n\nclass Documents extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            order: 'asc',\n            orderBy: 'calories',\n            selected: [],\n            data: [],\n            searchData: [],\n            page: 0,\n            rowsPerPage: 10,\n            uploadloading: false,\n            noticeOpen: false,\n\n            selectUser: false,\n            selectWindowsUser: false,\n\n            noticeMessage: null,\n            viewdetail: false,\n            toolBar: false,\n            tabValue: 0,\n            rightDrawer: false,\n            subBar: false,\n\n            tabIndex: 0,\n            tabBarButtonArea: true,\n\n            stepOneValue: ' ',\n            stepOneError: false,\n            deleteloading: false,\n            openMoveFile: false,\n\n            anchorEl: null,\n\n            AwaySearch: true,\n            AwaySearchInput: false,\n\n            searchSelectFileName: '',\n            searchSelectType: '',\n            searchSelectOneFileType: true,\n            searchStyle: false,\n            searchSelectFileSize: '',\n            searchPublicShareExpireTime: '',\n\n            folderName: '',\n            newFileName: '',\n\n            fileType: '',\n            filePath: '/',\n            fileSize: '',\n            fileCreateTime: '',\n            fileOwner: '',\n            fileStatus: null,\n            filepublicShareId: '',\n\n            shareUserTextField: '',\n            shareUsersList: [],\n\n            publicShareId: '',\n            publicShareUrl: '',\n            publicShareExpireTime: '',\n            publicShareDownloadCode: '',\n\n            showRename: [],\n\n            listenerDateFormatInput: false,\n            listenerSelectUser: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('我的文档')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo(props) {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            userId: this.getToken().u.i,\n            path: this.state.filePath\n        })\n\n        this.authService.postData('/file/lists', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n\n                    let value = {\n                        data: res.message,\n                        searchData: res.message,\n                        rightDrawer: false\n                    }\n\n                    let objects = Object.assign(value, props);\n\n                    this.setState(objects)\n                } else {\n                    this.setState({\n                        data: [],\n                        searchData: [],\n                        selected: [],\n                        rightDrawer: false,\n                        noticeOpen: true,\n                        noticeMessage: res.message\n                    })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    desc(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    stableSort(array, cmp) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = cmp(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map(el => el[0]);\n    }\n\n    getSorting(order, orderBy) {\n        return order === 'desc' ? (a, b) => this.desc(a, b, orderBy) : (a, b) => -this.desc(a, b, orderBy);\n    }\n\n    handleRequestSort = (_, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    }\n\n    onClickCreateFolder = () => {\n        if (this.state.folderName !== '') {\n            const info = JSON.stringify({\n                folderName: this.state.folderName,\n                path: this.state.filePath\n            })\n\n            this.authService.postData('/file/createfolder', info).then((res) => {\n                if (res.result) {\n                    this.RefreshInfo({ folderName: '', tabIndex: 0 })\n                } else {\n                    this.setState({ noticeOpen: true, noticeMessage: res.message })\n                }\n            })\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '文件夹名称不能为空.' })\n        }\n    }\n\n    onChangeCreatefolder = (e) => {\n        this.setState({ folderName: e.target.value })\n    }\n\n    onClickSelectOne = (id, type, filename, typename, size, path, uploadDate) => {\n        let newSelected = []\n\n        if (this.state.selected.length > 0 && this.state.selected[0]._id === id) {\n            newSelected = this.state.selected.filter(x => { return x._id !== id })\n        } else {\n            newSelected.push({\n                _id: id,\n                filename: filename,\n                typename: typename,\n                size: size,\n                path: path,\n                uploadDate: uploadDate\n            })\n        }\n\n        this.setState({\n            selected: newSelected,\n            rightDrawer: false,\n            searchSelectOneFileType: type === 1 ? true : false\n        })\n\n    }\n\n    handleChangePage = (_, page) => {\n        this.setState({ page });\n    }\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ page: 0, rowsPerPage: event.target.value });\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ noticeOpen: false });\n    }\n\n    isSelected = (id) => {\n        let selected = this.state.selected\n        return (selected.length > 0 && selected[0]._id === id) ? true : false\n    }\n\n    onChangeSearchSelectFileName = (e) => {\n        this.setState({ searchSelectFileName: e.target.value }, () => {\n            if (this.state.searchSelectFileName === '') {\n                this.setState({ searchData: this.state.data })\n            } else {\n                this.setState({ searchData: this.state.data.filter(x => x.metadata.filename.indexOf(this.state.searchSelectFileName) !== -1) })\n            }\n        })\n    }\n\n    onChangeSearchSelectType = (e) => {\n        this.setState({ searchSelectType: e.target.value }, () => {\n            if (this.state.searchSelectType === '') {\n                this.setState({ searchData: this.state.data })\n            } else {\n                this.setState({ searchData: this.state.data.filter(x => x.metadata.typename === this.state.searchSelectType) })\n            }\n        })\n    }\n\n    onChangeSearchSelectFileSize = e => {\n        this.setState({ searchSelectFileSize: e.target.value }, () => {\n            if (this.state.searchSelectFileSize === '') {\n                this.setState({ searchData: this.state.data })\n            } else {\n                this.setState({ searchData: this.state.data.filter(x => x.metadata.size >= this.state.searchSelectFileSize) })\n            }\n        })\n    }\n\n    onChangeSearchPublicShareExpireTime = e => {\n        this.setState({\n            searchPublicShareExpireTime: e.target.value,\n            searchData: this.state.data.filter(x => {\n                return x.uploadDate.split('T')[0] === e.target.value\n            })\n        })\n    }\n\n    onClickTabIndex = (e) => {\n        if (this.state.tabIndex === e) {\n            this.setState({ tabIndex: 0, tabBarButtonArea: false });\n        }\n        else {\n            this.setState({ tabIndex: e, tabBarButtonArea: false });\n        }\n    }\n\n    onChangeSearch = (e) => {\n        this.setState({ search: e.target.value })\n    }\n\n    onChangeFileInput = () => {\n        if (this.InputFile.value) {\n            this.setState({ stepOneValue: this.InputFile.files[0].name, filename: this.InputFile.files[0].name })\n        }\n    }\n\n    onMouseOverSearch = () => {\n        this.setState((state) => ({ searchStyle: !state.searchStyle }))\n    }\n\n    onClickSelectUsersOpenDialog = () => {\n        this.setState((state) => ({ selectUser: !state.selectUser }))\n    }\n\n    onClickViewDetail = () => {\n        this.setState((state) => ({ viewdetail: !state.viewdetail }))\n    }\n\n    onClickUploadFile = () => {\n\n        if (this.InputFile.files.length > 0) {\n            this.setState({ uploadloading: true })\n\n            const info = JSON.stringify({\n                filename: this.InputFile.files[0].name,\n                typename: '',\n                fileSize: (this.InputFile.files[0].size / 1000 / 1000).toFixed(3),\n                version: 1.0,\n                status: 0,\n                path: this.state.filePath,\n                userId: this.getToken().u.i,\n                userDisplayName: this.getToken().u.d,\n                shareId: '',\n                publicShareId: '',\n                publicShareExpireTime: '',\n                publicShareUrl: ''\n            })\n\n            const data = new FormData();\n            data.append(\"file\", this.InputFile.files[0]);\n            data.append(\"other\", info)\n            if (data !== []) {\n                this.authService.uploadFile('/file/upload', data).then((res) => {\n                    if (res.result) {\n                        this.InputFile.value = null\n                        this.RefreshInfo({ noticeOpen: true, noticeMessage: res.message, uploadloading: false, stepOneValue: ' ' })\n                    } else {\n                        this.setState({ noticeOpen: true, noticeMessage: res.message, uploadloading: false, stepOneValue: ' ' })\n                    }\n                })\n            }\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '请选择需要上传的文档' })\n        }\n    }\n\n    onClickDownloadFile = () => {\n        const a = document.createElement('a')\n        a.setAttribute('href', this.authService.downloadFile('/file/down', this.state.selected[0]._id))\n        a.click()\n    }\n\n    onClickDeleteFile = () => {\n        this.setState({ deleteloading: true })\n        const datas = JSON.stringify({\n            _id: this.state.selected[0]._id,\n            filename: this.state.selected[0].filename,\n            path: this.state.filePath\n        })\n\n        this.authService.postData('/file/deletes', datas).then((res) => {\n            if (res.result) {\n                this.RefreshInfo({ deleteloading: false, selected: [] })\n            } else {\n                this.setState({ noticeOpen: true, noticeMessage: res.message, deleteloading: false })\n            }\n        })\n    }\n\n    onClickCloseRightDrawer = () => {\n        this.setState({ rightDrawer: false, shareUsersList: [], selectWindowsUser: false })\n    }\n\n    onChangeTabsValue = (_, value) => {\n        this.setState({ tabValue: value })\n    }\n\n    onChangeShareUserTextField = e => {\n        this.setState({ shareUserTextField: e.target.value })\n    }\n\n    onClickShareAddUserToList = () => {\n        if (this.state.shareUserTextField === '') {\n            return false\n        }\n\n        const info = JSON.stringify({\n            accountName: this.state.shareUserTextField\n        })\n        this.authService.postData('/file/shareadduser', info).then(res => {\n            if (res.result) {\n                let v = this.state.shareUsersList\n                v.push({\n                    _id: res.message._id,\n                    accountName: res.message.accountName,\n                    displayName: res.message.displayName\n                })\n                this.setState({ shareUsersList: v, shareUserTextField: '' })\n            } else {\n                this.setState({ noticeOpen: true, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickBreadcrumb = (e) => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            userId: this.getToken().u.i,\n            path: e\n        })\n\n        this.authService.postData('/file/lists', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    let value = {\n                        data: res.message,\n                        searchData: res.message,\n                        filePath: e\n                    }\n                    this.setState(value)\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onCloseSelectUsersDialog = () => {\n        this.setState((state) => ({\n            selectUser: !state.selectUser\n        }))\n    }\n\n    onClickAddUsersToList = (e, c) => {\n        let list = this.state.shareUsersList\n\n        e.map((s) => {\n            return list.push({\n                _id: s.id,\n                accountName: s.other,\n                displayName: s.displayName,\n                type: s.type\n            })\n        })\n\n        this.setState((state) => ({ list, selectUser: !state.selectUser, selectWindowsUser: c }))\n    }\n\n    onClickSubmitShare = () => {\n        this.props.onChangeRefresh(true)\n        if (this.state.shareUsersList.length > 0) {\n            let info = JSON.stringify({\n                _id: this.state.selected[0]._id,\n                shareUsersList: this.state.shareUsersList\n            })\n            this.authService.postData('/file/share', info).then((res) => {\n                this.RefreshInfo({ noticeOpen: true, noticeMessage: res.message, selected: [] })\n            })\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '未找到分享名单列表' })\n        }\n    }\n\n    onClickCloseShare = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            _id: this.state.selected[0]._id,\n        })\n        this.authService.postData('/file/unshare', info).then((_) => {\n            this.RefreshInfo()\n        })\n    }\n\n    onClickMoveUserList = (i) => {\n        let v = this.state.shareUsersList\n        v = v.filter(x => {\n            return x._id !== i\n        })\n        this.setState({ shareUsersList: v })\n    }\n\n    onClickCreatePublicShare = (e) => {\n        let codeLength = this.state.publicShareDownloadCode.toString().length\n        if (codeLength === 6 || codeLength === 0) {\n            if (this.state.publicShareExpireTime !== '') {\n                if (e) {\n                    this.setState({ publicShareUrl: window.location.host + '/download/' + UUID.v4() })\n                } else {\n                    const info = JSON.stringify({\n                        fileId: this.state.selected[0]._id,\n                        url: this.state.publicShareUrl,\n                        expireTime: this.state.publicShareExpireTime,\n                        downloadCode: this.state.publicShareDownloadCode\n                    })\n\n                    this.authService.postData('/file/sharepublic', info).then((res) => {\n                        if (res.result) {\n                            this.RefreshInfo({ publicShareExpireTime: '', publicShareUrl: '' })\n                        } else {\n                            this.setState({ noticeOpen: true, noticeMessage: res.message })\n                        }\n                    })\n                }\n            } else {\n                this.setState({ noticeOpen: true, noticeMessage: '未设置过期时间' })\n            }\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '设置下载码有误!' })\n        }\n\n    }\n\n    onClickClosePublicShare = () => {\n        this.props.onChangeRefresh(true)\n        const info = JSON.stringify({\n            fileId: this.state.selected[0]._id,\n            url: this.state.publicShareUrl\n        })\n        this.authService.postData('/file/shareclosepublic', info).then((_) => {\n            this.RefreshInfo({ publicShareExpireTime: '', publicShareUrl: '', selected: [] })\n        })\n    }\n\n    onClickConfirmMoveFile = value => () => {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            fileId: this.state.selected[0]._id,\n            location: value.metadata.location\n        })\n\n        this.authService.postData('/file/movetofolder', info).then((_) => {\n            this.RefreshInfo({ openMoveFile: false, selected: [] })\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onClickOpenMoveFile = () => {\n        this.setState((state) => ({ openMoveFile: true }))\n    }\n\n    onClickCloseMoveFile = () => {\n        this.setState((state) => ({ openMoveFile: false, selected: [] }))\n    }\n\n    onChangeDateChange = e => {\n        this.setState({ publicShareExpireTime: e.target.value });\n    }\n\n    onClickClickAway = () => {\n        if (this.state.AwaySearch) {\n            this.setState({ tabIndex: 0 });\n        }\n    }\n\n    onClickRename = event => {\n        this.setState({ anchorEl: this.state.anchorEl === null ? event.currentTarget : null })\n    }\n\n    onClickCancelBtnRename = () => {\n        this.setState({ anchorEl: null })\n    }\n\n    onClickConfirmBtnRename = () => {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            fileId: this.state.selected[0]._id,\n            fileName: this.state.newFileName\n        })\n\n        this.authService.postData('/file/rename', info).then(res => {\n            if (res.result) {\n                this.RefreshInfo({ anchorEl: null, newFileName: '' })\n            }\n            else {\n                this.setState({ noticeOpen: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeRename = (e) => {\n        this.setState({ newFileName: e.target.value })\n    }\n\n    onClickShareFileButton = () => {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            _id: this.state.selected[0]._id\n        })\n\n        this.authService.postData('/file/shareinfo', info).then((res) => {\n            this.props.onChangeRefresh(false)\n            if (res.result) {\n                this.setState((state) => ({\n                    shareUsersList: res.message.file.metadata.shareId,\n                    publicShareId: res.message.file.metadata.publicShareId,\n                    publicShareUrl: res.message.file.metadata.publicShareUrl,\n                    publicShareExpireTime: res.message.file.metadata.publicShareExpireTime !== '' ? res.message.file.metadata.publicShareExpireTime : this.state.publicShareExpireTime,\n                    publicShareDownloadCode: res.message.downloadCode !== undefined ? res.message.downloadCode : '',\n                    rightDrawer: !state.rightDrawer\n                }))\n            }\n            else {\n                this.setState((state) => ({ rightDrawer: !state.rightDrawer }))\n            }\n        })\n    }\n\n    onClickTabBottonBack = () => {\n        this.setState((state) => ({ tabBarButtonArea: !state.tabBarButtonArea, tabIndex: 0 }))\n    }\n\n    onClickCellFileName = (e) => {\n\n        this.props.onChangeRefresh(true)\n\n        const currentpath = this.state.filePath.length === 1 ? this.state.filePath + e : this.state.filePath + '/' + e\n\n        let info = JSON.stringify({\n            userId: this.getToken().u.i,\n            path: currentpath\n        })\n\n        this.authService.postData('/file/intofolder', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({\n                        data: res.message,\n                        searchData: res.message,\n                        filePath: currentpath\n                    })\n                } else {\n                    this.setState({\n                        data: [],\n                        searchData: [],\n                        filePath: currentpath,\n                        noticeOpen: true,\n                        noticeMessage: res.message\n                    })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangePublicShareDownloadCode = (e) => {\n        this.setState({ publicShareDownloadCode: e.target.value })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {\n            searchData,\n            selectUser, selectWindowsUser,\n            order, orderBy, selected, rowsPerPage, page, noticeOpen, noticeMessage, deleteloading, uploadloading,\n            rightDrawer, tabValue,\n            searchSelectOneFileType, searchSelectFileName, searchSelectType, searchSelectFileSize, searchPublicShareExpireTime,\n            folderName,\n            filePath,\n            shareUserTextField, shareUsersList,\n            publicShareId, publicShareUrl, publicShareDownloadCode,\n            newFileName,\n            tabBarButtonArea,\n            publicShareExpireTime,\n            tabIndex\n        } = this.state;\n\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, searchData.length - page * rowsPerPage);\n\n        const openRename = Boolean(this.state.anchorEl);\n\n        return (\n            <Fragment>\n\n                <Paper className={classes.actionBar}>\n                    <Collapse in={!(selected.length > 0)}>\n                        <input\n                            accept=\"text/plain;image/*\"\n                            style={{ display: 'none' }}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            onChange={this.onChangeFileInput}\n                            ref={ele => { this.InputFile = ele }}\n                        />\n                        <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', padding: '4px 16px' }}>\n                            {\n                                tabIndex === 1 ?\n                                    <div className={classes.upload}>\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button component=\"span\" color=\"primary\">\n                                                <Attachment style={{ marginRight: 4 }} /><span style={{ width: 60 }}>点击选择</span>\n                                            </Button>\n                                        </label>\n                                        <TextField\n                                            id=\"filled-read-only-upload-input\"\n                                            label=\"被选择的文件\"\n                                            style={{ marginLeft: 6, marginTop: 4, marginRight: 6 }}\n                                            value={this.state.stepOneValue}\n                                            margin=\"normal\"\n                                            error={this.state.stepOneError}\n                                            fullWidth\n                                            InputProps={{\n                                                disabled: true,\n                                            }}\n                                        />\n                                        <div className={classes.wrapper}>\n                                            <Button\n                                                color=\"primary\"\n                                                disabled={uploadloading}\n                                                onClick={this.onClickUploadFile}\n                                            >上传</Button>\n                                            {uploadloading && <LinearProgress />}\n                                        </div>\n                                    </div>\n                                    : tabIndex === 2 ?\n                                        <div className={classes.upload}>\n                                            <Button\n                                                disabled\n                                                aria-haspopup=\"true\"\n                                                onClick={this.onClickOpenTagsMenu}\n                                            >\n                                                名称\n                                                </Button>\n                                            <TextField\n                                                label=\"\"\n                                                style={{ marginLeft: 6, marginTop: 4, marginRight: 6 }}\n                                                margin=\"normal\"\n                                                fullWidth\n                                                value={folderName}\n                                                onChange={(e) => this.onChangeCreatefolder(e)}\n                                            />\n                                            <div className={classes.wrapper}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    onClick={this.onClickCreateFolder}\n                                                >\n                                                    {'创建'}\n                                                </Button>\n                                            </div>\n                                        </div>\n                                        : tabIndex === 3 ?\n                                            <div style={{ display: 'flex' }}>\n                                                <TextField label=\"名称\" className={classes.searchLabel} value={searchSelectFileName} onChange={this.onChangeSearchSelectFileName}\n                                                    InputProps={{\n                                                        startAdornment: (<div />),\n                                                        placeholder: '模糊查询'\n                                                    }}\n                                                />\n                                                <TextField label=\"类型\" className={classes.searchLabel} value={searchSelectType} onChange={this.onChangeSearchSelectType}\n                                                    InputProps={{\n                                                        startAdornment: (<div />),\n                                                        placeholder: '扩展名'\n                                                    }}\n                                                />\n                                                <TextField label=\"大小\" className={classes.searchLabel} value={searchSelectFileSize} onChange={this.onChangeSearchSelectFileSize}\n                                                    InputProps={{\n                                                        startAdornment: (<div />),\n                                                        placeholder: '文件大于MB'\n                                                    }}\n                                                />\n\n                                                <form noValidate>\n                                                    <TextField\n                                                        id=\"date\"\n                                                        label=\"上传时间\"\n                                                        type=\"date\"\n                                                        onChange={this.onChangeSearchPublicShareExpireTime}\n                                                        value={searchPublicShareExpireTime}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                        }}\n                                                    />\n                                                </form>\n\n                                            </div>\n                                            :\n                                            <div className={classes.LabelTitle} >\n                                                <b style={{ marginRight: 15 }}>文档库</b>\n                                                [<span className={classes.breadcrumb} style={{ marginLeft: 6 }} onClick={() => this.onClickBreadcrumb('/')}>/</span>\n                                                {\n                                                    filePath.split('/').map((v, i) => {\n                                                        return (v.length > 0 ? <span key={i} className={classes.breadcrumb} onClick={() => this.onClickBreadcrumb(`/${v}`)}>{v}</span> : null)\n                                                    })\n                                                }]\n                                                </div>\n                            }\n\n                            {\n                                tabBarButtonArea ?\n                                    <div style={{ display: 'flex' }}>\n                                        <Tooltip title=\"上传\">\n                                            <IconButton style={{ color: '#FF8A65' }} onClick={() => this.onClickTabIndex(1)}>\n                                                <CloudUploadIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"文件夹\">\n                                            <IconButton onClick={() => this.onClickTabIndex(2)}>\n                                                <FolderOpenIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"搜索\">\n                                            <IconButton onClick={() => this.onClickTabIndex(3)}>\n                                                <SearchIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </div>\n                                    :\n                                    <Tooltip title=\"返回\">\n                                        <IconButton style={{ color: '#fdb94e' }} onClick={this.onClickTabBottonBack}>\n                                            <HighlightOffIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                            }\n                        </div>\n                    </Collapse>\n\n                    <Collapse in={(selected.length > 0)}>\n                        <div className={classes.highlight} style={{ display: 'flex', justifyContent: 'space-between', width: '100%', padding: '4px 16px' }}>\n                            <Typography variant=\"h6\" style={{ padding: 8, color: '#626262' }}>{selected.length > 0 ? selected[0].filename : null}</Typography>\n                            {\n                                deleteloading && <LinearProgress className={classes.deleteProgress} />\n                            }\n                            <div style={{ display: 'flex' }}>\n                                {\n                                    searchSelectOneFileType &&\n                                    <Tooltip title=\"下载\">\n                                        <IconButton onClick={this.onClickDownloadFile}>\n                                            <CloudDownloadIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                <Tooltip title=\"移动\" onClick={this.onClickOpenMoveFile}>\n                                    <IconButton>\n                                        <HowToVoteIcon />\n                                    </IconButton>\n                                </Tooltip>\n                                {\n                                    searchSelectOneFileType &&\n                                    <Tooltip title=\"重命名\" onClick={this.onClickRename}>\n                                        <IconButton>\n                                            <CreateIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                <Tooltip title=\"删除\">\n                                    <IconButton onClick={this.onClickDeleteFile}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Tooltip>\n                                {\n                                    searchSelectOneFileType &&\n                                    <Tooltip title=\"分享\" onClick={this.onClickShareFileButton}>\n                                        <IconButton>\n                                            <ShareIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            </div>\n                        </div>\n                    </Collapse>\n                </Paper>\n\n                <Paper className={classes.root}>\n                    <Grid container spacing={0}>\n                        <Grid item xs={9}>\n                            <Table>\n                                <TableHeader\n                                    numSelected={selected.length}\n                                    order={order}\n                                    orderBy={orderBy}\n                                    onRequestSort={this.handleRequestSort}\n                                    rowCount={searchData.length}\n                                />\n                                <TableBody>\n                                    {\n                                        searchData.length > 0 ?\n                                            this.stableSort(searchData, this.getSorting(order, orderBy))\n                                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                                .map(n => {\n                                                    const isSelected = this.isSelected(n._id, n.metadata.filename);\n                                                    return (\n                                                        <TableRow\n                                                            key={n._id}\n                                                            selected={isSelected}\n                                                            style={n.metadata.status === 1 ? { borderLeft: '2px solid rgb(255, 152, 0)' } : {}}\n                                                        >\n                                                            <TableCell padding=\"checkbox\">\n                                                                <Checkbox\n                                                                    checked={isSelected}\n                                                                    onClick={() => this.onClickSelectOne(n._id, n.metadata.type, n.metadata.filename, n.metadata.typename, n.metadata.size, n.metadata.path, n.uploadDate, n.metadata.publicShareId, n.metadata.publicShareUrl, n.metadata.publicShareExpireTime, n.metadata.type)}\n                                                                />\n                                                            </TableCell>\n                                                            <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                                <span\n                                                                    aria-describedby={n._id}\n                                                                    className={n.metadata.type === 1 ? classes.link1 : classes.link2}\n                                                                    onClick={n.metadata.type === 0 ? () => this.onClickCellFileName(n.metadata.filename) : null}\n                                                                >\n                                                                    {n.metadata.filename}\n                                                                </span>\n                                                            </TableCell>\n                                                            <TableCell align=\"right\" className={classes.tableCell}>{n.metadata.type === 1 ? n.metadata.typename : 'folder'}</TableCell>\n                                                            <TableCell align=\"right\" className={classes.tableCell}>{n.uploadDate.split('T')[0]}</TableCell>\n                                                            <TableCell align=\"right\" className={classes.tableCell}>{n.metadata.size}</TableCell>\n                                                        </TableRow>\n                                                    );\n                                                })\n\n                                            :\n                                            <TableRow>\n                                                <TableCell colSpan={5}>\n                                                    <Loading number={[0, 1, 2, 3, 4]} />\n                                                </TableCell>\n                                            </TableRow>\n                                    }\n\n                                    {\n                                        emptyRows > 0 && (\n                                            <TableRow style={{ height: 43 * emptyRows }}>\n                                                <TableCell colSpan={5} />\n                                            </TableRow>)\n                                    }\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                        <Grid item xs={3} style={{ borderLeft: '1px solid #D9D9D9', borderBottom: '1px solid #D9D9D9' }}>\n\n                            <List component=\"nav\" className={classes.fileTitle}>\n                                {\n                                    selected.length > 0 ?\n                                        <Fragment>\n                                            <img src={`/imgs/type/${selected[0].typename}.png`} height={'120'} alt=''></img>\n                                        </Fragment>\n                                        :\n                                        null\n                                }\n                            </List>\n\n                            {\n                                selected.length > 0 && searchSelectOneFileType ?\n                                    <Fragment>\n                                        <List dense={true} component=\"nav\" style={{ paddingBottom: 10 }}>\n                                            <ListItem className={classes.ListItem}>\n                                                <ListItemText style={{ marginLeft: 12, marginBottom: 12 }} primary={'文件信息'} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'名称'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].filename}`} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'类型'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].typename}`} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'大小'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].size}MB`} />\n                                            </ListItem>\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'位置'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].path}`} />\n                                            </ListItem>\n                                            {/* <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'所属者'}</span>\n                                                <ListItemText primary={fileOwner} />\n                                            </ListItem> */}\n                                            <ListItem className={classes.ListItem}>\n                                                <span className={classes.cellTitle}>{'时间'}</span>\n                                                <ListItemText className={classes.listItemText} primary={`${selected[0].uploadDate}`} />\n                                            </ListItem>\n                                        </List>\n                                    </Fragment>\n                                    :\n                                    null\n                            }\n\n                        </Grid>\n                    </Grid>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={searchData.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': '上一页',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': '下一页',\n                        }}\n                        SelectProps={{\n                            native: true,\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        labelRowsPerPage={'每页'}\n                        ActionsComponent={TablePaginationActionsWrapped}\n                    />\n                </Paper>\n\n                <SelectUser classes={{ paper: classes.paper }} open={selectUser} onClose={this.onCloseSelectUsersDialog} onClickAddUsersToList={(x, y) => this.onClickAddUsersToList(x, y)} />\n                <MoveToFolder open={this.state.openMoveFile} onClickCloseMoveFile={this.onClickCloseMoveFile} onClickConfirmMoveFile={this.onClickConfirmMoveFile} />\n\n                <Popper\n                    open={openRename}\n                    anchorEl={this.state.anchorEl}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper className={classes.rename}>\n                                <TextField\n                                    label=\"更改名称?\"\n                                    style={{ marginBottom: 8 }}\n                                    InputProps={{\n                                        startAdornment: (<div />)\n                                    }}\n                                    value={newFileName}\n                                    onChange={this.onChangeRename}\n                                />\n                                <Grid container justify=\"center\" spacing={1}>\n                                    <Grid item>\n                                        <Button color=\"primary\" size={'small'} onClick={this.onClickConfirmBtnRename}>\n                                            {'确定'}\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button color=\"primary\" size={'small'} onClick={this.onClickCancelBtnRename}>\n                                            {'取消'}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n\n                <Drawer\n                    anchor=\"right\"\n                    variant=\"persistent\"\n                    open={rightDrawer}\n                    onClose={this.onClickCloseRightDrawer}\n                    classes={{\n                        paperAnchorRight: classes.drawerPaper\n                    }}\n                >\n                    <div className={classes.toolbar} />\n\n                    <AppBar position=\"static\" color=\"primary\">\n                        <Tabs\n                            value={tabValue}\n                            onChange={this.onChangeTabsValue}\n                        >\n                            <Tab label=\"私有分享\" style={{ width: 229 }} />\n                            <Tab label=\"公有分享\" style={{ width: 229 }} />\n                        </Tabs>\n                    </AppBar>\n\n                    {\n                        tabValue === 0 &&\n                        <div className={classes.rightDrawerPaper}>\n                            <p>文件名:</p>\n                            <Typography className={classes.TypographyFileName}>{selected.length > 0 && selected[0].filename}</Typography>\n                            {\n                                shareUsersList.length > 0 && !selectWindowsUser ?\n                                    null\n                                    :\n                                    <>\n                                        <TextField\n                                            label=\"姓名或账户名\"\n                                            value={shareUserTextField}\n                                            className={classes.textFieldCode}\n                                            margin=\"normal\"\n                                            InputLabelProps={{\n                                                shrink: true\n                                            }}\n                                            helperText=\"输入登录账户添加至名单\"\n                                            onChange={(e) => this.onChangeShareUserTextField(e)}\n                                            InputProps={{\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <Tooltip title=\"验证并添加\">\n                                                            <IconButton\n                                                                style={{ marginTop: -16 }}\n                                                                onClick={this.onClickShareAddUserToList}\n                                                            >\n                                                                {<DoneIcon />}\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n                                        <div className={classes.actionShareButtom}>\n                                            <Tooltip title=\"添加名单\">\n                                                <IconButton onClick={this.onClickSelectUsersOpenDialog}><AddCircleOutline /></IconButton>\n                                            </Tooltip>\n                                        </div>\n                                    </>\n                            }\n                            <TextField\n                                label=\"分享名单\"\n                                multiline\n                                value={''}\n                                className={classes.textFieldShare}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                rows=\"16\"\n                                disabled\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                helperText=\"选择单击用户移除名单\"\n                            />\n                            <List className={classes.listShareAddUser} dense={true}>\n                                {\n                                    shareUsersList.length > 0 ?\n                                        shareUsersList.map((v, i) => {\n                                            return <ListItem\n                                                key={i}\n                                                button\n                                                onClick={() => this.onClickMoveUserList(v._id)}\n                                            >\n                                                <Avatar alt=\"\" src=\"/imgs/user/default.png\" />\n                                                <ListItemText primary={v.displayName} secondary={v.accountName} />\n                                            </ListItem>\n                                        })\n                                        : null\n                                }\n\n                            </List>\n                            {\n                                shareUsersList.length > 0 && !selectWindowsUser ?\n                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.confirmButton} onClick={this.onClickCloseShare}>撤销分享</Button>\n                                    :\n                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.confirmButton} onClick={this.onClickSubmitShare}>分享</Button>\n                            }\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.cancelButton} onClick={this.onClickCloseRightDrawer}>取消</Button>\n                        </div>\n                    }\n\n                    {\n                        tabValue === 1 &&\n                        <div className={classes.rightDrawerPaper}>\n                            <p>文件名:</p>\n                            <Typography className={classes.TypographyFileName}>{selected.length > 0 && selected[0].filename}</Typography>\n                            <form noValidate>\n                                <TextField\n                                    id=\"date2\"\n                                    label=\"设置过期时间\"\n                                    type=\"date\"\n                                    onChange={this.onChangeDateChange}\n                                    value={publicShareExpireTime}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </form>\n                            <form style={{ marginTop: 12 }}>\n                                <TextField\n                                    label=\"设置下载码\"\n                                    type=\"number\"\n                                    placeholder={'六位数字或者不设置'}\n                                    onChange={(e) => this.onChangePublicShareDownloadCode(e)}\n                                    value={publicShareDownloadCode}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </form>\n                            <TextField\n                                label=\"生成分享链接\"\n                                multiline\n                                value={publicShareUrl}\n                                onChange={null}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                disabled\n                                helperText=\"链接发送给分享对象\"\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                            />\n\n                            {\n                                publicShareId === '' ?\n                                    <Button\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        className={classes.confirmButton}\n                                        onClick={\n                                            publicShareUrl === '' ?\n                                                () => this.onClickCreatePublicShare(true)\n                                                :\n                                                () => this.onClickCreatePublicShare(false)\n                                        }\n                                    >\n                                        {\n                                            publicShareUrl === '' ? '生成' : '分享'\n                                        }\n                                    </Button>\n                                    :\n                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.confirmButton} onClick={this.onClickClosePublicShare}>关闭分享</Button>\n                            }\n\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.cancelButton} onClick={this.onClickCloseRightDrawer}>取消</Button>\n                        </div>\n                    }\n                </Drawer>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={noticeOpen}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}>\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n\n            </Fragment>\n        );\n    }\n}\n\nDocuments.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        minWidth: 900\n    },\n    flexcentercenter: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    textFieldCode: {\n        marginTop: 6\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    img: {\n        marginRight: 4\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    upload: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 48,\n        width: '100%',\n        borderRight: '1px solid lightgray',\n        marginRight: 12\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    actionBar: {\n        marginBottom: 12\n    },\n    deleteProgress: {\n        width: 100,\n        marginLeft: 14,\n        marginTop: 20\n    },\n    LabelTitle: {\n        display: 'flex',\n        marginLeft: 15,\n        paddingTop: 12,\n        color: 'gray'\n    },\n    shareButton: {\n        margin: '0px 20px',\n        width: 300,\n        backgroundColor: 'rgba(63, 81, 181, 0.08)',\n        '&:hover': {\n            backgroundColor: '#4699ff29',\n        }\n    },\n    confirmButton: {\n        margin: '4px'\n    },\n    cancelButton: {\n        margin: '4px',\n        color: 'white',\n        backgroundColor: '#ec3b3b',\n        '&:hover': {\n            backgroundColor: '#e63131',\n        }\n    },\n    toolbar: theme.mixins.toolbar,\n    tableCell: {\n        padding: '0px 10px'\n    },\n    link1: {\n        color: theme.palette.primary.main,\n        textDecoration: 'underline'\n    },\n    link2: {\n        color: '#4caf50',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n    },\n    closeBottom: {\n        color: theme.palette.primary.main,\n        fontSize: 28\n    },\n    fileTitle: {\n        height: 180,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    cellTitle: {\n        fontSize: 14, paddingLeft: 34, color: 'gray'\n    },\n    ListItem: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    drawerPaper: {\n        width: 460,\n        boxShadow: '0px 4px 6px 0px rgba(0,0,0,0.2)',\n    },\n    rightDrawerPaper: {\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'center',\n        padding: '0 20px'\n    },\n    TypographyFileName: {\n        wordBreak: 'break-word',\n        marginBottom: 15\n    },\n    textFieldShare: {\n        marginTop: 0,\n        marginBottom: 20,\n        zIndex: 99\n    },\n    actionShareButtom: {\n        justifyContent: 'flex-end',\n        display: 'flex',\n        marginTop: -10,\n        zIndex: 101\n    },\n    listShareAddUser: {\n        position: 'relative',\n        overflow: 'auto',\n        zIndex: 100,\n        height: 290,\n        marginTop: -380,\n        marginBottom: 80\n    },\n    breadcrumb: {\n        textDecoration: 'underline',\n        marginRight: 6,\n        cursor: 'pointer',\n        color: theme.palette.primary.main\n    },\n    searchLabel: {\n        marginRight: 6,\n    },\n    progress: {\n        margin: theme.spacing(0),\n        color: '#e0e0e0'\n    },\n    listItemText: {\n        marginLeft: 8,\n    },\n    rename: {\n        padding: '16px 16px 6px 16px'\n    }\n});\n\nexport default withStyles(styles)(Documents);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport AuthService from '../common/authService'\n\nclass Userauth extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            open: false,\n            noticeMessage: '',\n            datas: [],\n            role: null,\n            selectedIndex: 1,\n            check1: false, check2: false, check3: false, check4: false, check5: false, check6: false, check7: false, check8: false, check9: false, check10: false, check11: false, check12: false\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('用户授权')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            module: ['_4', '0']\n        })\n\n        this.authService.postData('/auth/home', info).then((res) => {\n            if (res.result) {\n                this.setState({ datas: res.message })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    onClickUpdateRoleCheck = (v) => {\n        this.setState({ [v.target.id]: !Boolean(this.state[v.target.id]) })\n    }\n\n    onClickRoleItem = (e) => {\n        let role = this.state.datas.filter((v) => {\n            return v._id === e\n        })[0]\n        this.setState({\n            role: e,\n            check1: (role.permission._1._.split(',')[0] === '1'),\n            check2: (role.permission._1._.split(',')[1] === '1'),\n            check3: (role.permission._1._.split(',')[2] === '1'),\n            check4: (role.permission._1._.split(',')[3] === '1'),\n            check5: (role.permission._1._.split(',')[4] === '1'),\n            check6: (role.permission._2._.split(',')[0] === '1'),\n            check7: (role.permission._2._.split(',')[1] === '1'),\n            check8: (role.permission._3._.split(',')[0] === '1'),\n            check9: (role.permission._3._.split(',')[1] === '1'),\n            check10: (role.permission._4._.split(',')[0] === '1'),\n            check11: (role.permission._4._.split(',')[1] === '1'),\n            check12: (role.permission._5._.split(',')[0] === '1')\n        })\n    };\n\n    onClickClearRole = () => {\n        this.setState({\n            check1: false,\n            check2: false,\n            check3: false,\n            check4: false,\n            check5: false,\n            check6: false,\n            check7: false,\n            check8: false,\n            check9: false,\n            check10: false,\n            check11: false,\n            check12: false\n        })\n    }\n\n    onClickUpdateRole = () => {\n        if (this.state.role === null) {\n            this.setState({ open: true, noticeMessage: '请选择用户角色' })\n            return false\n        }\n\n        const info = JSON.stringify({\n            _id: this.state.role,\n            _1: this.state.check1,\n            _2: this.state.check2,\n            _3: this.state.check3,\n            _4: this.state.check4,\n            _5: this.state.check5,\n            _6: this.state.check6,\n            _7: this.state.check7,\n            _8: this.state.check8,\n            _9: this.state.check9,\n            _10: this.state.check10,\n            _11: this.state.check11,\n            _12: this.state.check12,\n            module: ['_4', '1']\n        })\n\n        this.authService.postData('/auth/update', info).then((res) => {\n            if (res.result) {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.RefreshInfo()\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n\n    render() {\n        const { classes } = this.props\n        const { datas, role, check1, check2, check3, check4, check5, check6, check7, check8, check9, check10, check11, check12 } = this.state\n\n        return (\n            <Fragment>\n\n                <Grid container spacing={2} className={classes.main}>\n                    <Grid item xs={2}>\n                        <Paper>\n                            <List component=\"nav\">\n                                <ListItem style={{ textAlign: 'center' }}>\n                                    <ListItemText primary=\"用户角色\" />\n                                </ListItem>\n                            </List>\n                            <Divider />\n                            {\n                                datas.map((v, i) => {\n                                    return <List key={i} component=\"nav\" style={{ paddingTop: 0, paddingBottom: 0 }}>\n                                        <ListItem\n                                            button\n                                            onClick={() => this.onClickRoleItem(v._id)}\n                                        >\n                                            <ListItemIcon>\n                                                <SupervisedUserCircle />\n                                            </ListItemIcon>\n                                            <ListItemText primary={v.displayName} />\n                                        </ListItem>\n                                    </List>\n                                })\n                            }\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper>\n                            <List component=\"nav\">\n                                <ListItem style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClickClearRole}>{'清除'}</Button>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClickUpdateRole}>{'更新'}</Button>\n                                </ListItem>\n                            </List>\n                            <Divider />\n                            {\n                                role !== null ?\n                                    <div className={classNames(classes.rightColumn)}>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>个人文档:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check1' checked={check1} value={String(check1)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"查看\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check2' checked={check2} value={String(check2)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"上传\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check3' checked={check3} value={String(check3)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"下载\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check4' checked={check4} value={String(check4)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"删除\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check5' checked={check5} value={String(check5)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"分享\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}> 人员信息: </div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check6' checked={check6} value={String(check6)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox >\n                                                <TextField\n                                                    label=\"查看\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{ marginTop: -10, width: 60 }\n                                                    }\n                                                />\n                                                <Checkbox id='check7' checked={check7} value={String(check7)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox >\n                                                <TextField\n                                                    label=\"修改\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{ marginTop: -10, width: 60 }\n                                                    }\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>人员角色:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check8' checked={check8} value={String(check8)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"查看\"\n                                                    value={''}\n                                                    onChange={null}\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check9' checked={check9} value={String(check9)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"修改\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>用户授权:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check10' checked={check10} value={String(check10)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"查看\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                                <Checkbox id='check11' checked={check11} value={String(check11)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"修改\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 60\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div style={{ marginTop: 8, color: 'gray', fontSize: 14 }}>系统设置:</div>\n                                            <div style={{ padding: '0 15px 10px 15px' }}>\n                                                <Checkbox id='check12' checked={check12} value={String(check12)} onChange={(e) => this.onClickUpdateRoleCheck(e)}></Checkbox>\n                                                <TextField\n                                                    label=\"完全控制\"\n                                                    InputProps={{\n                                                        disabled: true,\n                                                    }}\n                                                    style={{\n                                                        marginTop: -10,\n                                                        width: 90\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div> :\n                                    null\n                            }\n                        </Paper>\n                    </Grid >\n                </Grid>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        );\n    }\n}\n\nUserauth.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    main: {\n        marginBottom: 10,\n    },\n    iconsMarginRight: {\n        marginRight: theme.spacing(1)\n    },\n    mainBar: {\n        display: 'flex',\n        padding: '8px 16px'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '33.33%',\n    },\n    leftColumn: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 200\n    },\n    rightColumn: {\n        padding: '10px 40px'\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing(1)}px ${theme.spacing(6)}px`,\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n})\n\n\nexport default withStyles(styles)(Userauth)","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport AuthService from '../common/authService';\nimport Loading from '../common/loading'\nimport { LocalStorageKey } from '../common/config'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(5),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    infoBar: {\n        padding: theme.spacing(2),\n    }\n});\n\nclass logs extends Component {\n    _isMounted = true\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            datas: null\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('系统日志')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.authService.postData('/setting/log', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { datas } = this.state;\n        return (\n            <Fragment>\n                <Paper className={classes.infoBar}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        系统日志\n                    </Typography>\n                    <Typography component=\"p\">\n                        记录系统登录、操作等相关信息\n                    </Typography>\n                </Paper>\n                <Paper className={classes.root}>\n                    {datas !== null ?\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={{ width: '20%' }}>账号</TableCell>\n                                    <TableCell style={{ width: '15%' }} align=\"right\">操作模块</TableCell>\n                                    <TableCell >操作详情</TableCell>\n                                    <TableCell align=\"right\">操作时间</TableCell>\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n                                {\n                                    datas.map(row => (\n                                        <TableRow key={row._id}>\n                                            <TableCell component=\"th\" scope=\"row\"> {row.accountName} </TableCell>\n                                            <TableCell align=\"right\">{row.actionModule}</TableCell>\n                                            <TableCell>{row.actionDetails}</TableCell>\n                                            <TableCell align=\"right\">{row.actionTime}</TableCell>\n                                        </TableRow>\n                                    ))\n\n                                }\n                            </TableBody>\n                        </Table>\n                        :\n                        <Loading number={[0, 1, 2, 3, 4]} />\n                    }\n                </Paper>\n            </Fragment>\n        )\n    }\n}\n\nlogs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(logs);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    main: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        width: '100%'\n    }\n});\n\nfunction errorpage(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root} >\n            <Paper className={classes.main} elevation={1}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    404 页面\n                </Typography>\n                <Typography component=\"p\">\n                    你访问的页面不存在。\n                </Typography>\n            </Paper>\n        </div>\n    );\n}\n\nerrorpage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(errorpage);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport TextField from '@material-ui/core/TextField';\nimport EmailIcon from '@material-ui/icons/MailOutline';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport md5 from 'md5'\nimport Lock from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport InputIcon from '@material-ui/icons/Input';\n\nimport AuthService from '../common/authService'\nimport { LocalStorageKey } from '../common/config'\n\nclass SignIn extends React.Component {\n    _Mount = true\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            noticeOpen: false,\n            noticeMessage: null,\n            username: 'yongdingrui@contoso.com',\n            password: '123456'\n        }\n    }\n\n    componentWillMount() {\n        this.authService.postData('/login/init', null).then(res => {\n            if (this._Mount) {\n                if (res.result) {\n                    this.props.history.push('/setup')\n                }\n            }\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleEnterKey);\n    }\n\n    componentWillUmount() {\n        document.removeEventListener(\"keydown\", this.handleEenterKey);\n        this._Mount = false\n    }\n\n    handleEnterKey = (e) => {\n        if (e.keyCode === 13) {\n            this.onClickLogin()\n        }\n    }\n\n    onClickLogin = () => {\n\n        if (this.state.username !== '' && this.state.password !== '') {\n\n            let reg = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/\n\n            if (!reg.test(this.state.username)) {\n                this.setState({ noticeOpen: true, noticeMessage: '邮箱格式不正确,请重新输入!' })\n                return false\n            }\n\n            const datas = JSON.stringify({\n                username: this.state.username,\n                password: md5(this.state.password)\n            })\n\n            this.authService.login(datas).then(res => {\n                if (this._Mount) {\n                    if (res.result) {\n                        localStorage.setItem(LocalStorageKey, JSON.stringify(res.message))\n                        this.setState({ username: '', password: '' })\n                        this.props.history.push('/')\n                    } else {\n                        this.setState({ noticeOpen: true, noticeMessage: res.message })\n                    }\n                }\n            })\n        }\n        else {\n            this.setState({ noticeOpen: true, noticeMessage: '邮箱或密码未填写完整!' })\n        }\n    }\n\n    onChangeUserName = (e) => {\n        this.setState({ username: e.target.value })\n    }\n\n    onChangePassword = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n    onClickNoticeOpen = () => {\n        this.setState({ noticeOpen: true });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ noticeOpen: false });\n    };\n\n    onClickReset = () => {\n        this.setState({ username: '', password: '' });\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\" className={classes.Content}>\n                    <Typography component=\"div\" className={classes.left}>\n                        <img src={require('../assets/loginbg.png')} alt=\"\" />\n                    </Typography>\n                    <Typography component=\"div\" className={classes.right}>\n                        <Grid container className={classes.box} justify={\"center\"} direction={'column'}>\n                            <Typography variant=\"h5\" className={classes.logoText}>企业文档管理与分享平台</Typography>\n                            <Typography style={{ color: '#848484', margin: '4px 0' }}>Welcome back , Please sign in to your account.</Typography>\n                            <Typography style={{ color: '#848484' }}>一套文档集中式管理与安全有序分享的企业级解决方案。</Typography>\n\n                            <Divider className={classes.divider} />\n\n                            <Grid item xs={12} style={{ margin: '30px 0' }}>\n                                <Grid container justify=\"center\" spacing={2}>\n                                    <EmailIcon className={classes.icon} />\n                                    <TextField\n                                        className={classes.text}\n                                        label=\"邮箱\"\n                                        onChange={this.onChangeUserName}\n                                        value={this.state.username}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <Lock className={classes.icon} />\n                                    <TextField\n                                        className={classes.text}\n                                        type={'password'}\n                                        label=\"密码\"\n                                        onChange={this.onChangePassword}\n                                        value={this.state.password}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Divider className={classes.divider} />\n\n                            <Grid item xs={12}>\n                                <Grid container justify=\"flex-end\" spacing={2}>\n                                    <Grid item>\n                                        <Button\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            style={{ width: 100 }}\n                                            onClick={this.onClickLogin}\n                                        >\n                                            <InputIcon className={classes.rightIcon} />\n                                            {'登录'}\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Button\n                                            style={{ width: 80 }}\n                                            onClick={this.onClickReset}\n                                        >\n                                            {'重置'}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                    </Typography>\n                </Container>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.noticeOpen}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    Content: {\n        display: 'flex',\n        padding: 0,\n    },\n    left: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.primary.main,\n        height: '100vh',\n        width: 480,\n    },\n    right: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 900\n    },\n    box: {\n        padding: '0 150px',\n        width: 900\n    },\n    divider: {\n        margin: '30px 0'\n    },\n    logoText: {\n        fontSize: '1.8rem',\n        lineHeight: '1.8'\n    },\n    icon: {\n        color: 'gray',\n        marginTop: '18px',\n        marginRight: '8px'\n    },\n    text: {\n        width: 260\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    rightIcon: {\n        marginRight: 8\n    },\n    cover: {\n        width: 80,\n        height: 100,\n        cursor: 'pointer'\n    }\n})\n\nexport default withStyles(styles)(SignIn);","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default class TableHeader extends React.Component {\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy } = this.props;\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell style={{ width: '5%', padding: '0px 10px 0px 0px' }}></TableCell>\n                    <TableCell sortDirection={orderBy === 'filename' ? order : false} style={{ padding: '0px 10px 0px 0px' }}>\n                        <Tooltip\n                            title=\"文件名\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'filename'}\n                                direction={order}\n                                onClick={this.createSortHandler('filename')}\n                            >\n                                文件名\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '5%', padding: '0px 10px 0px 0px' }} align='right'>\n                        类型\n                    </TableCell>\n                    <TableCell sortDirection={orderBy === 'uploadDate' ? order : false} style={{ width: '12%', padding: '0px 10px 0px 0px' }} align='right'>\n                        <Tooltip\n                            title=\"时间\"\n                            placement={true ? 'bottom-end' : 'bottom-start'}\n                            enterDelay={300}\n                        >\n                            <TableSortLabel\n                                active={orderBy === 'uploadDate'}\n                                direction={order}\n                                onClick={this.createSortHandler('uploadDate')}\n                            >\n                                时间\n                            </TableSortLabel>\n                        </Tooltip>\n                    </TableCell>\n                    <TableCell style={{ width: '10%', padding: '0px 10px 0px 0px' }} align='right'>拥有者</TableCell>\n                    <TableCell style={{ width: '10%', padding: '0px 10px 0px 0px' }} align='center'>文件大小</TableCell>\n                </TableRow>\n            </TableHead>\n        );\n    }\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button';\nimport AuthService from '../../common/authService';\nimport TableHeader from './TableHeader'\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass DocFrom extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            order: 'asc',\n            orderBy: 'calories',\n            selected: [],\n            data: [],\n            page: 0,\n            rowsPerPage: 10,\n            loading: false,\n            open: false,\n            noticeMessage: null,\n            toolBar: false\n        };\n    }\n\n    componentWillMount() {\n        this.RefreshInfo()\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo = () => {\n        this.props.onChangeRefresh(true)\n        this.authService.postData('/file/sharefromlist', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ data: res.message })\n                } else {\n                    this.setState({ data: [], open: true, noticeMessage: res.message })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    handleRequestSort = (event, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleSelectAllClick = event => {\n        if (event.target.checked) {\n            this.setState(state => ({ selected: state.data.map(n => n._id) }));\n            return;\n        }\n        this.setState({ selected: [] });\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    onClickDownloadFile = (id) => {\n        const a = document.createElement('a')\n        a.setAttribute('href', this.authService.downloadFile('/file/down', id))\n        a.click()\n    }\n\n    isSelected = (id) => {\n        return this.state.selected.indexOf(id) !== -1;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { data, order, orderBy, selected, rowsPerPage, page, open, noticeMessage } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n        return (\n            <Fragment>\n                <div className={classes.root}>\n                    <div className={classes.tableWrapper}>\n                        <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                            <TableHeader\n                                numSelected={selected.length}\n                                order={order}\n                                orderBy={orderBy}\n                                onRequestSort={this.handleRequestSort}\n                                rowCount={data.length}\n                            />\n                            <TableBody>\n                                {stableSort(data, getSorting(order, orderBy))\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map(n => {\n                                        const isSelected = this.isSelected(n._id);\n                                        return (\n                                            <TableRow\n                                                hover\n                                                role=\"checkbox\"\n                                                tabIndex={-1}\n                                                key={n._id}\n                                                selected={isSelected}\n                                                style={n.metadata.status === 1 ? { borderLeft: '8px solid rgb(76, 175, 80)' } : { borderLeft: '8px solid rgb(255, 152, 0)' }}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Button size=\"small\" onClick={() => this.onClickDownloadFile(n._id)}>\n                                                        下载\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                        <img src={`/imgs/type/${n.metadata.typename}.png`} alt='' className={classes.img} />\n                                                        {n.metadata.filename}\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.typename}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.uploadDate.split('T')[0]}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.userDisplayName}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"center\">{((n.length / 1024) / 1024).toFixed(3)}MB</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: 49 * emptyRows }}>\n                                        <TableCell colSpan={7} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={data.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': '上一页',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': '下一页',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        labelRowsPerPage={'每页'}\n                    />\n                </div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nDocFrom.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginRight: `${theme.spacing(1)}px`,\n    },\n    table: {\n        minWidth: 1020,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    img: {\n        marginRight: 8,\n        height: 20\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    tableCell: {\n        padding: '0px 10px'\n    },\n});\n\nexport default withStyles(styles)(DocFrom);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Button from '@material-ui/core/Button';\nimport AuthService from '../../common/authService';\nimport TableHeader from './TableHeader'\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass DocFrom extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            order: 'asc',\n            orderBy: 'calories',\n            selected: [],\n            data: [],\n            page: 0,\n            rowsPerPage: 10,\n            loading: false,\n            open: false,\n            noticeMessage: null,\n            toolBar: false\n        };\n    }\n\n    componentWillMount() {\n        this.RefreshInfo()\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        this.authService.postData('/file/sharetolist', null).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ data: res.message })\n                } else {\n                    this.setState({ data: [], open: true, noticeMessage: res.message })\n                }\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    handleRequestSort = (event, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleSelectAllClick = event => {\n        if (event.target.checked) {\n            this.setState(state => ({ selected: state.data.map(n => n._id) }));\n            return;\n        }\n        this.setState({ selected: [] });\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    onClickDownloadFile = (id) => {\n        const a = document.createElement('a')\n        a.setAttribute('href', this.authService.downloadFile('/file/down', id))\n        a.click()\n    }\n\n    isSelected = (id) => {\n        return this.state.selected.indexOf(id) !== -1;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { data, order, orderBy, selected, rowsPerPage, page, open, noticeMessage } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n        return (\n            <Fragment>\n                <div className={classes.root}>\n                    <div className={classes.tableWrapper}>\n                        <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                            <TableHeader\n                                numSelected={selected.length}\n                                order={order}\n                                orderBy={orderBy}\n                                onRequestSort={this.handleRequestSort}\n                                rowCount={data.length}\n                            />\n                            <TableBody>\n                                {stableSort(data, getSorting(order, orderBy))\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map(n => {\n                                        const isSelected = this.isSelected(n._id);\n                                        return (\n                                            <TableRow\n                                                hover\n                                                role=\"checkbox\"\n                                                tabIndex={-1}\n                                                key={n._id}\n                                                selected={isSelected}\n                                                style={{ borderLeft: '8px solid rgb(153, 103, 179)' }}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Button size=\"small\" onClick={() => this.onClickDownloadFile(n._id)}>\n                                                        下载\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                        <img src={`/imgs/type/${n.metadata.typename}.png`} alt='' className={classes.img} />\n                                                        {n.metadata.filename}\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.typename}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.uploadDate.split('T')[0]}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"right\">{n.metadata.userDisplayName}</TableCell>\n                                                <TableCell className={classes.tableCell} align=\"center\">{((n.length / 1000) / 1000).toFixed(3)}MB</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: 49 * emptyRows }}>\n                                        <TableCell colSpan={7} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={data.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': '上一页',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': '下一页',\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        labelRowsPerPage={'每页'}\n                    />\n                </div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nDocFrom.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginRight: `${theme.spacing(1)}px`,\n    },\n    table: {\n        minWidth: 1020,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    img: {\n        marginRight: 8,\n        height: 20\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    tableCell: {\n        padding: '0px 10px'\n    },\n});\n\nexport default withStyles(styles)(DocFrom);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Divider from '@material-ui/core/Divider';\n\nimport DocFrom from './docFrom'\nimport DocTo from './docTo'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nclass SimpleTabs extends React.Component {\n\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('分享文档')\n        this.props.onChangeChildFuncion(this)\n    }\n\n    render() {\n        const { value } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <Paper className={classes.root}>\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"分享给我的\" />\n                    <Tab label=\"我分享的\" />\n                </Tabs>\n                <Divider />\n                {\n                    value === 0\n                    &&\n                    <DocFrom onChangeRefresh={(e) => this.props.onChangeRefresh(e)} />\n                }\n                {\n                    value === 1\n                    &&\n                    <DocTo onChangeRefresh={(e) => this.props.onChangeRefresh(e)} />\n                }\n            </Paper>\n        );\n    }\n}\n\nSimpleTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTabs);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nimport AuthService from '../common/authService'\n\nclass Setting extends Component {\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            serverinfo: null,\n            fileupload: null,\n            quotaAndexpire: null\n        }\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('全局配置')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.authService.postData('/setting/home', null).then((res) => {\n            if (res.result) {\n                this.setState({\n                    serverinfo: res.message.serverinfo,\n                    fileupload: res.message.fileupload,\n                    quotaAndexpire: res.message.quotaAndexpire,\n                })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeTabsChange = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value, fileupload, quotaAndexpire } = this.state;\n        return (\n            <Fragment>\n                <div className={classes.root}>\n                    <AppBar position=\"static\">\n                        <Tabs value={value} onChange={this.onChangeTabsChange}>\n                            <Tab label=\"文件上传\" />\n                            <Tab label=\"配额与过期\" />\n                            <Tab label=\"文件归档\" />\n                            <Tab label=\"抹除数据\" />\n                        </Tabs>\n                    </AppBar>\n                    {\n                        value === 1 && fileupload !== null &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'文件上传限制大小:'}\n                                </InputLabel>\n                                <InputLabel className={classes.label}>\n                                    {fileupload.upladFileSize / 1000 / 1000} MB\n                                </InputLabel>\n                            </div>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'上传禁止文件格式:'}\n                                </InputLabel>\n                                <InputLabel className={classes.label}>\n                                    {fileupload.excludeExtension}\n                                </InputLabel>\n                            </div>\n                        </div>\n                    }\n                    {\n                        value === 2 && quotaAndexpire !== null &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'公有分享过期默认时间:'}\n                                </InputLabel>\n                                <InputLabel className={classes.label}>\n                                    {quotaAndexpire.fileShareExpires} day\n                                </InputLabel>\n                            </div>\n                        </div>\n                    }\n                    {\n                        value === 3 &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'文档库内容归档'}\n                                </InputLabel>\n                                <br />\n                                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                    <NavigationIcon className={classes.extendedIcon} />执行\n                                </Button>\n                            </div>\n                        </div>\n                    }\n                    {\n                        value === 4 &&\n                        <div className={classes.margin}>\n                            <div className={classes.labelmargin}>\n                                <InputLabel>\n                                    {'抹除文档库中所有内容'}\n                                </InputLabel>\n                                <br />\n                                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                    <NavigationIcon className={classes.extendedIcon} />执行\n                                </Button>\n                            </div>\n                        </div>\n                    }\n                </div>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        );\n    }\n}\n\nSetting.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    margin: {\n        padding: '20px 30px'\n    },\n    labelmargin: {\n        padding: 5\n    },\n    input: {\n        margin: theme.spacing(1)\n    },\n    label: {\n        color: 'green',\n        marginLeft: theme.spacing(2)\n    },\n    button: {\n        marginTop: theme.spacing(2)\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n});\n\nexport default withStyles(styles)(Setting);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport BlockIcon from '@material-ui/icons/Block';\n\nimport AuthService from '../common/authService'\n\nclass UserCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            disabled: props.status\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { disabled } = this.state\n\n        return (\n            <Paper className={classes.paper}>\n                <Paper className={classes.bar}>\n                    {disabled ? <b>{this.props.displayName}</b> : <b>{this.props.displayName}(已禁用)</b>}\n                </Paper>\n                <Grid container>\n                    {\n                        this.props.listLayout ?\n                            <Fragment>\n                                <Grid item xs={5}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={7}>\n                                    <List style={{ padding: '16px 0' }}>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                    </List>\n                                </Grid>\n                            </Fragment>\n                            :\n                            <Fragment>\n                                <Grid item xs={2}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={10}>\n                                    <div style={{ display: 'flex' }}>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <BusinessIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.department}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <PinDropIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.address}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                    </div>\n                                </Grid>\n                            </Fragment>\n                    }\n                </Grid>\n            </Paper >\n        )\n    }\n}\n\nUserCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    list_user_card: {\n        padding: '2px 0',\n        marginLeft: -26\n    },\n    listItem_user_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_user_card: {\n        paddingLeft: 4\n    },\n    bar: {\n        display: 'flex',\n        justifyContent:\n            'space-between',\n        height: 40,\n        backgroundColor: theme.palette.primary.main,\n        padding: '8px 20px 8px 20px',\n        color: 'white'\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    }\n});\n\nexport default withStyles(styles)(UserCard);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport UserCard from './userCard'\nimport Loading from '../common/loading'\nimport AuthService from '../common/authService'\n\nclass User extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            loading: false,\n            open: false,\n            noticeMessage: null,\n            userListLayout: 1,\n            count: 0,\n            number: 6,\n            before: 0,\n            after: 6,\n            datas: [],\n            page: 0,\n            searchButton: false,\n            disabled: false,\n            disabledColor: false,\n            userSearch: ''\n        }\n    }\n\n    handleChange = (_, value) => {\n        this.setState({ value });\n    };\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('人员列表')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.setState({ datas: [] })\n\n        let info = JSON.stringify({\n            before: this.state.before,\n            after: this.state.after\n        })\n\n        this.authService.postData('/user/home', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                } else {\n                    this.setState({ open: !this.state.open, noticeMessage: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    updateRefreshPage = () => {\n        this.RefreshInfo()\n    }\n\n    onChangeUserList = (e) => {\n        this.setState({ userListLayout: e })\n    }\n\n    onClickSearchBtn = () => {\n        this.setState({ searchButton: !this.state.searchButton })\n    }\n\n    onChangeUserSearch = (e) => {\n        this.setState({ userSearch: e.target.value })\n    }\n\n    onClickUserSearch = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            userSearch: this.state.userSearch\n        })\n\n        this.authService.postData('/user/query', info).then((res) => {\n            if (res.result) {\n                this.setState({ datas: res.message })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickNavigateBefore = () => {\n        this.setState({\n            count: this.state.count - 1,\n            before: (this.state.count - 1) * this.state.number,\n            after: (this.state.count) * this.state.number\n        }, () => { this.RefreshInfo() })\n    }\n\n    onClickNavigateNext = () => {\n        this.setState({\n            count: this.state.count + 1,\n            before: (this.state.count + 1) * this.state.number,\n            after: (this.state.count + 2) * this.state.number\n        }, () => {\n            this.RefreshInfo()\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const { userSearch, datas, userListLayout } = this.state\n\n        return (\n            <Fragment>\n\n                <div style={{ display: 'flex', justifyContent: 'space-between', height: 36 }}>\n                    <div style={{ display: 'flex' }}>\n                        <Button variant=\"contained\" color=\"primary\" disabled={userListLayout === 1} onClick={() => this.onChangeUserList(1)}><ViewModuleIcon /></Button>\n                        <Button variant=\"contained\" color=\"primary\" disabled={userListLayout === 2} onClick={() => this.onChangeUserList(2)} className={classes.buttonLeftSpace}><ViewListIcon /></Button>\n                    </div>\n\n                    <div style={this.state.searchButton ? { margin: '-12px 12px 0px 12px', width: '100%' } : { display: 'none' }}>\n                        <div style={{ display: 'flex' }}>\n                            <TextField fullWidth label=\"用户名或姓名\" value={userSearch} onChange={this.onChangeUserSearch} />\n                            <Button color=\"primary\" className={classes.userSearchBtn} onClick={this.onClickUserSearch} >搜索</Button>\n                        </div>\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSearchBtn}><SearchIcon /></Button>\n                </div>\n\n                <div style={{ margin: 15 }} />\n\n                <Fragment>\n                    <Grid container spacing={1}>\n                        {\n                            datas.length > 0 ?\n                                datas.map((v, i) => {\n                                    return (\n                                        <Grid key={i} item xs={userListLayout === 1 ? 4 : 12}>\n                                            <UserCard uid={v._id} listLayout={userListLayout === 1} status={v.status} updateRefreshPage={this.updateRefreshPage} accountName={v.accountName} brithday={v.birthday} displayName={v.displayName} phone={v.phone} title={v.title} department={v.department} address={v.address} history={this.props.history} />\n                                        </Grid>\n                                    )\n                                })\n                                :\n                                [1, 2, 3].map((_, i) => {\n                                    return (\n                                        <Grid key={i} item xs={4}>\n                                            <Paper style={{ padding: '10px 0' }}>\n                                                <Loading number={[0, 1, 2, 3, 4]} />\n                                            </Paper>\n                                        </Grid>\n                                    )\n                                })\n                        }\n                    </Grid>\n\n                    <Paper style={{ display: 'flex', justifyContent: 'center', width: '100%', marginTop: 16, padding: '4px 0' }}>\n                        <Button size={'small'} color=\"default\" disabled={this.state.before <= 0} onClick={() => this.onClickNavigateBefore()} ><NavigateBeforeIcon /></Button>\n                        <Typography component={'span'} style={{ lineHeight: 2, padding: '0 8px' }}>{this.state.count + 1}</Typography>\n                        <Button size={'small'} color=\"default\" disabled={this.state.number > this.state.datas.length} onClick={() => this.onClickNavigateNext()} ><NavigateNextIcon /></Button>\n                    </Paper>\n                </Fragment>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment >\n        );\n    }\n}\n\nUser.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    list_user_card: {\n        padding: '4px 0',\n        marginLeft: -26\n    },\n    listItem_user_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_user_card: {\n        paddingLeft: 4\n    },\n    userSearchBtn: {\n        height: 36,\n        marginTop: 12\n    },\n    progress: {\n        margin: theme.spacing(2),\n    }\n});\n\nexport default withStyles(styles)(User);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BlockIcon from '@material-ui/icons/Block';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport AuthService from '../common/authService'\n\nclass UserCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            disabled: props.status,\n            anchorEl: null,\n        }\n    }\n\n    handleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    onClickUserEdit = (e) => {\n        this.props.history.push(`/uedit?id=${e}`)\n    }\n\n    onClickUserPwd = (e) => {\n        this.props.history.push(`/pwd?id=${e}`)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { disabled, anchorEl } = this.state\n\n        return (\n            <Paper className={classes.paper}>\n                <Paper className={classes.bar}>\n                    {disabled ? <b>{this.props.displayName}</b> : <b>{this.props.displayName}(已禁用)</b>}\n                    <span\n                        aria-owns={anchorEl ? 'edit-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={this.handleClick}\n                    >\n                        <MoreVertIcon />\n                    </span>\n                    <Menu\n                        id=\"edit-menu\"\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={() => this.onClickUserEdit(this.props.uid)}>\n                            <CreateIcon className={classes.extendedIcon} /><span>编辑资料</span>\n                        </MenuItem>\n                        <MenuItem onClick={() => this.onClickUserPwd(this.props.uid)}>\n                            <DeleteIcon className={classes.extendedIcon} /><span>重置密码</span>\n                        </MenuItem>\n                    </Menu>\n                </Paper>\n                <Grid container>\n                    {\n                        this.props.listLayout ?\n                            <Fragment>\n                                <Grid item xs={5}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={7}>\n                                    <List style={{ padding: '16px 0' }}>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                        <List className={classes.list_user_card}>\n                                            <ListItem className={classes.listItem_user_card}>\n                                                <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                            </ListItem>\n                                        </List>\n                                    </List>\n                                </Grid>\n                            </Fragment>\n                            :\n                            <Fragment>\n                                <Grid item xs={2}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: 180 }}>\n                                        {disabled ? <Avatar alt=\"\" src=\"/imgs/user/default.png\" className={classes.avatar} /> : <BlockIcon style={{ fontSize: 84, color: '#D1001E' }} />}\n                                        <div style={{ marginTop: 4 }}>\n                                            <Switch\n                                                checked={!disabled}\n                                                style={{ cursor: 'default' }}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={10}>\n                                    <div style={{ display: 'flex' }}>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <MailOutlineIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.accountName}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <CardMembershipIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.title}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <SettingsPhoneIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.phone}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <DateRangeIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.brithday}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                        <List style={{ width: 320, padding: '16px 0' }}>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <BusinessIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.department}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                            <List className={classes.list_user_card}>\n                                                <ListItem className={classes.listItem_user_card}>\n                                                    <PinDropIcon style={disabled ? { color: 'black' } : { color: 'gray' }} />\n                                                    <ListItemText className={classes.listItemText_user_card}><span style={disabled ? { color: 'black' } : { color: 'gray' }}>{this.props.address}</span></ListItemText>\n                                                </ListItem>\n                                            </List>\n                                        </List>\n                                    </div>\n                                </Grid>\n                            </Fragment>\n                    }\n                </Grid>\n            </Paper >\n        )\n    }\n}\n\nUserCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    bar: {\n        display: 'flex',\n        justifyContent:\n            'space-between',\n        height: 40,\n        backgroundColor: theme.palette.primary.main,\n        padding: '8px 20px 8px 20px',\n        color: 'white'\n    },\n    list_user_card: {\n        padding: '2px 0',\n        marginLeft: -26\n    },\n    listItem_user_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_user_card: {\n        paddingLeft: 4\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    }\n});\n\nexport default withStyles(styles)(UserCard);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport UserCard from './muserCard'\nimport Loading from '../common/loading'\nimport AuthService from '../common/authService'\n\nclass UserManage extends React.Component {\n    _isMounted = true;\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            loading: false,\n            userManageListLayout: 1,\n            count: 0,\n            number: 6,\n            before: 0,\n            after: 6,\n            datas: [],\n            page: 0,\n            searchButton: false,\n            disabled: false,\n            disabledColor: false,\n            userManageSearch: ''\n        }\n    }\n\n    handleChange = (_, value) => {\n        this.setState({ value });\n    };\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('人员管理')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        this.setState({ datas: [] })\n\n        let info = JSON.stringify({ before: this.state.before, after: this.state.after })\n\n        this.authService.postData('/user/manage', info).then((res) => {\n            if (this._isMounted) {\n                if (res.result) {\n                    this.setState({ datas: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n                else {\n                    this.setState({ open: true, noticeMessage: res.message })\n                    this.props.onChangeRefresh(false)\n                }\n            }\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    updateRefreshPage = () => {\n        this.RefreshInfo()\n    }\n\n    onChangeUserManageList = (e) => {\n        this.setState({ userManageListLayout: e })\n    }\n\n    onClickSearchBtn = () => {\n        this.setState({ searchButton: !this.state.searchButton })\n    }\n\n    onClickAddUserManage = () => {\n        this.props.history.push('/uadd')\n    }\n\n    onChangeUserManageSearch = (e) => {\n        this.setState({ userManageSearch: e.target.value })\n    }\n\n    onClickUserSearch = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({ userSearch: this.state.userManageSearch })\n\n        this.authService.postData('/user/query', info).then((res) => {\n\n            if (res.result) {\n                this.setState({ datas: res.message })\n                this.props.onChangeRefresh(false)\n            }\n            else {\n                this.setState({ open: !this.state.open, noticeMessage: res.message })\n            }\n        })\n    }\n\n    onClickNavigateBefore = () => {\n        this.setState({\n            count: this.state.count - 1,\n            before: (this.state.count - 1) * this.state.number,\n            after: (this.state.count) * this.state.number\n        }, () => { this.RefreshInfo() })\n    }\n\n    onClickNavigateNext = () => {\n        this.setState({\n            count: this.state.count + 1,\n            before: (this.state.count + 1) * this.state.number,\n            after: (this.state.count + 2) * this.state.number\n        }, () => {\n            this.RefreshInfo()\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { userManageSearch, datas } = this.state\n\n        return (\n            <Fragment>\n                {\n                    <div style={{ display: 'flex', justifyContent: 'space-between', height: 36 }}>\n\n                        <div style={{ display: 'flex' }}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickAddUserManage}><PersonAddIcon /></Button>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.buttonLeftSpace} onClick={this.onClickSearchBtn}><SearchIcon /></Button>\n                        </div>\n\n                        <div style={this.state.searchButton ? { margin: '-12px 12px 0px 12px', width: '100%' } : { display: 'none' }}>\n                            <div style={{ display: 'flex' }}>\n                                <TextField fullWidth label=\"用户名搜索\" value={userManageSearch} onChange={this.onChangeUserManageSearch} />\n                                <Button color=\"primary\" className={classes.userSearchBtn} onClick={this.onClickUserSearch} >搜索</Button>\n                            </div>\n                        </div>\n\n                        <div style={{ display: 'flex' }}>\n                            <Button variant=\"contained\" color=\"primary\" disabled={this.state.userManageListLayout === 1} onClick={() => this.onChangeUserManageList(1)}><ViewModuleIcon /></Button>\n                            <Button variant=\"contained\" color=\"primary\" disabled={this.state.userManageListLayout === 2} onClick={() => this.onChangeUserManageList(2)} className={classes.buttonLeftSpace}><ViewListIcon /></Button>\n                        </div>\n\n                    </div>\n                }\n\n                <div style={{ margin: 15 }} />\n\n                <Fragment>\n                    <Grid container justify=\"center\" spacing={1}>\n                        {\n                            datas.length > 0 ?\n                                datas.map((v, i) => {\n                                    return (\n                                        <Grid key={i} item xs={this.state.userManageListLayout === 1 ? 4 : 12}>\n                                            <UserCard uid={v._id} listLayout={this.state.userManageListLayout === 1} status={v.status} updateRefreshPage={this.updateRefreshPage} accountName={v.accountName} brithday={v.birthday} displayName={v.displayName} phone={v.phone} title={v.title} department={v.department} address={v.address} history={this.props.history} />\n                                        </Grid>\n                                    )\n                                })\n                                :\n                                [1, 2, 3].map((_, i) => {\n                                    return (\n                                        <Grid key={i} item xs={4}>\n                                            <Paper style={{ padding: '10px 0' }}>\n                                                <Loading number={[0, 1, 2, 3, 4]} />\n                                            </Paper>\n                                        </Grid>\n                                    )\n                                })\n                        }\n                    </Grid>\n                    {\n                        <Paper style={{ display: 'flex', justifyContent: 'center', width: '100%', marginTop: 16, padding: '4px 0' }}>\n                            <Button size={'small'} color=\"default\" disabled={this.state.before <= 0} onClick={() => this.onClickNavigateBefore()} ><NavigateBeforeIcon /></Button>\n                            <Typography component={'span'} style={{lineHeight:2,padding:'0 8px'}}>{this.state.count + 1}</Typography>\n                            <Button size={'small'} color=\"default\" disabled={this.state.number > this.state.datas.length} onClick={() => this.onClickNavigateNext()} ><NavigateNextIcon /></Button>\n                        </Paper>\n                    }\n                </Fragment>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n\n            </Fragment >\n        );\n    }\n}\n\nUserManage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 200,\n        width: '100%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    buttonLeftSpace: {\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n    },\n    list_userManage_card: {\n        padding: '2px 0',\n        marginLeft: -26\n    },\n    listItem_userManage_card: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    listItemText_userManage_card: {\n        paddingLeft: 4\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    userSearchBtn: {\n        height: 36,\n        marginTop: 12\n    },\n});\n\nexport default withStyles(styles)(UserManage);","import React, { Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport TextField from '@material-ui/core/TextField';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Grid from '@material-ui/core/Grid';\nimport Lock from '@material-ui/icons/Lock';\nimport md5 from 'md5'\nimport AuthService from '../common/authService'\nimport { Link } from 'react-router-dom';\n\nclass SignIn extends React.Component {\n    _Mount = true\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            open: false,\n            noticeMessage: null,\n            username: '',\n            password: '',\n            repassword: ''\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleEnterKey);\n    }\n\n    componentWillUmount() {\n        document.removeEventListener(\"keydown\", this.handleEenterKey);\n    }\n\n    handleEnterKey = (e) => {\n        if (e.keyCode === 13) {\n            this.onClickRegister()\n        }\n    }\n\n    onClickRegister = () => {\n        if (this.state.username !== '' && this.state.password !== '' && this.state.password === this.state.repassword) {\n\n            let reg = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/\n\n            if (!reg.test(this.state.username)) {\n                this.setState({ open: true, noticeMessage: '邮箱格式不正确,请重新输入!' })\n                return false\n            }\n\n            const datas = JSON.stringify({\n                username: this.state.username,\n                password: md5(this.state.password)\n            })\n\n            this.authService.postData('/login/register', datas).then((res) => {\n                if (this._Mount) {\n                    if (res.result) {\n                        this.setState({\n                            username: '', password: '', repassword: '',\n                            open: true, noticeMessage: res.message\n                        })\n                    } else {\n                        this.setState({ open: true, noticeMessage: res.message })\n                    }\n                }\n            })\n        }\n        else {\n            this.setState({\n                open: true, noticeMessage: '邮箱或密码填写有误或未填写完整!'\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this._Mount = false\n    }\n\n    onChangeUserName = (e) => {\n        this.setState({ username: e.target.value })\n    }\n\n    onChangePassword = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n    onChangeRePassword = (e) => {\n        this.setState({ repassword: e.target.value })\n    }\n\n    onClickNoticeOpen = () => {\n        this.setState({ open: true });\n    };\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        return (\n            <Fragment>\n                <Grid container justify={\"center\"}>\n                    <Grid item xs={12} sm={10} md={6} lg={4}>\n                        <Paper style={{ height: 530, marginTop: 120 }} elevation={12}>\n                            <div style={{ height: 220, backgroundColor: '#3F51B5', borderTopLeftRadius: 4, borderTopRightRadius: 4 }}>\n                                <div style={{ display: 'flex', justifyContent: 'center' }}><img src='/imgs/logo_big.png' alt='' style={{ height: 60, marginTop: 30 }} /></div>\n                                <div style={{ display: 'flex', justifyContent: 'center' }}><Typography style={{ color: 'white', marginTop: 40 }}>已有登录邮箱?<Link to='/' style={{ color: 'white' }}>登录</Link></Typography></div>\n                            </div>\n                            <Paper style={{ height: 260, margin: '-60px 40px 0 40px', padding: 30 }} elevation={12}>\n                                <Grid container justify={\"center\"} direction={'column'}>\n                                    <Grid container spacing={4} alignItems=\"flex-end\" alignContent=\"center\" >\n                                        <Grid item>\n                                            <MailIcon />\n                                        </Grid>\n                                        <Grid item lg={10} md={10} sm={10} xl={10} xs={10}>\n                                            <TextField id=\"input-mail-1\" fullWidth label=\"邮箱\" onChange={this.onChangeUserName} value={this.state.username} />\n                                        </Grid>\n                                    </Grid>\n\n                                    <div style={{ margin: 10 }} />\n\n                                    <Grid container spacing={4} alignItems=\"flex-end\" alignContent=\"center\" >\n                                        <Grid item>\n                                            <Lock />\n                                        </Grid>\n                                        <Grid item lg={10} md={10} sm={10} xl={10} xs={10}>\n                                            <TextField id=\"input-passwrd-1\" type={'password'} fullWidth label=\"设置密码\" onChange={this.onChangePassword} value={this.state.password} />\n                                        </Grid>\n                                    </Grid>\n\n                                    <div style={{ margin: 10 }} />\n\n                                    <Grid container spacing={4} alignItems=\"flex-end\" alignContent=\"center\" >\n                                        <Grid item>\n                                            <Lock />\n                                        </Grid>\n                                        <Grid item lg={10} md={10} sm={10} xl={10} xs={10}>\n                                            <TextField id=\"input-passwrd-2\" type={'password'} fullWidth label=\"确认密码\" onChange={this.onChangeRePassword} value={this.state.repassword} />\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item style={{ margin: '30px 20px 20px 20px' }}>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            size=\"large\"\n                                            onClick={this.onClickRegister}\n                                        >\n                                            注册\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </Fragment>\n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Grid from '@material-ui/core/Grid';\nimport querySearch from \"stringquery\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DesktopAccessDisabledIcon from '@material-ui/icons/DesktopAccessDisabled';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n\nimport AuthService from '../common/authService'\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Edit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: '',\n            result: {\n                _id: '',\n                accountName: '',\n                displayName: '',\n                phone: '',\n                birthday: '',\n                department: '',\n                title: '',\n                address: '',\n                status: false,\n                role: '',\n            },\n\n        };\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickBack = () => {\n        this.props.history.go(-1)\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('编辑人员')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n        const info = JSON.stringify({\n            _id: querySearch(this.props.location.search).id\n        })\n        this.authService.postData('/user/find', info).then((res) => {\n            if (res.result) {\n                this.setState({ result: res.message })\n                this.props.onChangeRefresh(false)\n            } else {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onChangeStatus = () => {\n        const { result } = { ...this.state };\n        const currentState = result;\n        currentState['status'] = !this.state.result.status\n        this.setState({ result: currentState })\n    }\n\n    onChangeField = (e) => {\n        const { result } = { ...this.state };\n        const currentState = result;\n        const { id, value } = e.target;\n        currentState[id] = value;\n\n        this.setState({ result: currentState });\n    }\n\n    onClickSave = () => {\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify(this.state.result)\n        this.authService.postData('/user/edit', info).then((res) => {\n            this.setState({ open: true, noticeMessage: res.message })\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onChangeDeleteUser = () => {\n        const info = JSON.stringify({\n            id: this.state.result._id\n        })\n\n        this.authService.postData('/user/del', info).then((res) => {\n            if (res.result) {\n                this.props.history.push(`/muser`)\n            }\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { value, result, open, noticeMessage } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={this.onChangeTab}>\n                        <Tab label=\"基本资料\" />\n                        <Tab label=\"相关信息\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"accountName\"\n                                    fullWidth\n                                    label=\"邮箱\"\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                    value={result.accountName}\n                                    onChange={null}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"displayName\"\n                                    fullWidth\n                                    label=\"姓名\"\n                                    value={result.displayName}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"phone\"\n                                    fullWidth\n                                    label=\"电话\"\n                                    value={result.phone}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"birthday\"\n                                    fullWidth\n                                    type=\"date\"\n                                    label=\"生日\"\n                                    value={result.birthday}\n                                    onChange={this.onChangeField}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"department\"\n                                    fullWidth label=\"部门\"\n                                    value={result.department}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"title\"\n                                    fullWidth label=\"岗位\"\n                                    value={result.title}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={8}>\n                                <TextField\n                                    id=\"address\"\n                                    fullWidth\n                                    label=\"地址\"\n                                    value={result.address}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                {\n                    value === 1 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={8} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"role\"\n                                    fullWidth\n                                    label=\"角色\"\n                                    value={result.role}\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} style={{ height: 30 }}></Grid>\n                            <Grid item xs={4}>\n                                <DesktopAccessDisabledIcon style={{ color: 'red', marginTop: 12, marginRight: 12 }} />\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>该用户当前是否被禁止使用？</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"status\"\n                                        aria-label=\"status\"\n                                        value={result.status ? '1' : '0'}\n                                        onChange={this.onChangeStatus}\n                                    >\n                                        <FormControlLabel value={'0'} control={<Radio />} label=\"是\" />\n                                        <FormControlLabel value={'1'} control={<Radio />} label=\"否\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickBack}><ReplyIcon className={classes.extendedIcon} />返回</Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSave}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                        </div>\n                        <div>\n                            <Button variant=\"contained\" color='primary' onClick={this.onChangeDeleteUser}><DeleteIcon className={classes.extendedIcon} />删除</Button>\n                        </div>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    bottomCard: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 20px'\n    },\n    cardContent: {\n        padding: '30px 40px 30px 40px'\n    }\n});\n\nEdit.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Edit);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport md5 from 'md5'\nimport TextField from '@material-ui/core/TextField';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport AuthService from '../common/authService'\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Add extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: '',\n            result: {\n                accountName: '',\n                passWord: '',\n                displayName: '',\n                phone: '',\n                birthday: '',\n                department: '',\n                title: '',\n                address: '',\n                role: '',\n                permission: {}\n            },\n\n        };\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickBack = () => {\n        this.props.history.go(-1)\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('新建人员')\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onChangeField = (e) => {\n        const { result } = { ...this.state };\n        const currentState = result;\n        const { id, value } = e.target;\n        currentState[id] = value;\n\n        this.setState({ result: currentState });\n    }\n\n    onClickSave = () => {\n        this.props.onChangeRefresh(true)\n\n        let reg = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/\n\n        if (!reg.test(this.state.result.accountName)) {\n            this.setState({ open: true, noticeMessage: '邮箱格式不正确,请重新输入!' })\n            this.props.onChangeRefresh(false)\n            return false\n        }\n\n        if (this.state.result.passWord === '' || this.state.result.passWord === null) {\n            this.setState({ open: true, noticeMessage: '密码没有设置,请填写完整!' })\n            this.props.onChangeRefresh(false)\n            return false\n        } else {\n            const { result } = { ...this.state };\n            const currentState = result;\n            currentState['passWord'] = md5(this.state.result.passWord)\n            this.setState({ result: currentState })\n        }\n\n        let info = JSON.stringify(this.state.result)\n\n        this.authService.postData('/user/add', info).then((res) => {\n\n            const { result } = { ...this.state };\n            const currentState = result;\n            currentState['accountName'] = ''\n            currentState['passWord'] = ''\n            currentState['displayName'] = ''\n\n            this.setState({ open: true, noticeMessage: res.message, result: currentState })\n            this.props.onChangeRefresh(false)\n        })\n\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { value, result, open, noticeMessage } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={this.onChangeTab}>\n                        <Tab label=\"基本资料\" />\n                        <Tab label=\"相关信息\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={4} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"accountName\"\n                                    fullWidth\n                                    label=\"邮箱\"\n                                    value={result.accountName}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"passWord\"\n                                    type=\"password\"\n                                    fullWidth\n                                    label=\"密码\"\n                                    value={result.passWord}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"displayName\"\n                                    fullWidth\n                                    label=\"姓名\"\n                                    value={result.displayName}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"phone\"\n                                    fullWidth\n                                    label=\"电话\"\n                                    value={result.phone}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"birthday\"\n                                    fullWidth\n                                    type=\"date\"\n                                    label=\"生日\"\n                                    value={result.birthday}\n                                    onChange={this.onChangeField}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"department\"\n                                    fullWidth label=\"部门\"\n                                    value={result.department}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"title\"\n                                    fullWidth label=\"岗位\"\n                                    value={result.title}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={8}>\n                                <TextField\n                                    id=\"address\"\n                                    fullWidth\n                                    label=\"地址\"\n                                    value={result.address}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                {\n                    value === 1 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={4} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"role\"\n                                    fullWidth\n                                    label=\"所属角色\"\n                                    value={result.role}\n                                    onChange={this.onChangeField}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickBack}><ReplyIcon className={classes.extendedIcon} />返回</Button>\n                        </div>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSave}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                        </div>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    bottomCard: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 20px'\n    },\n    cardContent: {\n        padding: '15px 40px 30px 40px'\n    }\n});\n\nAdd.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Add);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Grid from '@material-ui/core/Grid';\nimport AuthService from '../common/authService'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nclass RoleAdd extends Component {\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: null,\n            roleName: '',\n            roleDescription: ''\n        };\n    }\n\n    componentWillMount() {\n        this.props.onChangeBarTitle('增加角色')\n    }\n\n    onChangeTabIndex = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickNavigationBack = () => {\n        this.props.history.go(-1)\n    }\n\n    onChangeRoleName = (e) => {\n        this.setState({ roleName: e.target.value })\n    }\n\n    onChangeRoleDescription = (e) => {\n        this.setState({ roleDescription: e.target.value })\n    }\n\n    onChangeSubmit = () => {\n\n        if (this.state.roleName === '' || this.state.roleDescription === '') {\n            this.setState({ open: true, noticeMessage: '必填信息有误' })\n            return false;\n        }\n\n        this.props.onChangeRefresh(true)\n        let info = JSON.stringify({\n            displayName: this.state.roleName,\n            description: this.state.roleDescription,\n            module: ['_3', '0']\n        })\n        this.authService.postData('/role/add', info).then((res) => {\n            this.setState({ open: true, noticeMessage: res.message, roleName: '', roleDescription: '' })\n            this.props.onChangeRefresh(false)\n        })\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { value, roleName, roleDescription } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={this.onChangeTabIndex}>\n                        <Tab label=\"角色属性\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={8} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    fullWidth\n                                    label=\"角色名称\"\n                                    value={roleName}\n                                    onChange={this.onChangeRoleName}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={8}>\n                                <TextField\n                                    fullWidth\n                                    label=\"角色描述\"\n                                    multiline\n                                    rows=\"4\"\n                                    value={roleDescription}\n                                    onChange={this.onChangeRoleDescription}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={12}></Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickNavigationBack}><ReplyIcon className={classes.extendedIcon} />返回</Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.onChangeSubmit}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {this.state.noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nRoleAdd.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    extendedIcon: {\n        marginRight: 4\n    }\n});\n\nexport default withStyles(styles)(RoleAdd);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Grid from '@material-ui/core/Grid';\nimport querySearch from \"stringquery\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport md5 from 'md5'\n\nimport AuthService from '../common/authService'\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Passwrd extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.authService = new AuthService()\n        this.state = {\n            value: 0,\n            open: false,\n            noticeMessage: '',\n            _id: querySearch(this.props.location.search).id,\n            passWord: '',\n            rePassWord: '',\n            result: {\n                _id: '',\n                accountName: '',\n                displayName: ''\n            },\n\n        };\n    }\n\n    onChangeTab = (_, value) => {\n        this.setState({ value });\n    };\n\n    onClickBack = () => {\n        this.props.history.go(-1)\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('重置密码')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        this.props.onChangeRefresh(true)\n\n        const info = JSON.stringify({\n            _id: this.state._id\n        })\n\n        this.authService.postData('/user/find', info).then((res) => {\n            if (res.result) {\n                this.setState({ result: res.message })\n                this.props.onChangeRefresh(false)\n            } else {\n                this.setState({ data: [], open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            }\n        })\n    }\n\n    onChangeFieldPwd = (e) => {\n        this.setState({ passWord: e.target.value })\n    }\n\n    onChangeFieldRePwd = (e) => {\n        this.setState({ rePassWord: e.target.value })\n    }\n\n    onClickSave = () => {\n        if (this.state.passWord === '' || this.state.rePassWord === '') {\n            this.setState({ open: true, noticeMessage: '修改密码不能为空' })\n            return false\n        }\n        if (this.state.passWord === this.state.rePassWord) {\n            this.props.onChangeRefresh(true)\n            let info = JSON.stringify({\n                _id: this.state._id,\n                passWord: md5(this.state.passWord),\n                rePassWord: md5(this.state.rePassWord)\n            })\n            this.authService.postData('/user/pwd', info).then((res) => {\n                this.setState({ open: true, noticeMessage: res.message })\n                this.props.onChangeRefresh(false)\n            })\n        } else {\n            this.setState({ open: true, noticeMessage: '修改密码不一致' })\n        }\n\n    }\n\n    onClickNoticeClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { value, result, open, noticeMessage, passWord, rePassWord } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value}>\n                        <Tab label=\"基本资料\" />\n                    </Tabs>\n                </AppBar>\n                {\n                    value === 0 &&\n                    <CardContent className={classes.cardContent}>\n                        <Grid container spacing={2} alignItems=\"flex-end\">\n                            <Grid item xs={4}>\n                                <TextField\n                                    fullWidth\n                                    label=\"邮箱\"\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                    value={result.accountName}\n                                    onChange={null}\n                                />\n                            </Grid>\n                            <Grid item xs={12}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    fullWidth\n                                    label=\"姓名\"\n                                    InputProps={{\n                                        disabled: true,\n                                    }}\n                                    value={result.displayName}\n                                    onChange={null}\n                                />\n                            </Grid>\n                            <Grid item xs={12}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"passWord\"\n                                    fullWidth\n                                    label=\"设置密码\"\n                                    type={'password'}\n                                    value={passWord}\n                                    onChange={this.onChangeFieldPwd}\n                                />\n                            </Grid>\n                            <Grid item xs={8}></Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"rePassWord\"\n                                    fullWidth\n                                    label=\"确认密码\"\n                                    type={'password'}\n                                    value={rePassWord}\n                                    onChange={this.onChangeFieldRePwd}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                }\n                <Card className={classes.bottomCard}>\n                    <CardActions className={classes.bottomButton}>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.extendedIcon} onClick={this.onClickBack}><ArrowBackIcon className={classes.extendedIcon} />返回</Button>\n                        </div>\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickSave}><SaveIcon className={classes.extendedIcon} />保存</Button>\n                        </div>\n                    </CardActions>\n                </Card>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    onClose={this.onClickNoticeClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                >\n                    <SnackbarContent\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span style={{ display: 'flex', alignItems: 'center', }}>\n                                {noticeMessage}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    bottomCard: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    bottomButton: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 20px'\n    },\n    cardContent: {\n        padding: '30px 40px 30px 40px'\n    }\n});\n\nPasswrd.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Passwrd);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nimport { LocalStorageKey } from '../common/config.js'\nimport AuthService from '../common/authService'\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChangeBarTitle('个人资料')\n        this.RefreshInfo()\n        this.props.onChangeChildFuncion(this)\n    }\n\n    RefreshInfo() {\n        // this.props.onChangeRefresh(true)\n        // this.authService.postData('/dashboard', null).then(res => {\n        //     if (res.result) {\n        //         var v = res.message\n        //         this.setState(v)\n        //         this.props.onChangeRefresh(false)\n        //     } else {\n        //         this.props.onChangeRefresh(false)\n        //     }\n        // })\n    }\n\n    getToken() {\n        return JSON.parse(localStorage.getItem(LocalStorageKey))\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <Fragment>\n                <Grid container className={classes.root}>\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/imgs/card/post-1.png\"\n                                title=\"个人资料背景\"\n                            >\n                                <Grid container className={classes.media} justify='center' direction=\"column\" alignItems=\"center\">\n                                    <Avatar alt=\"\" style={{ height: 120, width: 120 }} src=\"/imgs/user/default.png\" />\n                                    <Typography variant=\"h5\" style={{ marginTop: 12, color: 'white' }}>{unescape(this.getToken().u.d)}</Typography>\n                                    <Grid>\n                                        <Button variant=\"contained\" className={classes.button}>\n                                            技术部\n                                        </Button>\n                                        <Button variant=\"contained\" className={classes.button}>\n                                            UI设计师\n                                        </Button>\n                                        <Button variant=\"contained\" className={classes.button}>\n                                            Level5\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </CardMedia>\n                            <CardContent>\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    be\n                                    nev\n                                    lent\n                                </Typography>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    adjective\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">更多信息</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                    </Grid>\n                </Grid>\n            </Fragment>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    media: {\n        height: 333\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n})\n\nexport default withStyles(styles)(Dashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { grey } from '@material-ui/core/colors';\n\nconst styles = theme => ({\n    root: {\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        top: 36,\n        right: 0,\n        left: 0,\n    },\n    fake: {\n        backgroundColor: grey[200],\n        height: theme.spacing(1),\n        margin: theme.spacing(2),\n        // Selects every two elements among any group of siblings.\n        '&:nth-child(2n)': {\n            marginRight: theme.spacing(3),\n        },\n    },\n});\n\nclass ClickAway extends React.Component {\n    state = {\n        open: false,\n        ClickAwayListener: false\n    };\n\n    handleClick = () => {\n        this.setState({\n            open: true,\n            ClickAwayListener: true\n        });\n    };\n\n    handleClickAway = () => {\n        console.log('!!!')\n        if (this.state.ClickAwayListener) {\n            this.setState({\n                ClickAwayListener: false,\n                open: true\n            })\n        } else {\n            this.setState({\n                ClickAwayListener: true,\n                open: false\n            })\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { open } = this.state;\n        const fake = <div className={classes.fake} />;\n\n        return (\n            <div className={classes.root}>\n                <Button onClick={this.handleClick}>Open menu</Button>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <div>\n                        {open ? (\n                            <Paper className={classes.paper}>\n                                {fake}\n                                {fake}\n                                {fake}\n                                {fake}\n                                {fake}\n                            </Paper>\n                        ) : null}\n                    </div>\n                </ClickAwayListener>\n            </div>\n        );\n    }\n}\n\nClickAway.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ClickAway);","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport SideMenu from './common/sideMenu'\n\nimport Setup from './setup'\nimport Dashboard from './dashboard'\nimport Helper from './helper'\nimport Download from './download'\nimport Role from './role'\nimport Documents from './documents/personal'\nimport Userauth from './permission'\nimport Logs from './logs'\nimport Errorpage from './errorpage'\nimport Login from './login'\nimport Share from './documents/share'\nimport Setting from './setting'\nimport User from './user'\nimport UserManage from './user/manage'\nimport Register from './register'\nimport UserEdit from './user/edit.js'\nimport UserAdd from './user/add.js'\nimport CreateRole from './role/roleadd'\nimport Password from './user/pwd'\nimport Person from './person'\n\nimport Test from './test'\n\nimport { LocalStorageKey } from './common/config.js'\n\nconst drawerWidth = 180;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // this.onScrollHideBar = this.onScrollHideBar.bind(this);\n    this.state = {\n      anchorEl: null,\n      barTitle: '',\n      refresh: false,\n      open: true,\n      // barHide: false\n    }\n  }\n\n  // componentDidMount() {\n  //   window.addEventListener('scroll', this.onScrollHideBar);\n  // };\n\n  // componentWillUnmount() {\n  //   window.removeEventListener('scroll', this.onScrollHideBar);\n  // };\n\n  // onScrollHideBar() {\n  //   if (window.scrollY > 60) {\n  //     this.setState({ barHide: true })\n  //   }\n  //   else {\n  //     this.setState({ barHide: false })\n  //   }\n  // }\n\n  loggedIn() {\n    const token = localStorage.getItem(LocalStorageKey)\n    return !!token && !this.isTokenExpired(JSON.parse(token).t)\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < (Date.now() / 1000)) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n    catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return JSON.parse(localStorage.getItem(LocalStorageKey))\n  }\n\n  onClickDrawerOpen = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleProfileMenuClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleLogout = () => {\n    this.setState({ anchorEl: null });\n    localStorage.removeItem(this.state.localStorageKey)\n    localStorage.clear()\n  }\n\n  onChangeBarTitle = (e) => {\n    this.setState({ barTitle: e })\n  }\n\n  onChangeRefresh = (e) => {\n    this.setState({ refresh: e })\n  }\n\n  onChangeChildFuncion = (e) => {\n    this.child = e\n  }\n\n  onClickRefresh = () => {\n    this.child.RefreshInfo()\n  }\n\n  render() {\n    const { anchorEl, barTitle, open, barHide } = this.state;\n    const { classes } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route\n              render={({ location }) => (\n                <div\n                  className={classes.root}\n                >\n                  {\n                    this.loggedIn()\n                      ?\n                      <Fragment>\n\n                        <CssBaseline />\n\n                        <AppBar className={barHide ? classes.appBarHide : classes.appBar}>\n                          <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                              <IconButton\n                                className={open ? classes.menuButton : classes.menuIconButtonTransform}\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={this.onClickDrawerOpen}\n                              >\n                                <MenuIcon />\n                              </IconButton>\n                              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                {barTitle}\n                              </Typography>\n                            </div>\n                            <Typography noWrap>\n                              <img src='/imgs/logo.png' alt='' style={{ height: 55 }} />\n                            </Typography>\n                            <div className={classes.sectionDesktop}>\n                              <IconButton color=\"inherit\" onClick={this.onClickRefresh} >\n                                {\n                                  this.state.refresh\n                                    ?\n                                    <CircularProgress size={22} className={classes.progress} />\n                                    :\n                                    <RefreshIcon />\n                                }\n                              </IconButton>\n                              <IconButton\n                                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleProfileMenuOpen}\n                                color=\"inherit\"\n                              >\n                                <AccountCircle />\n                              </IconButton>\n                              <Menu\n                                anchorEl={anchorEl}\n                                open={Boolean(anchorEl)}\n                                onClose={this.handleProfileMenuClose}\n                              >\n                                <MenuItem><Link to='/person' style={{ textDecoration: 'none', color: 'black' }} onClick={this.handleProfileMenuClose}>个人资料</Link></MenuItem>\n                                <MenuItem onClick={this.handleLogout}>退出系统</MenuItem>\n                              </Menu>\n                            </div>\n                          </Toolbar>\n                        </AppBar>\n\n                        <Drawer\n                          variant=\"permanent\"\n                          classes={{\n                            paper: open ? classes.paper : classes.minPaper\n                          }}\n                          open={open}\n                        >\n                          <div className={classes.toolbar} />\n                          <SideMenu open={open} />\n                        </Drawer>\n\n                        <div className={open ? classes.main : classes.minMain}>\n                          <div className={classes.toolbar} />\n                          <Switch key={location.key}>\n                            <Route exact path='/' render={(props) => <Dashboard {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/share' render={(props) => <Share {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/role' render={(props) => <Role {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/user' render={(props) => <User {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/uedit' render={(props) => <UserEdit {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/uadd' render={(props) => <UserAdd {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/muser' render={(props) => <UserManage {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/pwd' render={(props) => <Password {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/doc' render={(props) => <Documents {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/auth' render={(props) => <Userauth {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/log' render={(props) => <Logs {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/setting' render={(props) => <Setting {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/roleadd' render={(props) => <CreateRole {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/person' render={(props) => <Person {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route path='/helper' render={(props) => <Helper {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n\n                              <Route path='/test' render={(props) => <Test {...props} onChangeBarTitle={(e) => this.onChangeBarTitle(e)} onChangeRefresh={(e) => this.onChangeRefresh(e)} onChangeChildFuncion={(e) => this.onChangeChildFuncion(e)} />} />} />\n                              <Route component={Errorpage} />\n                          </Switch>\n                        </div>\n\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Switch key={location.key}>\n                          <Route exact path='/' render={(props) => <Login {...props} />} />\n                          <Route path='/register' render={(props) => <Register {...props} />} />\n                          <Route path='/setup' render={(props) => <Setup {...props} />} />\n                          <Route path='/download' render={(props) => <Download {...props} />} />\n                          <Route component={Login} />\n                        </Switch>\n                      </Fragment>\n                  }\n                </div>\n              )}\n            />\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#3F51B5' },\n    secondary: { main: '#fdb94e', contrastText: '#fff', },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    marginTop: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarHide: {\n    zIndex: theme.zIndex.drawer + 1,\n    marginTop: -64,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  paper: {\n    position: 'absolute',\n    width: drawerWidth,\n    flexShrink: 0,\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    backgroundColor: 'transparent',\n    borderRight: 0,\n    [theme.breakpoints.down('sm')]: {\n      width: 0,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n    [theme.breakpoints.up('md')]: {\n      width: theme.spacing(9),\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n  },\n  minPaper: {\n    position: 'absolute',\n    flexShrink: 0,\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    backgroundColor: 'transparent',\n    borderRight: 0,\n    width: theme.spacing(9),\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  main: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginLeft: 165,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down('md')]: {\n      marginLeft: 55,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      })\n    },\n  },\n  minMain: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginLeft: 55,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  toolbar: theme.mixins.toolbar,\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n    },\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n    transform: 'rotate(0deg)',\n    transition: '0.5s'\n  },\n  menuIconButtonTransform: {\n    marginLeft: -12,\n    marginRight: 20,\n    transform: 'rotate(-180deg)',\n    transition: '0.5s',\n  },\n  progress: {\n    color: 'white'\n  },\n});\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'es6-shim'\nimport 'isomorphic-fetch'\nimport App from './App'\nimport './style.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}